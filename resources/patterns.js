var patterns = {};

// replace pattern to make svg's zoomable
// ([0-9]+\.[0-9]+)
// $1 * zoomfactor

// ([0-9]+\.[0-9|e|-]+)(,|\))
// $1 * zoomfactor$2

var PatternHelper = {
    createAll: function() {
        patterns.stairsX = this.stairsX();
        patterns.stairsY = this.stairsY();
        patterns.cookie = this.cookie();
        patterns.player0 = this.player0();
        patterns.player1 = this.player1();
        patterns.player2 = this.player2();
        patterns.player3 = this.player3();
        patterns.player4 = this.player4();
        patterns.player5 = this.player5();
        patterns.player6 = this.player6();
        patterns.player7 = this.player7();
        patterns.heizungA = this.heizungA();
        patterns.heizungM = this.heizungM();
        patterns.heizungE = this.heizungE();
        patterns.tisch2 = this.tisch2();
        patterns.portal = this.portal();
        patterns.pissoir = this.pissoir();
        patterns.stop = this.stop();
        patterns.en_glauben = this.en_glauben();
        patterns.en_mueller = this.en_mueller();
        patterns.en_hilchenbach = this.en_hilchenbach();
	patterns.logo = this.logo();
    },
    stairsX: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        patternContext.fillStyle = '#999';
        patternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);
        patternContext.fillStyle = '#888';
        patternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height / 4);
        patternContext.fillRect(0, 2 * patternCanvas.height / 4, patternCanvas.width, patternCanvas.height / 4);

        return context.createPattern(patternCanvas, 'repeat');
    },
    stairsY: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        patternContext.fillStyle = '#999';
        patternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);
        patternContext.fillStyle = '#888';
        patternContext.fillRect(0, 0, patternCanvas.width / 4, patternCanvas.height);
        patternContext.fillRect(2 * patternCanvas.width / 4, 0, patternCanvas.width / 4, patternCanvas.height);

        return context.createPattern(patternCanvas, 'repeat');
    },
    cookie: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;


        // #path1150
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(174, 124, 59)';
        patternContext.lineWidth = 0.068794 * zoomfactor;
        patternContext.arc(39.842613 * zoomfactor, 40.399857 * zoomfactor, 35.484756 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.009266 * zoomfactor;
        patternContext.arc(30.212559 * zoomfactor, 25.022020 * zoomfactor, 4.779509 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-6
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.007800 * zoomfactor;
        patternContext.arc(12.767544 * zoomfactor, 36.114227 * zoomfactor, 4.023223 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-6-91
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.006920 * zoomfactor;
        patternContext.arc(67.724388 * zoomfactor, 49.424877 * zoomfactor, 3.569451 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-6-9
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.005356 * zoomfactor;
        patternContext.arc(36.666210 * zoomfactor, 71.609291 * zoomfactor, 2.762745 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.005747 * zoomfactor;
        patternContext.arc(48.918049 * zoomfactor, 38.383087 * zoomfactor, 2.964421 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.006725 * zoomfactor;
        patternContext.arc(48.615543 * zoomfactor, 14.988617 * zoomfactor, 3.468613 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-62
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.007995 * zoomfactor;
        patternContext.arc(57.136368 * zoomfactor, 30.366447 * zoomfactor, 4.124062 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-70
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.010048 * zoomfactor;
        patternContext.arc(49.321411 * zoomfactor, 59.054932 * zoomfactor, 5.182863 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-3
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.008191 * zoomfactor;
        patternContext.arc(26.985737 * zoomfactor, 55.576004 * zoomfactor, 4.224899 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        // #path1150-8-9
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(117, 83, 40)';
        patternContext.lineWidth = 0.006725 * zoomfactor;
        patternContext.arc(35.506565 * zoomfactor, 41.408230 * zoomfactor, 3.468613 * zoomfactor, 0.000000, 6.28318531, 1);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player0: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(19, 19, 19)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.700000 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(65.169242 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(31.412523 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(29.948573 * zoomfactor, 148.404890 * zoomfactor, 29.987746 * zoomfactor, 170.179050 * zoomfactor, 47.267952 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(59.590230 * zoomfactor, 205.069610 * zoomfactor, 74.565908 * zoomfactor, 219.370110 * zoomfactor, 111.201130 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(205.674330 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(219.116660 * zoomfactor, 223.546540 * zoomfactor, 231.196600 * zoomfactor, 216.189150 * zoomfactor, 240.765160 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(248.824930 * zoomfactor, 204.520930 * zoomfactor, 256.663000 * zoomfactor, 198.665020 * zoomfactor, 261.571960 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(274.442920 * zoomfactor, 171.068070 * zoomfactor, 283.756300 * zoomfactor, 150.862350 * zoomfactor, 277.737570 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(243.980870 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(26, 26, 26)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.983000 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(105.707780 * zoomfactor, 10.460160 * zoomfactor);
        patternContext.bezierCurveTo(86.795824 * zoomfactor, 19.090652 * zoomfactor, 72.290751 * zoomfactor, 25.769829 * zoomfactor, 64.070831 * zoomfactor, 55.949125 * zoomfactor);
        patternContext.bezierCurveTo(64.706421 * zoomfactor, 81.870256 * zoomfactor, 74.480801 * zoomfactor, 103.215250 * zoomfactor, 105.287200 * zoomfactor, 114.028780 * zoomfactor);
        patternContext.bezierCurveTo(154.585260 * zoomfactor, 115.812970 * zoomfactor, 165.850030 * zoomfactor, 114.841080 * zoomfactor, 196.131440 * zoomfactor, 115.247230 * zoomfactor);
        patternContext.bezierCurveTo(226.800050 * zoomfactor, 105.009640 * zoomfactor, 244.244820 * zoomfactor, 88.386890 * zoomfactor, 245.759310 * zoomfactor, 64.072154 * zoomfactor);
        patternContext.bezierCurveTo(243.026620 * zoomfactor, 37.468221 * zoomfactor, 228.123230 * zoomfactor, 20.180674 * zoomfactor, 207.486960 * zoomfactor, 10.866312 * zoomfactor);
        patternContext.bezierCurveTo(174.682100 * zoomfactor, 10.324776 * zoomfactor, 155.041670 * zoomfactor, 11.001695 * zoomfactor, 105.707780 * zoomfactor, 10.460160 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(47.267952 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(13.511233 * zoomfactor, 250.745190 * zoomfactor);
        patternContext.lineTo(55.451401 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(58.520191 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(63.634846 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(114.269920 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(122.964840 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(125.522160 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(171.042590 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(173.088450 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(179.226030 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(228.326710 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(240.601880 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(243.159210 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(293.794290 * zoomfactor, 247.674010 * zoomfactor);
        patternContext.lineTo(261.571960 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(240.090420 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(207.356630 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(183.317760 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(111.201130 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(85.116395 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(59.543124 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player1: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        /// #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(19, 19, 19)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.575850 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(77.842083 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(48.835853 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(47.577923 * zoomfactor, 148.404890 * zoomfactor, 47.611583 * zoomfactor, 170.179050 * zoomfactor, 62.459993 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(73.048183 * zoomfactor, 205.069610 * zoomfactor, 85.916383 * zoomfactor, 219.370110 * zoomfactor, 117.396030 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(198.574280 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(210.124910 * zoomfactor, 223.546540 * zoomfactor, 220.504880 * zoomfactor, 216.189150 * zoomfactor, 228.726880 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(235.652420 * zoomfactor, 204.520930 * zoomfactor, 242.387460 * zoomfactor, 198.665020 * zoomfactor, 246.605590 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(257.665260 * zoomfactor, 171.068070 * zoomfactor, 265.668000 * zoomfactor, 150.862350 * zoomfactor, 260.496260 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(231.490050 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(26, 26, 26)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.768139 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(109.194750 * zoomfactor, 23.327016 * zoomfactor);
        patternContext.bezierCurveTo(92.383672 * zoomfactor, 32.108964 * zoomfactor, 79.489942 * zoomfactor, 38.897992 * zoomfactor, 72.183152 * zoomfactor, 66.352208 * zoomfactor);
        patternContext.bezierCurveTo(72.748132 * zoomfactor, 89.500249 * zoomfactor, 81.436702 * zoomfactor, 108.041810 * zoomfactor, 108.820890 * zoomfactor, 115.982030 * zoomfactor);
        patternContext.bezierCurveTo(152.642530 * zoomfactor, 114.807220 * zoomfactor, 162.655930 * zoomfactor, 113.304870 * zoomfactor, 189.573450 * zoomfactor, 111.966290 * zoomfactor);
        patternContext.bezierCurveTo(216.835150 * zoomfactor, 101.086210 * zoomfactor, 232.342020 * zoomfactor, 85.238479 * zoomfactor, 233.688260 * zoomfactor, 63.406357 * zoomfactor);
        patternContext.bezierCurveTo(231.259150 * zoomfactor, 39.765478 * zoomfactor, 218.011340 * zoomfactor, 25.141146 * zoomfactor, 199.667510 * zoomfactor, 17.970193 * zoomfactor);
        patternContext.bezierCurveTo(170.506870 * zoomfactor, 19.329508 * zoomfactor, 153.048250 * zoomfactor, 21.038751 * zoomfactor, 109.194750 * zoomfactor, 23.327016 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.955130 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(60.758113 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(45.772153 * zoomfactor, 252.484170 * zoomfactor);
        patternContext.lineTo(67.904163 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(70.583933 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(75.050213 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(119.266410 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(126.859090 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(129.092230 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(168.842140 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(170.628650 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(175.988190 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(218.864490 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(229.583570 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(231.816710 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(249.948210 * zoomfactor, 249.412990 * zoomfactor);
        patternContext.lineTo(247.895320 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(229.136950 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(200.552740 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(179.561220 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(116.586640 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(93.808603 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(71.477193 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path7615-3
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 1.381718 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(220.944450 * zoomfactor, 98.851423 * zoomfactor);
        patternContext.bezierCurveTo(238.572390 * zoomfactor, 130.875910 * zoomfactor, 249.983180 * zoomfactor, 129.052620 * zoomfactor, 223.398500 * zoomfactor, 210.378820 * zoomfactor);
        patternContext.bezierCurveTo(228.722800 * zoomfactor, 205.044050 * zoomfactor, 245.328880 * zoomfactor, 187.022600 * zoomfactor, 248.571750 * zoomfactor, 178.794290 * zoomfactor);
        patternContext.bezierCurveTo(257.074330 * zoomfactor, 159.425650 * zoomfactor, 262.120810 * zoomfactor, 153.966030 * zoomfactor, 258.144830 * zoomfactor, 130.152760 * zoomfactor);
        patternContext.lineTo(231.789900 * zoomfactor, 85.069153 * zoomfactor);
        patternContext.fill();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.177267 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(227.618500 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.bezierCurveTo(231.705860 * zoomfactor, 235.184140 * zoomfactor, 235.910110 * zoomfactor, 235.310950 * zoomfactor, 239.582760 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.bezierCurveTo(240.278980 * zoomfactor, 235.147840 * zoomfactor, 241.170190 * zoomfactor, 236.585050 * zoomfactor, 241.194120 * zoomfactor, 238.135350 * zoomfactor);
        patternContext.bezierCurveTo(241.323470 * zoomfactor, 246.517170 * zoomfactor, 241.290420 * zoomfactor, 256.215660 * zoomfactor, 241.234420 * zoomfactor, 265.955580 * zoomfactor);
        patternContext.bezierCurveTo(241.226420 * zoomfactor, 267.351530 * zoomfactor, 240.531550 * zoomfactor, 268.883760 * zoomfactor, 239.905060 * zoomfactor, 268.917090 * zoomfactor);
        patternContext.bezierCurveTo(236.043800 * zoomfactor, 269.122500 * zoomfactor, 231.744350 * zoomfactor, 269.086710 * zoomfactor, 227.497670 * zoomfactor, 268.917090 * zoomfactor);
        patternContext.bezierCurveTo(226.851840 * zoomfactor, 268.891290 * zoomfactor, 226.096260 * zoomfactor, 267.394450 * zoomfactor, 226.087740 * zoomfactor, 265.955580 * zoomfactor);
        patternContext.bezierCurveTo(226.035240 * zoomfactor, 257.073390 * zoomfactor, 226.022340 * zoomfactor, 247.171000 * zoomfactor, 226.047440 * zoomfactor, 238.673810 * zoomfactor);
        patternContext.bezierCurveTo(226.052440 * zoomfactor, 237.023940 * zoomfactor, 226.877900 * zoomfactor, 235.171980 * zoomfactor, 227.618500 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.133111 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(237.507530 * zoomfactor, 112.594080 * zoomfactor);
        patternContext.bezierCurveTo(239.738620 * zoomfactor, 111.982360 * zoomfactor, 242.044120 * zoomfactor, 111.395050 * zoomfactor, 244.030160 * zoomfactor, 110.774450 * zoomfactor);
        patternContext.bezierCurveTo(244.834730 * zoomfactor, 110.523000 * zoomfactor, 245.273360 * zoomfactor, 111.887200 * zoomfactor, 245.701420 * zoomfactor, 113.371210 * zoomfactor);
        patternContext.bezierCurveTo(248.015720 * zoomfactor, 121.394630 * zoomfactor, 250.593980 * zoomfactor, 130.706190 * zoomfactor, 253.170800 * zoomfactor, 140.061010 * zoomfactor);
        patternContext.bezierCurveTo(253.539680 * zoomfactor, 141.401890 * zoomfactor, 253.987240 * zoomfactor, 142.927310 * zoomfactor, 253.238900 * zoomfactor, 143.105010 * zoomfactor);
        patternContext.bezierCurveTo(251.108660 * zoomfactor, 143.610840 * zoomfactor, 248.756610 * zoomfactor, 144.224050 * zoomfactor, 246.474690 * zoomfactor, 144.992040 * zoomfactor);
        patternContext.bezierCurveTo(245.800330 * zoomfactor, 145.218990 * zoomfactor, 245.303060 * zoomfactor, 143.744080 * zoomfactor, 244.913230 * zoomfactor, 142.364660 * zoomfactor);
        patternContext.bezierCurveTo(242.506880 * zoomfactor, 133.849410 * zoomfactor, 239.848890 * zoomfactor, 124.349180 * zoomfactor, 237.587990 * zoomfactor, 116.191550 * zoomfactor);
        patternContext.bezierCurveTo(237.148250 * zoomfactor, 114.607820 * zoomfactor, 236.737720 * zoomfactor, 112.806920 * zoomfactor, 237.507590 * zoomfactor, 112.594090 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.126965 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(251.669460 * zoomfactor, 162.548630 * zoomfactor);
        patternContext.bezierCurveTo(250.448020 * zoomfactor, 160.425270 * zoomfactor, 249.224230 * zoomfactor, 158.223340 * zoomfactor, 248.071820 * zoomfactor, 156.346380 * zoomfactor);
        patternContext.bezierCurveTo(247.604970 * zoomfactor, 155.586000 * zoomfactor, 248.630170 * zoomfactor, 154.901610 * zoomfactor, 249.772970 * zoomfactor, 154.226800 * zoomfactor);
        patternContext.lineTo(259.433700 * zoomfactor, 148.522270 * zoomfactor);
        patternContext.bezierCurveTo(259.533600 * zoomfactor, 148.463570 * zoomfactor, 257.380830 * zoomfactor, 158.938120 * zoomfactor, 255.520330 * zoomfactor, 162.327730 * zoomfactor);
        patternContext.bezierCurveTo(254.965720 * zoomfactor, 162.569470 * zoomfactor, 252.092400 * zoomfactor, 163.280950 * zoomfactor, 251.669460 * zoomfactor, 162.548650 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player2: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(-0.264583, 0.000000, 0.000000, 0.264583, 81.841700 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.381718 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(214.789510 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(237.089270 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(238.056360 * zoomfactor, 148.404890 * zoomfactor, 238.030480 * zoomfactor, 170.179050 * zoomfactor, 226.615140 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(218.475020 * zoomfactor, 205.069610 * zoomfactor, 208.582050 * zoomfactor, 219.370110 * zoomfactor, 184.380750 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(121.971550 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(113.091510 * zoomfactor, 223.546540 * zoomfactor, 105.111480 * zoomfactor, 216.189150 * zoomfactor, 98.790469 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(93.466169 * zoomfactor, 204.520930 * zoomfactor, 88.288319 * zoomfactor, 198.665020 * zoomfactor, 85.045449 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(76.542869 * zoomfactor, 171.068070 * zoomfactor, 70.390429 * zoomfactor, 150.862350 * zoomfactor, 74.366409 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(96.666159 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(218.156250 * zoomfactor, 89.103469 * zoomfactor);
        patternContext.lineTo(93.188199 * zoomfactor, 85.445874 * zoomfactor);
        patternContext.lineTo(84.084249 * zoomfactor, 104.015280 * zoomfactor);
        patternContext.lineTo(74.366409 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.bezierCurveTo(127.460640 * zoomfactor, 98.050205 * zoomfactor, 79.267479 * zoomfactor, 152.297270 * zoomfactor, 229.528010 * zoomfactor, 182.547410 * zoomfactor);
        patternContext.bezierCurveTo(242.782870 * zoomfactor, 152.427800 * zoomfactor, 238.888440 * zoomfactor, 125.402550 * zoomfactor, 218.156250 * zoomfactor, 89.103469 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.357921 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(198.141960 * zoomfactor, 42.408596 * zoomfactor);
        patternContext.bezierCurveTo(213.035180 * zoomfactor, 49.009302 * zoomfactor, 224.458180 * zoomfactor, 54.107590 * zoomfactor, 231.026860 * zoomfactor, 72.755658 * zoomfactor);
        patternContext.bezierCurveTo(230.621010 * zoomfactor, 88.183421 * zoomfactor, 223.016870 * zoomfactor, 100.179350 * zoomfactor, 198.846590 * zoomfactor, 104.277280 * zoomfactor);
        patternContext.bezierCurveTo(160.111920 * zoomfactor, 101.568540 * zoomfactor, 151.255960 * zoomfactor, 100.125900 * zoomfactor, 127.460640 * zoomfactor, 98.050205 * zoomfactor);
        patternContext.bezierCurveTo(103.322610 * zoomfactor, 89.589943 * zoomfactor, 89.553499 * zoomfactor, 78.329713 * zoomfactor, 88.275499 * zoomfactor, 63.696461 * zoomfactor);
        patternContext.bezierCurveTo(90.326889 * zoomfactor, 48.021567 * zoomfactor, 101.976340 * zoomfactor, 38.840823 * zoomfactor, 118.159800 * zoomfactor, 34.859412 * zoomfactor);
        patternContext.bezierCurveTo(143.937690 * zoomfactor, 37.047452 * zoomfactor, 159.374660 * zoomfactor, 38.955187 * zoomfactor, 198.141960 * zoomfactor, 42.408596 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.839780 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(194.466090 * zoomfactor, 264.735130 * zoomfactor);
        patternContext.lineTo(192.579780 * zoomfactor, 321.912920 * zoomfactor);
        patternContext.lineTo(171.336770 * zoomfactor, 378.893050 * zoomfactor);
        patternContext.lineTo(129.557670 * zoomfactor, 377.668240 * zoomfactor);
        patternContext.lineTo(110.427920 * zoomfactor, 305.376230 * zoomfactor);
        patternContext.lineTo(108.371700 * zoomfactor, 263.218400 * zoomfactor);
        patternContext.lineTo(121.971550 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(143.153190 * zoomfactor, 230.709730 * zoomfactor, 164.334820 * zoomfactor, 231.102380 * zoomfactor, 185.516460 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.224324 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(141.157110 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.bezierCurveTo(134.611650 * zoomfactor, 257.916210 * zoomfactor, 127.878990 * zoomfactor, 258.043020 * zoomfactor, 121.997630 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.bezierCurveTo(120.882720 * zoomfactor, 257.879910 * zoomfactor, 119.455540 * zoomfactor, 259.317120 * zoomfactor, 119.417220 * zoomfactor, 260.867420 * zoomfactor);
        patternContext.bezierCurveTo(119.210070 * zoomfactor, 269.249240 * zoomfactor, 119.263060 * zoomfactor, 278.947730 * zoomfactor, 119.352720 * zoomfactor, 288.687650 * zoomfactor);
        patternContext.bezierCurveTo(119.365620 * zoomfactor, 290.083600 * zoomfactor, 120.478300 * zoomfactor, 291.615830 * zoomfactor, 121.481560 * zoomfactor, 291.649160 * zoomfactor);
        patternContext.bezierCurveTo(127.664950 * zoomfactor, 291.854570 * zoomfactor, 134.550060 * zoomfactor, 291.818780 * zoomfactor, 141.350650 * zoomfactor, 291.649160 * zoomfactor);
        patternContext.bezierCurveTo(142.384880 * zoomfactor, 291.623360 * zoomfactor, 143.594870 * zoomfactor, 290.126520 * zoomfactor, 143.608500 * zoomfactor, 288.687650 * zoomfactor);
        patternContext.bezierCurveTo(143.692600 * zoomfactor, 279.805460 * zoomfactor, 143.713290 * zoomfactor, 269.903070 * zoomfactor, 143.673000 * zoomfactor, 261.405880 * zoomfactor);
        patternContext.bezierCurveTo(143.665000 * zoomfactor, 259.756010 * zoomfactor, 142.343110 * zoomfactor, 257.904050 * zoomfactor, 141.157110 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.173157 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(104.254200 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.bezierCurveTo(100.339420 * zoomfactor, 153.469280 * zoomfactor, 96.314449 * zoomfactor, 153.523080 * zoomfactor, 92.795089 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.bezierCurveTo(91.369309 * zoomfactor, 153.432980 * zoomfactor, 91.274679 * zoomfactor, 154.864870 * zoomfactor, 91.251769 * zoomfactor, 156.409320 * zoomfactor);
        patternContext.bezierCurveTo(91.127869 * zoomfactor, 164.759520 * zoomfactor, 91.159569 * zoomfactor, 174.421420 * zoomfactor, 91.213169 * zoomfactor, 184.124600 * zoomfactor);
        patternContext.bezierCurveTo(91.221169 * zoomfactor, 185.515280 * zoomfactor, 91.185769 * zoomfactor, 187.104860 * zoomfactor, 92.486409 * zoomfactor, 187.074930 * zoomfactor);
        patternContext.bezierCurveTo(96.188639 * zoomfactor, 186.989730 * zoomfactor, 100.301250 * zoomfactor, 186.948370 * zoomfactor, 104.369930 * zoomfactor, 187.074930 * zoomfactor);
        patternContext.bezierCurveTo(105.572320 * zoomfactor, 187.112330 * zoomfactor, 105.712190 * zoomfactor, 185.558040 * zoomfactor, 105.720340 * zoomfactor, 184.124600 * zoomfactor);
        patternContext.bezierCurveTo(105.770640 * zoomfactor, 175.275920 * zoomfactor, 105.783040 * zoomfactor, 165.410870 * zoomfactor, 105.758940 * zoomfactor, 156.945740 * zoomfactor);
        patternContext.bezierCurveTo(105.754940 * zoomfactor, 155.302100 * zoomfactor, 105.605750 * zoomfactor, 153.457120 * zoomfactor, 104.254210 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.187205 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(113.691590 * zoomfactor, 211.171870 * zoomfactor);
        patternContext.bezierCurveTo(113.678490 * zoomfactor, 207.572000 * zoomfactor, 113.610090 * zoomfactor, 203.870820 * zoomfactor, 113.691590 * zoomfactor, 200.634560 * zoomfactor);
        patternContext.bezierCurveTo(113.724590 * zoomfactor, 199.323480 * zoomfactor, 111.904720 * zoomfactor, 199.219600 * zoomfactor, 109.941450 * zoomfactor, 199.215400 * zoomfactor);
        patternContext.lineTo(93.345009 * zoomfactor, 199.179900 * zoomfactor);
        patternContext.bezierCurveTo(93.173589 * zoomfactor, 199.179900 * zoomfactor, 103.703170 * zoomfactor, 210.849280 * zoomfactor, 108.599910 * zoomfactor, 213.759040 * zoomfactor);
        patternContext.bezierCurveTo(109.489030 * zoomfactor, 213.652420 * zoomfactor, 113.693940 * zoomfactor, 212.414680 * zoomfactor, 113.691590 * zoomfactor, 211.171860 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.173216 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(94.845469 * zoomfactor, 62.294399 * zoomfactor);
        patternContext.lineTo(91.026189 * zoomfactor, 65.321869 * zoomfactor);
        patternContext.bezierCurveTo(92.179889 * zoomfactor, 75.914279 * zoomfactor, 104.854520 * zoomfactor, 84.790485 * zoomfactor, 108.208100 * zoomfactor, 86.250458 * zoomfactor);
        patternContext.lineTo(115.499460 * zoomfactor, 82.702352 * zoomfactor);
        patternContext.bezierCurveTo(111.742110 * zoomfactor, 81.295368 * zoomfactor, 96.026529 * zoomfactor, 72.265157 * zoomfactor, 94.845469 * zoomfactor, 62.294399 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player3: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.575850 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(77.842081 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(48.835851 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(47.577919 * zoomfactor, 148.404890 * zoomfactor, 47.611579 * zoomfactor, 170.179050 * zoomfactor, 62.459990 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(73.048188 * zoomfactor, 205.069610 * zoomfactor, 85.916381 * zoomfactor, 219.370110 * zoomfactor, 117.396030 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(198.574280 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(210.124910 * zoomfactor, 223.546540 * zoomfactor, 220.504880 * zoomfactor, 216.189150 * zoomfactor, 228.726880 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(235.652420 * zoomfactor, 204.520930 * zoomfactor, 242.387460 * zoomfactor, 198.665020 * zoomfactor, 246.605590 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(257.665260 * zoomfactor, 171.068070 * zoomfactor, 265.668000 * zoomfactor, 150.862350 * zoomfactor, 260.496260 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(231.490050 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.768139 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(108.474510 * zoomfactor, 21.463758 * zoomfactor);
        patternContext.bezierCurveTo(91.663438 * zoomfactor, 29.621865 * zoomfactor, 78.769700 * zoomfactor, 35.932420 * zoomfactor, 71.462913 * zoomfactor, 63.115488 * zoomfactor);
        patternContext.bezierCurveTo(72.027896 * zoomfactor, 86.284495 * zoomfactor, 80.716463 * zoomfactor, 105.148480 * zoomfactor, 108.100650 * zoomfactor, 114.104900 * zoomfactor);
        patternContext.bezierCurveTo(151.922290 * zoomfactor, 114.556260 * zoomfactor, 161.935690 * zoomfactor, 113.425500 * zoomfactor, 188.853210 * zoomfactor, 113.085800 * zoomfactor);
        patternContext.bezierCurveTo(216.114910 * zoomfactor, 103.217380 * zoomfactor, 231.621780 * zoomfactor, 87.945090 * zoomfactor, 232.968020 * zoomfactor, 66.162925 * zoomfactor);
        patternContext.bezierCurveTo(230.538910 * zoomfactor, 42.431904 * zoomfactor, 217.291100 * zoomfactor, 27.315960 * zoomfactor, 198.947270 * zoomfactor, 19.464286 * zoomfactor);
        patternContext.bezierCurveTo(169.786630 * zoomfactor, 19.741480 * zoomfactor, 152.328010 * zoomfactor, 20.802852 * zoomfactor, 108.474510 * zoomfactor, 21.463758 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.955130 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(60.758114 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(45.772153 * zoomfactor, 252.484170 * zoomfactor);
        patternContext.lineTo(67.904167 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(70.583934 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(75.050217 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(119.266410 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(126.859090 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(129.092230 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(168.842140 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(170.628650 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(175.988190 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(218.864490 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(229.583570 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(231.816710 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(249.948210 * zoomfactor, 249.412990 * zoomfactor);
        patternContext.lineTo(247.895320 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(229.136950 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(200.552740 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(179.561220 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(116.586640 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(93.808602 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(71.477193 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(107.908510 * zoomfactor, 116.417940 * zoomfactor);
        patternContext.bezierCurveTo(85.114370 * zoomfactor, 106.281080 * zoomfactor, 72.442970 * zoomfactor, 95.300650 * zoomfactor, 76.182783 * zoomfactor, 82.952623 * zoomfactor);
        patternContext.lineTo(50.404925 * zoomfactor, 128.186390 * zoomfactor);
        patternContext.lineTo(47.643005 * zoomfactor, 149.481210 * zoomfactor);
        patternContext.bezierCurveTo(50.541305 * zoomfactor, 176.725230 * zoomfactor, 106.052330 * zoomfactor, 175.315010 * zoomfactor, 106.052330 * zoomfactor, 175.315010 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(228.012090 * zoomfactor, 87.184854 * zoomfactor);
        patternContext.lineTo(234.286070 * zoomfactor, 82.947592 * zoomfactor);
        patternContext.lineTo(246.731740 * zoomfactor, 104.994960 * zoomfactor);
        patternContext.lineTo(260.496260 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(242.094430 * zoomfactor, 135.313430 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.179101 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(224.931560 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.bezierCurveTo(229.103930 * zoomfactor, 232.672650 * zoomfactor, 233.395630 * zoomfactor, 232.799460 * zoomfactor, 237.144690 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.bezierCurveTo(237.855380 * zoomfactor, 232.636350 * zoomfactor, 238.765130 * zoomfactor, 234.073560 * zoomfactor, 238.789550 * zoomfactor, 235.623860 * zoomfactor);
        patternContext.bezierCurveTo(238.921600 * zoomfactor, 244.005680 * zoomfactor, 238.887850 * zoomfactor, 253.704170 * zoomfactor, 238.830650 * zoomfactor, 263.444090 * zoomfactor);
        patternContext.bezierCurveTo(238.822650 * zoomfactor, 264.840040 * zoomfactor, 238.113160 * zoomfactor, 266.372270 * zoomfactor, 237.473640 * zoomfactor, 266.405600 * zoomfactor);
        patternContext.bezierCurveTo(233.532060 * zoomfactor, 266.611010 * zoomfactor, 229.143180 * zoomfactor, 266.575220 * zoomfactor, 224.808170 * zoomfactor, 266.405600 * zoomfactor);
        patternContext.bezierCurveTo(224.148900 * zoomfactor, 266.379800 * zoomfactor, 223.377600 * zoomfactor, 264.882960 * zoomfactor, 223.368910 * zoomfactor, 263.444090 * zoomfactor);
        patternContext.bezierCurveTo(223.315310 * zoomfactor, 254.561900 * zoomfactor, 223.302110 * zoomfactor, 244.659510 * zoomfactor, 223.327810 * zoomfactor, 236.162320 * zoomfactor);
        patternContext.bezierCurveTo(223.332810 * zoomfactor, 234.512450 * zoomfactor, 224.175550 * zoomfactor, 232.660490 * zoomfactor, 224.931560 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(194.444740 * zoomfactor, 132.226540 * zoomfactor);
        patternContext.bezierCurveTo(199.745110 * zoomfactor, 131.301770 * zoomfactor, 205.204240 * zoomfactor, 130.405060 * zoomfactor, 209.952970 * zoomfactor, 129.481850 * zoomfactor);
        patternContext.bezierCurveTo(211.876800 * zoomfactor, 129.107850 * zoomfactor, 212.322050 * zoomfactor, 130.877340 * zoomfactor, 212.695180 * zoomfactor, 132.804940 * zoomfactor);
        patternContext.bezierCurveTo(214.712580 * zoomfactor, 143.226670 * zoomfactor, 216.809980 * zoomfactor, 155.327450 * zoomfactor, 218.886800 * zoomfactor, 167.485140 * zoomfactor);
        patternContext.bezierCurveTo(219.184430 * zoomfactor, 169.227620 * zoomfactor, 219.584010 * zoomfactor, 171.208790 * zoomfactor, 217.817210 * zoomfactor, 171.482850 * zoomfactor);
        patternContext.bezierCurveTo(212.787920 * zoomfactor, 172.262980 * zoomfactor, 207.212940 * zoomfactor, 173.196260 * zoomfactor, 201.734610 * zoomfactor, 174.329190 * zoomfactor);
        patternContext.bezierCurveTo(200.115640 * zoomfactor, 174.663960 * zoomfactor, 199.582040 * zoomfactor, 172.752100 * zoomfactor, 199.253480 * zoomfactor, 170.959900 * zoomfactor);
        patternContext.bezierCurveTo(197.225290 * zoomfactor, 159.896620 * zoomfactor, 195.023270 * zoomfactor, 147.552140 * zoomfactor, 193.180680 * zoomfactor, 136.951110 * zoomfactor);
        patternContext.bezierCurveTo(192.822490 * zoomfactor, 134.892830 * zoomfactor, 192.615220 * zoomfactor, 132.547940 * zoomfactor, 194.444730 * zoomfactor, 132.226540 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(147.154210 * zoomfactor, 144.964990 * zoomfactor);
        patternContext.bezierCurveTo(152.465800 * zoomfactor, 144.107060 * zoomfactor, 157.935790 * zoomfactor, 143.279180 * zoomfactor, 162.695780 * zoomfactor, 142.415860 * zoomfactor);
        patternContext.bezierCurveTo(164.624170 * zoomfactor, 142.066120 * zoomfactor, 165.047090 * zoomfactor, 143.841080 * zoomfactor, 165.395910 * zoomfactor, 145.773230 * zoomfactor);
        patternContext.bezierCurveTo(167.281890 * zoomfactor, 156.219540 * zoomfactor, 169.226690 * zoomfactor, 168.345780 * zoomfactor, 171.150220 * zoomfactor, 180.528660 * zoomfactor);
        patternContext.bezierCurveTo(171.425870 * zoomfactor, 182.274750 * zoomfactor, 171.800470 * zoomfactor, 184.260790 * zoomfactor, 170.030360 * zoomfactor, 184.512580 * zoomfactor);
        patternContext.bezierCurveTo(164.991640 * zoomfactor, 185.229310 * zoomfactor, 159.405350 * zoomfactor, 186.092290 * zoomfactor, 153.913180 * zoomfactor, 187.156130 * zoomfactor);
        patternContext.bezierCurveTo(152.290120 * zoomfactor, 187.470480 * zoomfactor, 151.780650 * zoomfactor, 185.552040 * zoomfactor, 151.474690 * zoomfactor, 183.755850 * zoomfactor);
        patternContext.bezierCurveTo(149.586010 * zoomfactor, 172.667900 * zoomfactor, 147.539650 * zoomfactor, 160.296670 * zoomfactor, 145.830740 * zoomfactor, 149.673270 * zoomfactor);
        patternContext.bezierCurveTo(145.498500 * zoomfactor, 147.610640 * zoomfactor, 145.320780 * zoomfactor, 145.263320 * zoomfactor, 147.154200 * zoomfactor, 144.964990 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.202701 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(174.246270 * zoomfactor, 210.525100 * zoomfactor);
        patternContext.bezierCurveTo(173.676150 * zoomfactor, 206.343250 * zoomfactor, 173.144400 * zoomfactor, 202.036100 * zoomfactor, 172.539480 * zoomfactor, 198.289520 * zoomfactor);
        patternContext.bezierCurveTo(172.294440 * zoomfactor, 196.771690 * zoomfactor, 174.082910 * zoomfactor, 196.419210 * zoomfactor, 176.023790 * zoomfactor, 196.123530 * zoomfactor);
        patternContext.bezierCurveTo(186.517380 * zoomfactor, 194.524870 * zoomfactor, 198.685460 * zoomfactor, 192.862010 * zoomfactor, 210.908750 * zoomfactor, 191.215290 * zoomfactor);
        patternContext.bezierCurveTo(212.660600 * zoomfactor, 190.979000 * zoomfactor, 214.656520 * zoomfactor, 190.662720 * zoomfactor, 214.812570 * zoomfactor, 192.056710 * zoomfactor);
        patternContext.bezierCurveTo(215.256750 * zoomfactor, 196.024760 * zoomfactor, 215.817230 * zoomfactor, 200.423300 * zoomfactor, 216.582570 * zoomfactor, 204.745450 * zoomfactor);
        patternContext.bezierCurveTo(216.808710 * zoomfactor, 206.022750 * zoomfactor, 214.872880 * zoomfactor, 206.445040 * zoomfactor, 213.069530 * zoomfactor, 206.705480 * zoomfactor);
        patternContext.bezierCurveTo(201.937440 * zoomfactor, 208.313050 * zoomfactor, 189.520190 * zoomfactor, 210.058610 * zoomfactor, 178.859890 * zoomfactor, 211.519510 * zoomfactor);
        patternContext.bezierCurveTo(176.790020 * zoomfactor, 211.803190 * zoomfactor, 174.445250 * zoomfactor, 211.968560 * zoomfactor, 174.246270 * zoomfactor, 210.525120 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.250360 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(140.727140 * zoomfactor, 106.148180 * zoomfactor);
        patternContext.bezierCurveTo(140.684640 * zoomfactor, 101.927860 * zoomfactor, 140.724140 * zoomfactor, 97.587268 * zoomfactor, 140.544240 * zoomfactor, 93.795757 * zoomfactor);
        patternContext.bezierCurveTo(140.471140 * zoomfactor, 92.259721 * zoomfactor, 143.245760 * zoomfactor, 92.108538 * zoomfactor, 146.239780 * zoomfactor, 92.030788 * zoomfactor);
        patternContext.bezierCurveTo(162.427290 * zoomfactor, 91.610388 * zoomfactor, 181.160450 * zoomfactor, 91.312668 * zoomfactor, 199.973970 * zoomfactor, 91.037147 * zoomfactor);
        patternContext.bezierCurveTo(202.670390 * zoomfactor, 90.997377 * zoomfactor, 205.751720 * zoomfactor, 90.905276 * zoomfactor, 205.714460 * zoomfactor, 92.308300 * zoomfactor);
        patternContext.bezierCurveTo(205.608380 * zoomfactor, 96.302064 * zoomfactor, 206.205620 * zoomfactor, 98.442186 * zoomfactor, 204.243550 * zoomfactor, 100.624810 * zoomfactor);
        patternContext.bezierCurveTo(203.411110 * zoomfactor, 101.550810 * zoomfactor, 198.789430 * zoomfactor, 105.278760 * zoomfactor, 196.010360 * zoomfactor, 105.336790 * zoomfactor);
        patternContext.bezierCurveTo(178.855220 * zoomfactor, 105.694940 * zoomfactor, 163.924070 * zoomfactor, 107.385570 * zoomfactor, 147.511380 * zoomfactor, 107.650460 * zoomfactor);
        patternContext.bezierCurveTo(144.324560 * zoomfactor, 107.701960 * zoomfactor, 140.745130 * zoomfactor, 107.605160 * zoomfactor, 140.727140 * zoomfactor, 106.148200 * zoomfactor);
        patternContext.fill();

        // #path10302-6
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.298524 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(76.634156 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.bezierCurveTo(88.225812 * zoomfactor, 247.151370 * zoomfactor, 100.149000 * zoomfactor, 247.278180 * zoomfactor, 110.564590 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.bezierCurveTo(112.539040 * zoomfactor, 247.115070 * zoomfactor, 115.066500 * zoomfactor, 248.552280 * zoomfactor, 115.134350 * zoomfactor, 250.102580 * zoomfactor);
        patternContext.bezierCurveTo(115.501210 * zoomfactor, 258.484400 * zoomfactor, 115.407360 * zoomfactor, 268.182890 * zoomfactor, 115.248540 * zoomfactor, 277.922810 * zoomfactor);
        patternContext.bezierCurveTo(115.225740 * zoomfactor, 279.318760 * zoomfactor, 113.255200 * zoomfactor, 280.850990 * zoomfactor, 111.478490 * zoomfactor, 280.884320 * zoomfactor);
        patternContext.bezierCurveTo(100.528030 * zoomfactor, 281.089730 * zoomfactor, 88.334846 * zoomfactor, 281.053940 * zoomfactor, 76.291371 * zoomfactor, 280.884320 * zoomfactor);
        patternContext.bezierCurveTo(74.459792 * zoomfactor, 280.858520 * zoomfactor, 72.316962 * zoomfactor, 279.361680 * zoomfactor, 72.292825 * zoomfactor, 277.922810 * zoomfactor);
        patternContext.bezierCurveTo(72.143870 * zoomfactor, 269.040620 * zoomfactor, 72.107258 * zoomfactor, 259.138230 * zoomfactor, 72.178636 * zoomfactor, 250.641040 * zoomfactor);
        patternContext.bezierCurveTo(72.192516 * zoomfactor, 248.991170 * zoomfactor, 74.533806 * zoomfactor, 247.139210 * zoomfactor, 76.634156 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player4: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.700000 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(65.169242 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(31.412523 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(29.948573 * zoomfactor, 148.404890 * zoomfactor, 29.987746 * zoomfactor, 170.179050 * zoomfactor, 47.267952 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(59.590230 * zoomfactor, 205.069610 * zoomfactor, 74.565908 * zoomfactor, 219.370110 * zoomfactor, 111.201130 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(205.674330 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(219.116660 * zoomfactor, 223.546540 * zoomfactor, 231.196600 * zoomfactor, 216.189150 * zoomfactor, 240.765160 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(248.824930 * zoomfactor, 204.520930 * zoomfactor, 256.663000 * zoomfactor, 198.665020 * zoomfactor, 261.571960 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(274.442920 * zoomfactor, 171.068070 * zoomfactor, 283.756300 * zoomfactor, 150.862350 * zoomfactor, 277.737570 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(243.980870 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.983000 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(105.707780 * zoomfactor, 10.460160 * zoomfactor);
        patternContext.bezierCurveTo(86.795824 * zoomfactor, 19.090652 * zoomfactor, 72.290751 * zoomfactor, 25.769829 * zoomfactor, 64.070831 * zoomfactor, 55.949125 * zoomfactor);
        patternContext.bezierCurveTo(64.706421 * zoomfactor, 81.870256 * zoomfactor, 74.480801 * zoomfactor, 103.215250 * zoomfactor, 105.287200 * zoomfactor, 114.028780 * zoomfactor);
        patternContext.bezierCurveTo(154.585260 * zoomfactor, 115.812970 * zoomfactor, 165.850030 * zoomfactor, 114.841080 * zoomfactor, 196.131440 * zoomfactor, 115.247230 * zoomfactor);
        patternContext.bezierCurveTo(226.800050 * zoomfactor, 105.009640 * zoomfactor, 244.244820 * zoomfactor, 88.386890 * zoomfactor, 245.759310 * zoomfactor, 64.072154 * zoomfactor);
        patternContext.bezierCurveTo(243.026620 * zoomfactor, 37.468221 * zoomfactor, 228.123230 * zoomfactor, 20.180674 * zoomfactor, 207.486960 * zoomfactor, 10.866312 * zoomfactor);
        patternContext.bezierCurveTo(174.682100 * zoomfactor, 10.324776 * zoomfactor, 155.041670 * zoomfactor, 11.001695 * zoomfactor, 105.707780 * zoomfactor, 10.460160 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(47.267952 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(13.511233 * zoomfactor, 250.745190 * zoomfactor);
        patternContext.lineTo(55.451401 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(58.520191 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(63.634846 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(114.269920 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(122.964840 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(125.522160 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(171.042590 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(173.088450 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(179.226030 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(228.326710 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(240.601880 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(243.159210 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(293.794290 * zoomfactor, 247.674010 * zoomfactor);
        patternContext.lineTo(261.571960 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(240.090420 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(207.356630 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(183.317760 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(111.201130 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(85.116395 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(59.543124 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(73.182198 * zoomfactor, 94.145805 * zoomfactor);
        patternContext.lineTo(68.067542 * zoomfactor, 82.372963 * zoomfactor);
        patternContext.lineTo(44.028665 * zoomfactor, 108.477950 * zoomfactor);
        patternContext.lineTo(34.310823 * zoomfactor, 131.511750 * zoomfactor);
        patternContext.lineTo(70.113404 * zoomfactor, 159.664190 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(237.127220 * zoomfactor, 95.479732 * zoomfactor);
        patternContext.lineTo(242.241880 * zoomfactor, 83.706890 * zoomfactor);
        patternContext.lineTo(266.280750 * zoomfactor, 109.811880 * zoomfactor);
        patternContext.lineTo(275.998590 * zoomfactor, 132.845680 * zoomfactor);
        patternContext.lineTo(240.196020 * zoomfactor, 160.998110 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.264583 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(228.074290 * zoomfactor, 242.516570 * zoomfactor);
        patternContext.bezierCurveTo(237.179950 * zoomfactor, 242.526870 * zoomfactor, 246.546040 * zoomfactor, 242.653680 * zoomfactor, 254.727860 * zoomfactor, 242.516570 * zoomfactor);
        patternContext.bezierCurveTo(256.278860 * zoomfactor, 242.490570 * zoomfactor, 258.264270 * zoomfactor, 243.927780 * zoomfactor, 258.317570 * zoomfactor, 245.478080 * zoomfactor);
        patternContext.bezierCurveTo(258.605750 * zoomfactor, 253.859900 * zoomfactor, 258.532030 * zoomfactor, 263.558390 * zoomfactor, 258.407270 * zoomfactor, 273.298310 * zoomfactor);
        patternContext.bezierCurveTo(258.389370 * zoomfactor, 274.694260 * zoomfactor, 256.841430 * zoomfactor, 276.226490 * zoomfactor, 255.445760 * zoomfactor, 276.259820 * zoomfactor);
        patternContext.bezierCurveTo(246.843780 * zoomfactor, 276.465230 * zoomfactor, 237.265600 * zoomfactor, 276.429440 * zoomfactor, 227.805020 * zoomfactor, 276.259820 * zoomfactor);
        patternContext.bezierCurveTo(226.366250 * zoomfactor, 276.234020 * zoomfactor, 224.682980 * zoomfactor, 274.737180 * zoomfactor, 224.664020 * zoomfactor, 273.298310 * zoomfactor);
        patternContext.bezierCurveTo(224.547010 * zoomfactor, 264.416120 * zoomfactor, 224.518250 * zoomfactor, 254.513730 * zoomfactor, 224.574320 * zoomfactor, 246.016540 * zoomfactor);
        patternContext.bezierCurveTo(224.585220 * zoomfactor, 244.366670 * zoomfactor, 226.424390 * zoomfactor, 242.514710 * zoomfactor, 228.074290 * zoomfactor, 242.516570 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(171.961660 * zoomfactor, 150.222210 * zoomfactor);
        patternContext.bezierCurveTo(177.342080 * zoomfactor, 150.235310 * zoomfactor, 182.873940 * zoomfactor, 150.303710 * zoomfactor, 187.710900 * zoomfactor, 150.222210 * zoomfactor);
        patternContext.bezierCurveTo(189.670470 * zoomfactor, 150.189210 * zoomfactor, 189.800520 * zoomfactor, 152.009220 * zoomfactor, 189.832010 * zoomfactor, 153.972350 * zoomfactor);
        patternContext.bezierCurveTo(190.002300 * zoomfactor, 164.586180 * zoomfactor, 189.958740 * zoomfactor, 176.867300 * zoomfactor, 189.885010 * zoomfactor, 189.200880 * zoomfactor);
        patternContext.bezierCurveTo(189.874410 * zoomfactor, 190.968560 * zoomfactor, 189.922610 * zoomfactor, 192.989050 * zoomfactor, 188.135090 * zoomfactor, 192.951010 * zoomfactor);
        patternContext.bezierCurveTo(183.046800 * zoomfactor, 192.842730 * zoomfactor, 177.394490 * zoomfactor, 192.790150 * zoomfactor, 171.802550 * zoomfactor, 192.951010 * zoomfactor);
        patternContext.bezierCurveTo(170.150010 * zoomfactor, 192.998510 * zoomfactor, 169.957770 * zoomfactor, 191.022910 * zoomfactor, 169.946570 * zoomfactor, 189.200880 * zoomfactor);
        patternContext.bezierCurveTo(169.877470 * zoomfactor, 177.953440 * zoomfactor, 169.860470 * zoomfactor, 165.414110 * zoomfactor, 169.893570 * zoomfactor, 154.654190 * zoomfactor);
        patternContext.bezierCurveTo(169.899570 * zoomfactor, 152.564980 * zoomfactor, 170.104120 * zoomfactor, 150.219850 * zoomfactor, 171.961650 * zoomfactor, 150.222210 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(114.568460 * zoomfactor, 152.091090 * zoomfactor);
        patternContext.bezierCurveTo(119.948880 * zoomfactor, 152.104190 * zoomfactor, 125.480740 * zoomfactor, 152.172590 * zoomfactor, 130.317700 * zoomfactor, 152.091090 * zoomfactor);
        patternContext.bezierCurveTo(132.277270 * zoomfactor, 152.058090 * zoomfactor, 132.407320 * zoomfactor, 153.878100 * zoomfactor, 132.438810 * zoomfactor, 155.841230 * zoomfactor);
        patternContext.bezierCurveTo(132.609100 * zoomfactor, 166.455060 * zoomfactor, 132.565540 * zoomfactor, 178.736180 * zoomfactor, 132.491810 * zoomfactor, 191.069760 * zoomfactor);
        patternContext.bezierCurveTo(132.481210 * zoomfactor, 192.837440 * zoomfactor, 132.529410 * zoomfactor, 194.857930 * zoomfactor, 130.741890 * zoomfactor, 194.819890 * zoomfactor);
        patternContext.bezierCurveTo(125.653600 * zoomfactor, 194.711610 * zoomfactor, 120.001290 * zoomfactor, 194.659030 * zoomfactor, 114.409350 * zoomfactor, 194.819890 * zoomfactor);
        patternContext.bezierCurveTo(112.756810 * zoomfactor, 194.867390 * zoomfactor, 112.564570 * zoomfactor, 192.891790 * zoomfactor, 112.553370 * zoomfactor, 191.069760 * zoomfactor);
        patternContext.bezierCurveTo(112.484270 * zoomfactor, 179.822320 * zoomfactor, 112.467270 * zoomfactor, 167.282990 * zoomfactor, 112.500370 * zoomfactor, 156.523070 * zoomfactor);
        patternContext.bezierCurveTo(112.506370 * zoomfactor, 154.433860 * zoomfactor, 112.710920 * zoomfactor, 152.088730 * zoomfactor, 114.568450 * zoomfactor, 152.091090 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.202701 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(130.870970 * zoomfactor, 220.388670 * zoomfactor);
        patternContext.bezierCurveTo(130.884070 * zoomfactor, 216.168150 * zoomfactor, 130.952470 * zoomfactor, 211.828840 * zoomfactor, 130.870970 * zoomfactor, 208.034620 * zoomfactor);
        patternContext.bezierCurveTo(130.837970 * zoomfactor, 206.497490 * zoomfactor, 132.657990 * zoomfactor, 206.395480 * zoomfactor, 134.621110 * zoomfactor, 206.370780 * zoomfactor);
        patternContext.bezierCurveTo(145.234940 * zoomfactor, 206.237200 * zoomfactor, 157.516060 * zoomfactor, 206.271380 * zoomfactor, 169.849640 * zoomfactor, 206.329180 * zoomfactor);
        patternContext.bezierCurveTo(171.617330 * zoomfactor, 206.337180 * zoomfactor, 173.637810 * zoomfactor, 206.299680 * zoomfactor, 173.599780 * zoomfactor, 207.701860 * zoomfactor);
        patternContext.bezierCurveTo(173.491490 * zoomfactor, 211.693230 * zoomfactor, 173.438910 * zoomfactor, 216.127020 * zoomfactor, 173.599780 * zoomfactor, 220.513460 * zoomfactor);
        patternContext.bezierCurveTo(173.647280 * zoomfactor, 221.809750 * zoomfactor, 171.671680 * zoomfactor, 221.960550 * zoomfactor, 169.849640 * zoomfactor, 221.969340 * zoomfactor);
        patternContext.bezierCurveTo(158.602200 * zoomfactor, 222.023540 * zoomfactor, 146.062870 * zoomfactor, 222.036840 * zoomfactor, 135.302960 * zoomfactor, 222.010940 * zoomfactor);
        patternContext.bezierCurveTo(133.213740 * zoomfactor, 222.005940 * zoomfactor, 130.868620 * zoomfactor, 221.845780 * zoomfactor, 130.870970 * zoomfactor, 220.388690 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.261849 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(120.607790 * zoomfactor, 107.890260 * zoomfactor);
        patternContext.bezierCurveTo(120.629590 * zoomfactor, 103.669740 * zoomfactor, 120.743790 * zoomfactor, 99.330430 * zoomfactor, 120.607790 * zoomfactor, 95.536219 * zoomfactor);
        patternContext.bezierCurveTo(120.552690 * zoomfactor, 93.999089 * zoomfactor, 123.589860 * zoomfactor, 93.897079 * zoomfactor, 126.865800 * zoomfactor, 93.872379 * zoomfactor);
        patternContext.bezierCurveTo(144.577510 * zoomfactor, 93.738799 * zoomfactor, 165.071490 * zoomfactor, 93.772979 * zoomfactor, 185.653030 * zoomfactor, 93.830779 * zoomfactor);
        patternContext.bezierCurveTo(188.602840 * zoomfactor, 93.838779 * zoomfactor, 191.974500 * zoomfactor, 93.801279 * zoomfactor, 191.911030 * zoomfactor, 95.203459 * zoomfactor);
        patternContext.bezierCurveTo(191.730320 * zoomfactor, 99.194820 * zoomfactor, 191.642590 * zoomfactor, 103.628610 * zoomfactor, 191.911030 * zoomfactor, 108.015050 * zoomfactor);
        patternContext.bezierCurveTo(191.990230 * zoomfactor, 109.311340 * zoomfactor, 188.693540 * zoomfactor, 109.462140 * zoomfactor, 185.653030 * zoomfactor, 109.470930 * zoomfactor);
        patternContext.bezierCurveTo(166.883990 * zoomfactor, 109.525130 * zoomfactor, 145.959110 * zoomfactor, 109.538430 * zoomfactor, 128.003640 * zoomfactor, 109.512530 * zoomfactor);
        patternContext.bezierCurveTo(124.517260 * zoomfactor, 109.507530 * zoomfactor, 120.603870 * zoomfactor, 109.347370 * zoomfactor, 120.607790 * zoomfactor, 107.890280 * zoomfactor);
        patternContext.fill();

        // #path10302-6
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.264583 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(58.860909 * zoomfactor, 248.880050 * zoomfactor);
        patternContext.bezierCurveTo(67.966569 * zoomfactor, 248.890350 * zoomfactor, 77.332659 * zoomfactor, 249.017160 * zoomfactor, 85.514479 * zoomfactor, 248.880050 * zoomfactor);
        patternContext.bezierCurveTo(87.065479 * zoomfactor, 248.854050 * zoomfactor, 89.050889 * zoomfactor, 250.291260 * zoomfactor, 89.104189 * zoomfactor, 251.841560 * zoomfactor);
        patternContext.bezierCurveTo(89.392369 * zoomfactor, 260.223380 * zoomfactor, 89.318649 * zoomfactor, 269.921870 * zoomfactor, 89.193889 * zoomfactor, 279.661790 * zoomfactor);
        patternContext.bezierCurveTo(89.175989 * zoomfactor, 281.057740 * zoomfactor, 87.628049 * zoomfactor, 282.589970 * zoomfactor, 86.232379 * zoomfactor, 282.623300 * zoomfactor);
        patternContext.bezierCurveTo(77.630399 * zoomfactor, 282.828710 * zoomfactor, 68.052219 * zoomfactor, 282.792920 * zoomfactor, 58.591639 * zoomfactor, 282.623300 * zoomfactor);
        patternContext.bezierCurveTo(57.152869 * zoomfactor, 282.597500 * zoomfactor, 55.469599 * zoomfactor, 281.100660 * zoomfactor, 55.450639 * zoomfactor, 279.661790 * zoomfactor);
        patternContext.bezierCurveTo(55.333629 * zoomfactor, 270.779600 * zoomfactor, 55.304869 * zoomfactor, 260.877210 * zoomfactor, 55.360939 * zoomfactor, 252.380020 * zoomfactor);
        patternContext.bezierCurveTo(55.371839 * zoomfactor, 250.730150 * zoomfactor, 57.211009 * zoomfactor, 248.878190 * zoomfactor, 58.860909 * zoomfactor, 248.880050 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player5: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.575850 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(231.130900 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(260.137130 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(261.395060 * zoomfactor, 148.404890 * zoomfactor, 261.361400 * zoomfactor, 170.179050 * zoomfactor, 246.512990 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(235.924800 * zoomfactor, 205.069610 * zoomfactor, 223.056600 * zoomfactor, 219.370110 * zoomfactor, 191.576950 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(110.398700 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(98.848073 * zoomfactor, 223.546540 * zoomfactor, 88.468103 * zoomfactor, 216.189150 * zoomfactor, 80.246103 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(73.320563 * zoomfactor, 204.520930 * zoomfactor, 66.585523 * zoomfactor, 198.665020 * zoomfactor, 62.367393 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(51.307723 * zoomfactor, 171.068070 * zoomfactor, 43.304983 * zoomfactor, 150.862350 * zoomfactor, 48.476723 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(77.482933 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.768139 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(200.498470 * zoomfactor, 21.463758 * zoomfactor);
        patternContext.bezierCurveTo(217.309550 * zoomfactor, 29.621865 * zoomfactor, 230.203280 * zoomfactor, 35.932420 * zoomfactor, 237.510070 * zoomfactor, 63.115488 * zoomfactor);
        patternContext.bezierCurveTo(236.945090 * zoomfactor, 86.284495 * zoomfactor, 228.256520 * zoomfactor, 105.148480 * zoomfactor, 200.872330 * zoomfactor, 114.104900 * zoomfactor);
        patternContext.bezierCurveTo(157.050690 * zoomfactor, 114.556260 * zoomfactor, 147.037290 * zoomfactor, 113.425500 * zoomfactor, 120.119770 * zoomfactor, 113.085800 * zoomfactor);
        patternContext.bezierCurveTo(92.858073 * zoomfactor, 103.217380 * zoomfactor, 77.351203 * zoomfactor, 87.945090 * zoomfactor, 76.004963 * zoomfactor, 66.162925 * zoomfactor);
        patternContext.bezierCurveTo(78.434073 * zoomfactor, 42.431904 * zoomfactor, 91.681883 * zoomfactor, 27.315960 * zoomfactor, 110.025710 * zoomfactor, 19.464286 * zoomfactor);
        patternContext.bezierCurveTo(139.186350 * zoomfactor, 19.741480 * zoomfactor, 156.644970 * zoomfactor, 20.802852 * zoomfactor, 200.498470 * zoomfactor, 21.463758 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.955130 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(248.214870 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(263.200830 * zoomfactor, 252.484170 * zoomfactor);
        patternContext.lineTo(241.068820 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(238.389050 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(233.922770 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(189.706570 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(182.113890 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(179.880750 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(140.130840 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(138.344330 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(132.984790 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(90.108493 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(79.389413 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(77.156273 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(59.024773 * zoomfactor, 249.412990 * zoomfactor);
        patternContext.lineTo(61.077663 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(79.836033 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(108.420240 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(129.411760 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(192.386340 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(215.164380 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(237.495790 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(201.064470 * zoomfactor, 116.417940 * zoomfactor);
        patternContext.bezierCurveTo(223.858610 * zoomfactor, 106.281080 * zoomfactor, 236.530010 * zoomfactor, 95.300650 * zoomfactor, 232.790200 * zoomfactor, 82.952623 * zoomfactor);
        patternContext.lineTo(258.568060 * zoomfactor, 128.186390 * zoomfactor);
        patternContext.lineTo(261.329980 * zoomfactor, 149.481210 * zoomfactor);
        patternContext.bezierCurveTo(258.431680 * zoomfactor, 176.725230 * zoomfactor, 202.920650 * zoomfactor, 175.315010 * zoomfactor, 202.920650 * zoomfactor, 175.315010 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(80.960893 * zoomfactor, 87.184854 * zoomfactor);
        patternContext.lineTo(74.686913 * zoomfactor, 82.947592 * zoomfactor);
        patternContext.lineTo(62.241243 * zoomfactor, 104.994960 * zoomfactor);
        patternContext.lineTo(48.476723 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(66.878553 * zoomfactor, 135.313430 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.179101 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(84.041423 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.bezierCurveTo(79.869053 * zoomfactor, 232.672650 * zoomfactor, 75.577353 * zoomfactor, 232.799460 * zoomfactor, 71.828293 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.bezierCurveTo(71.117603 * zoomfactor, 232.636350 * zoomfactor, 70.207853 * zoomfactor, 234.073560 * zoomfactor, 70.183433 * zoomfactor, 235.623860 * zoomfactor);
        patternContext.bezierCurveTo(70.051383 * zoomfactor, 244.005680 * zoomfactor, 70.085133 * zoomfactor, 253.704170 * zoomfactor, 70.142333 * zoomfactor, 263.444090 * zoomfactor);
        patternContext.bezierCurveTo(70.150333 * zoomfactor, 264.840040 * zoomfactor, 70.859823 * zoomfactor, 266.372270 * zoomfactor, 71.499343 * zoomfactor, 266.405600 * zoomfactor);
        patternContext.bezierCurveTo(75.440923 * zoomfactor, 266.611010 * zoomfactor, 79.829803 * zoomfactor, 266.575220 * zoomfactor, 84.164813 * zoomfactor, 266.405600 * zoomfactor);
        patternContext.bezierCurveTo(84.824083 * zoomfactor, 266.379800 * zoomfactor, 85.595383 * zoomfactor, 264.882960 * zoomfactor, 85.604073 * zoomfactor, 263.444090 * zoomfactor);
        patternContext.bezierCurveTo(85.657673 * zoomfactor, 254.561900 * zoomfactor, 85.670873 * zoomfactor, 244.659510 * zoomfactor, 85.645173 * zoomfactor, 236.162320 * zoomfactor);
        patternContext.bezierCurveTo(85.640173 * zoomfactor, 234.512450 * zoomfactor, 84.797433 * zoomfactor, 232.660490 * zoomfactor, 84.041423 * zoomfactor, 232.662350 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(114.528240 * zoomfactor, 132.226540 * zoomfactor);
        patternContext.bezierCurveTo(109.227870 * zoomfactor, 131.301770 * zoomfactor, 103.768740 * zoomfactor, 130.405060 * zoomfactor, 99.020013 * zoomfactor, 129.481850 * zoomfactor);
        patternContext.bezierCurveTo(97.096183 * zoomfactor, 129.107850 * zoomfactor, 96.650933 * zoomfactor, 130.877340 * zoomfactor, 96.277803 * zoomfactor, 132.804940 * zoomfactor);
        patternContext.bezierCurveTo(94.260403 * zoomfactor, 143.226670 * zoomfactor, 92.163003 * zoomfactor, 155.327450 * zoomfactor, 90.086183 * zoomfactor, 167.485140 * zoomfactor);
        patternContext.bezierCurveTo(89.788553 * zoomfactor, 169.227620 * zoomfactor, 89.388973 * zoomfactor, 171.208790 * zoomfactor, 91.155773 * zoomfactor, 171.482850 * zoomfactor);
        patternContext.bezierCurveTo(96.185063 * zoomfactor, 172.262980 * zoomfactor, 101.760040 * zoomfactor, 173.196260 * zoomfactor, 107.238370 * zoomfactor, 174.329190 * zoomfactor);
        patternContext.bezierCurveTo(108.857340 * zoomfactor, 174.663960 * zoomfactor, 109.390940 * zoomfactor, 172.752100 * zoomfactor, 109.719500 * zoomfactor, 170.959900 * zoomfactor);
        patternContext.bezierCurveTo(111.747690 * zoomfactor, 159.896620 * zoomfactor, 113.949710 * zoomfactor, 147.552140 * zoomfactor, 115.792300 * zoomfactor, 136.951110 * zoomfactor);
        patternContext.bezierCurveTo(116.150490 * zoomfactor, 134.892830 * zoomfactor, 116.357760 * zoomfactor, 132.547940 * zoomfactor, 114.528250 * zoomfactor, 132.226540 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.228866 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(161.818770 * zoomfactor, 144.964990 * zoomfactor);
        patternContext.bezierCurveTo(156.507180 * zoomfactor, 144.107060 * zoomfactor, 151.037190 * zoomfactor, 143.279180 * zoomfactor, 146.277200 * zoomfactor, 142.415860 * zoomfactor);
        patternContext.bezierCurveTo(144.348810 * zoomfactor, 142.066120 * zoomfactor, 143.925890 * zoomfactor, 143.841080 * zoomfactor, 143.577070 * zoomfactor, 145.773230 * zoomfactor);
        patternContext.bezierCurveTo(141.691090 * zoomfactor, 156.219540 * zoomfactor, 139.746290 * zoomfactor, 168.345780 * zoomfactor, 137.822760 * zoomfactor, 180.528660 * zoomfactor);
        patternContext.bezierCurveTo(137.547110 * zoomfactor, 182.274750 * zoomfactor, 137.172510 * zoomfactor, 184.260790 * zoomfactor, 138.942620 * zoomfactor, 184.512580 * zoomfactor);
        patternContext.bezierCurveTo(143.981340 * zoomfactor, 185.229310 * zoomfactor, 149.567630 * zoomfactor, 186.092290 * zoomfactor, 155.059800 * zoomfactor, 187.156130 * zoomfactor);
        patternContext.bezierCurveTo(156.682860 * zoomfactor, 187.470480 * zoomfactor, 157.192330 * zoomfactor, 185.552040 * zoomfactor, 157.498290 * zoomfactor, 183.755850 * zoomfactor);
        patternContext.bezierCurveTo(159.386970 * zoomfactor, 172.667900 * zoomfactor, 161.433330 * zoomfactor, 160.296670 * zoomfactor, 163.142240 * zoomfactor, 149.673270 * zoomfactor);
        patternContext.bezierCurveTo(163.474480 * zoomfactor, 147.610640 * zoomfactor, 163.652200 * zoomfactor, 145.263320 * zoomfactor, 161.818780 * zoomfactor, 144.964990 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.202701 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(134.726710 * zoomfactor, 210.525100 * zoomfactor);
        patternContext.bezierCurveTo(135.296830 * zoomfactor, 206.343250 * zoomfactor, 135.828580 * zoomfactor, 202.036100 * zoomfactor, 136.433500 * zoomfactor, 198.289520 * zoomfactor);
        patternContext.bezierCurveTo(136.678540 * zoomfactor, 196.771690 * zoomfactor, 134.890070 * zoomfactor, 196.419210 * zoomfactor, 132.949190 * zoomfactor, 196.123530 * zoomfactor);
        patternContext.bezierCurveTo(122.455600 * zoomfactor, 194.524870 * zoomfactor, 110.287520 * zoomfactor, 192.862010 * zoomfactor, 98.064233 * zoomfactor, 191.215290 * zoomfactor);
        patternContext.bezierCurveTo(96.312383 * zoomfactor, 190.979000 * zoomfactor, 94.316463 * zoomfactor, 190.662720 * zoomfactor, 94.160413 * zoomfactor, 192.056710 * zoomfactor);
        patternContext.bezierCurveTo(93.716233 * zoomfactor, 196.024760 * zoomfactor, 93.155753 * zoomfactor, 200.423300 * zoomfactor, 92.390413 * zoomfactor, 204.745450 * zoomfactor);
        patternContext.bezierCurveTo(92.164273 * zoomfactor, 206.022750 * zoomfactor, 94.100103 * zoomfactor, 206.445040 * zoomfactor, 95.903453 * zoomfactor, 206.705480 * zoomfactor);
        patternContext.bezierCurveTo(107.035540 * zoomfactor, 208.313050 * zoomfactor, 119.452790 * zoomfactor, 210.058610 * zoomfactor, 130.113090 * zoomfactor, 211.519510 * zoomfactor);
        patternContext.bezierCurveTo(132.182960 * zoomfactor, 211.803190 * zoomfactor, 134.527730 * zoomfactor, 211.968560 * zoomfactor, 134.726710 * zoomfactor, 210.525120 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.250360 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(168.245840 * zoomfactor, 106.148180 * zoomfactor);
        patternContext.bezierCurveTo(168.288340 * zoomfactor, 101.927860 * zoomfactor, 168.248840 * zoomfactor, 97.587268 * zoomfactor, 168.428740 * zoomfactor, 93.795757 * zoomfactor);
        patternContext.bezierCurveTo(168.501840 * zoomfactor, 92.259721 * zoomfactor, 165.727220 * zoomfactor, 92.108538 * zoomfactor, 162.733200 * zoomfactor, 92.030788 * zoomfactor);
        patternContext.bezierCurveTo(146.545690 * zoomfactor, 91.610388 * zoomfactor, 127.812530 * zoomfactor, 91.312668 * zoomfactor, 108.999010 * zoomfactor, 91.037147 * zoomfactor);
        patternContext.bezierCurveTo(106.302590 * zoomfactor, 90.997377 * zoomfactor, 103.221260 * zoomfactor, 90.905276 * zoomfactor, 103.258520 * zoomfactor, 92.308300 * zoomfactor);
        patternContext.bezierCurveTo(103.364600 * zoomfactor, 96.302064 * zoomfactor, 102.767360 * zoomfactor, 98.442186 * zoomfactor, 104.729430 * zoomfactor, 100.624810 * zoomfactor);
        patternContext.bezierCurveTo(105.561870 * zoomfactor, 101.550810 * zoomfactor, 110.183550 * zoomfactor, 105.278760 * zoomfactor, 112.962620 * zoomfactor, 105.336790 * zoomfactor);
        patternContext.bezierCurveTo(130.117760 * zoomfactor, 105.694940 * zoomfactor, 145.048910 * zoomfactor, 107.385570 * zoomfactor, 161.461600 * zoomfactor, 107.650460 * zoomfactor);
        patternContext.bezierCurveTo(164.648420 * zoomfactor, 107.701960 * zoomfactor, 168.227850 * zoomfactor, 107.605160 * zoomfactor, 168.245840 * zoomfactor, 106.148200 * zoomfactor);
        patternContext.fill();

        // #path10302-6
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.298524 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(232.338830 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.bezierCurveTo(220.747170 * zoomfactor, 247.151370 * zoomfactor, 208.823980 * zoomfactor, 247.278180 * zoomfactor, 198.408390 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.bezierCurveTo(196.433940 * zoomfactor, 247.115070 * zoomfactor, 193.906480 * zoomfactor, 248.552280 * zoomfactor, 193.838630 * zoomfactor, 250.102580 * zoomfactor);
        patternContext.bezierCurveTo(193.471770 * zoomfactor, 258.484400 * zoomfactor, 193.565620 * zoomfactor, 268.182890 * zoomfactor, 193.724440 * zoomfactor, 277.922810 * zoomfactor);
        patternContext.bezierCurveTo(193.747240 * zoomfactor, 279.318760 * zoomfactor, 195.717780 * zoomfactor, 280.850990 * zoomfactor, 197.494490 * zoomfactor, 280.884320 * zoomfactor);
        patternContext.bezierCurveTo(208.444950 * zoomfactor, 281.089730 * zoomfactor, 220.638140 * zoomfactor, 281.053940 * zoomfactor, 232.681610 * zoomfactor, 280.884320 * zoomfactor);
        patternContext.bezierCurveTo(234.513190 * zoomfactor, 280.858520 * zoomfactor, 236.656020 * zoomfactor, 279.361680 * zoomfactor, 236.680160 * zoomfactor, 277.922810 * zoomfactor);
        patternContext.bezierCurveTo(236.829110 * zoomfactor, 269.040620 * zoomfactor, 236.865730 * zoomfactor, 259.138230 * zoomfactor, 236.794350 * zoomfactor, 250.641040 * zoomfactor);
        patternContext.bezierCurveTo(236.780450 * zoomfactor, 248.991170 * zoomfactor, 234.439180 * zoomfactor, 247.139210 * zoomfactor, 232.338830 * zoomfactor, 247.141070 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player6: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(-0.264583, 0.000000, 0.000000, 0.264583, 81.841700 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.381718 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(95.732979 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(73.433218 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(72.466130 * zoomfactor, 148.404890 * zoomfactor, 72.492007 * zoomfactor, 170.179050 * zoomfactor, 83.907349 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(92.047472 * zoomfactor, 205.069610 * zoomfactor, 101.940440 * zoomfactor, 219.370110 * zoomfactor, 126.141740 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(188.550940 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(197.430980 * zoomfactor, 223.546540 * zoomfactor, 205.411010 * zoomfactor, 216.189150 * zoomfactor, 211.732020 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(217.056320 * zoomfactor, 204.520930 * zoomfactor, 222.234170 * zoomfactor, 198.665020 * zoomfactor, 225.477040 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(233.979620 * zoomfactor, 171.068070 * zoomfactor, 240.132060 * zoomfactor, 150.862350 * zoomfactor, 236.156080 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(213.856330 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path404-5
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.022109 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(92.366240 * zoomfactor, 89.103469 * zoomfactor);
        patternContext.lineTo(217.334290 * zoomfactor, 85.445874 * zoomfactor);
        patternContext.lineTo(226.438240 * zoomfactor, 104.015280 * zoomfactor);
        patternContext.lineTo(236.156080 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.bezierCurveTo(183.061850 * zoomfactor, 98.050205 * zoomfactor, 231.255010 * zoomfactor, 152.297270 * zoomfactor, 80.994482 * zoomfactor, 182.547410 * zoomfactor);
        patternContext.bezierCurveTo(67.739616 * zoomfactor, 152.427800 * zoomfactor, 71.634047 * zoomfactor, 125.402550 * zoomfactor, 92.366240 * zoomfactor, 89.103469 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.357921 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(112.380530 * zoomfactor, 42.408596 * zoomfactor);
        patternContext.bezierCurveTo(97.487307 * zoomfactor, 49.009302 * zoomfactor, 86.064307 * zoomfactor, 54.107590 * zoomfactor, 79.495632 * zoomfactor, 72.755658 * zoomfactor);
        patternContext.bezierCurveTo(79.901480 * zoomfactor, 88.183421 * zoomfactor, 87.505615 * zoomfactor, 100.179350 * zoomfactor, 111.675900 * zoomfactor, 104.277280 * zoomfactor);
        patternContext.bezierCurveTo(150.410570 * zoomfactor, 101.568540 * zoomfactor, 159.266530 * zoomfactor, 100.125900 * zoomfactor, 183.061850 * zoomfactor, 98.050205 * zoomfactor);
        patternContext.bezierCurveTo(207.199880 * zoomfactor, 89.589943 * zoomfactor, 220.968990 * zoomfactor, 78.329713 * zoomfactor, 222.246990 * zoomfactor, 63.696461 * zoomfactor);
        patternContext.bezierCurveTo(220.195600 * zoomfactor, 48.021567 * zoomfactor, 208.546150 * zoomfactor, 38.840823 * zoomfactor, 192.362690 * zoomfactor, 34.859412 * zoomfactor);
        patternContext.bezierCurveTo(166.584800 * zoomfactor, 37.047452 * zoomfactor, 151.147830 * zoomfactor, 38.955187 * zoomfactor, 112.380530 * zoomfactor, 42.408596 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.839780 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(116.056400 * zoomfactor, 264.735130 * zoomfactor);
        patternContext.lineTo(117.942710 * zoomfactor, 321.912920 * zoomfactor);
        patternContext.lineTo(139.185720 * zoomfactor, 378.893050 * zoomfactor);
        patternContext.lineTo(180.964820 * zoomfactor, 377.668240 * zoomfactor);
        patternContext.lineTo(200.094570 * zoomfactor, 305.376230 * zoomfactor);
        patternContext.lineTo(202.150790 * zoomfactor, 263.218400 * zoomfactor);
        patternContext.lineTo(188.550940 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(167.369300 * zoomfactor, 230.709730 * zoomfactor, 146.187670 * zoomfactor, 231.102380 * zoomfactor, 125.006030 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.224324 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(169.365380 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.bezierCurveTo(175.910840 * zoomfactor, 257.916210 * zoomfactor, 182.643500 * zoomfactor, 258.043020 * zoomfactor, 188.524860 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.bezierCurveTo(189.639770 * zoomfactor, 257.879910 * zoomfactor, 191.066950 * zoomfactor, 259.317120 * zoomfactor, 191.105270 * zoomfactor, 260.867420 * zoomfactor);
        patternContext.bezierCurveTo(191.312420 * zoomfactor, 269.249240 * zoomfactor, 191.259430 * zoomfactor, 278.947730 * zoomfactor, 191.169770 * zoomfactor, 288.687650 * zoomfactor);
        patternContext.bezierCurveTo(191.156870 * zoomfactor, 290.083600 * zoomfactor, 190.044190 * zoomfactor, 291.615830 * zoomfactor, 189.040930 * zoomfactor, 291.649160 * zoomfactor);
        patternContext.bezierCurveTo(182.857540 * zoomfactor, 291.854570 * zoomfactor, 175.972430 * zoomfactor, 291.818780 * zoomfactor, 169.171840 * zoomfactor, 291.649160 * zoomfactor);
        patternContext.bezierCurveTo(168.137610 * zoomfactor, 291.623360 * zoomfactor, 166.927620 * zoomfactor, 290.126520 * zoomfactor, 166.913990 * zoomfactor, 288.687650 * zoomfactor);
        patternContext.bezierCurveTo(166.829890 * zoomfactor, 279.805460 * zoomfactor, 166.809200 * zoomfactor, 269.903070 * zoomfactor, 166.849490 * zoomfactor, 261.405880 * zoomfactor);
        patternContext.bezierCurveTo(166.857490 * zoomfactor, 259.756010 * zoomfactor, 168.179380 * zoomfactor, 257.904050 * zoomfactor, 169.365380 * zoomfactor, 257.905910 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.173157 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(206.268290 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.bezierCurveTo(210.183070 * zoomfactor, 153.469280 * zoomfactor, 214.208040 * zoomfactor, 153.523080 * zoomfactor, 217.727400 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.bezierCurveTo(219.153180 * zoomfactor, 153.432980 * zoomfactor, 219.247810 * zoomfactor, 154.864870 * zoomfactor, 219.270720 * zoomfactor, 156.409320 * zoomfactor);
        patternContext.bezierCurveTo(219.394620 * zoomfactor, 164.759520 * zoomfactor, 219.362920 * zoomfactor, 174.421420 * zoomfactor, 219.309320 * zoomfactor, 184.124600 * zoomfactor);
        patternContext.bezierCurveTo(219.301320 * zoomfactor, 185.515280 * zoomfactor, 219.336720 * zoomfactor, 187.104860 * zoomfactor, 218.036080 * zoomfactor, 187.074930 * zoomfactor);
        patternContext.bezierCurveTo(214.333850 * zoomfactor, 186.989730 * zoomfactor, 210.221240 * zoomfactor, 186.948370 * zoomfactor, 206.152560 * zoomfactor, 187.074930 * zoomfactor);
        patternContext.bezierCurveTo(204.950170 * zoomfactor, 187.112330 * zoomfactor, 204.810300 * zoomfactor, 185.558040 * zoomfactor, 204.802150 * zoomfactor, 184.124600 * zoomfactor);
        patternContext.bezierCurveTo(204.751850 * zoomfactor, 175.275920 * zoomfactor, 204.739450 * zoomfactor, 165.410870 * zoomfactor, 204.763550 * zoomfactor, 156.945740 * zoomfactor);
        patternContext.bezierCurveTo(204.767550 * zoomfactor, 155.302100 * zoomfactor, 204.916740 * zoomfactor, 153.457120 * zoomfactor, 206.268280 * zoomfactor, 153.458980 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.187205 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(196.830900 * zoomfactor, 211.171870 * zoomfactor);
        patternContext.bezierCurveTo(196.844000 * zoomfactor, 207.572000 * zoomfactor, 196.912400 * zoomfactor, 203.870820 * zoomfactor, 196.830900 * zoomfactor, 200.634560 * zoomfactor);
        patternContext.bezierCurveTo(196.797900 * zoomfactor, 199.323480 * zoomfactor, 198.617770 * zoomfactor, 199.219600 * zoomfactor, 200.581040 * zoomfactor, 199.215400 * zoomfactor);
        patternContext.lineTo(217.177480 * zoomfactor, 199.179900 * zoomfactor);
        patternContext.bezierCurveTo(217.348900 * zoomfactor, 199.179900 * zoomfactor, 206.819320 * zoomfactor, 210.849280 * zoomfactor, 201.922580 * zoomfactor, 213.759040 * zoomfactor);
        patternContext.bezierCurveTo(201.033460 * zoomfactor, 213.652420 * zoomfactor, 196.828550 * zoomfactor, 212.414680 * zoomfactor, 196.830900 * zoomfactor, 211.171860 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.173216 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(215.677020 * zoomfactor, 62.294399 * zoomfactor);
        patternContext.lineTo(219.496300 * zoomfactor, 65.321869 * zoomfactor);
        patternContext.bezierCurveTo(218.342600 * zoomfactor, 75.914279 * zoomfactor, 205.667970 * zoomfactor, 84.790485 * zoomfactor, 202.314390 * zoomfactor, 86.250458 * zoomfactor);
        patternContext.lineTo(195.023030 * zoomfactor, 82.702352 * zoomfactor);
        patternContext.bezierCurveTo(198.780380 * zoomfactor, 81.295368 * zoomfactor, 214.495960 * zoomfactor, 72.265157 * zoomfactor, 215.677020 * zoomfactor, 62.294399 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    player7: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        // #g81
        patternContext.save();
        patternContext.transform(0.264583, 0.000000, 0.000000, 0.264583, -0.317336 * zoomfactor, -1.671710 * zoomfactor);

        // #path7615
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(19, 19, 19)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.575850 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(231.130900 * zoomfactor, 77.315107 * zoomfactor);
        patternContext.lineTo(260.137130 * zoomfactor, 126.453890 * zoomfactor);
        patternContext.bezierCurveTo(261.395060 * zoomfactor, 148.404890 * zoomfactor, 261.361400 * zoomfactor, 170.179050 * zoomfactor, 246.512990 * zoomfactor, 189.924850 * zoomfactor);
        patternContext.bezierCurveTo(235.924800 * zoomfactor, 205.069610 * zoomfactor, 223.056600 * zoomfactor, 219.370110 * zoomfactor, 191.576950 * zoomfactor, 226.778930 * zoomfactor);
        patternContext.lineTo(110.398700 * zoomfactor, 226.322510 * zoomfactor);
        patternContext.bezierCurveTo(98.848073 * zoomfactor, 223.546540 * zoomfactor, 88.468103 * zoomfactor, 216.189150 * zoomfactor, 80.246103 * zoomfactor, 209.855700 * zoomfactor);
        patternContext.bezierCurveTo(73.320563 * zoomfactor, 204.520930 * zoomfactor, 66.585523 * zoomfactor, 198.665020 * zoomfactor, 62.367393 * zoomfactor, 190.436710 * zoomfactor);
        patternContext.bezierCurveTo(51.307723 * zoomfactor, 171.068070 * zoomfactor, 43.304983 * zoomfactor, 150.862350 * zoomfactor, 48.476723 * zoomfactor, 127.049080 * zoomfactor);
        patternContext.lineTo(77.482933 * zoomfactor, 77.910293 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path2943
        patternContext.beginPath();
        patternContext.globalAlpha = 1.0;
        patternContext.fillStyle = 'rgb(26, 26, 26)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 1.768139 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(199.778230 * zoomfactor, 23.327016 * zoomfactor);
        patternContext.bezierCurveTo(216.589310 * zoomfactor, 32.108964 * zoomfactor, 229.483040 * zoomfactor, 38.897992 * zoomfactor, 236.789830 * zoomfactor, 66.352208 * zoomfactor);
        patternContext.bezierCurveTo(236.224850 * zoomfactor, 89.500249 * zoomfactor, 227.536280 * zoomfactor, 108.041810 * zoomfactor, 200.152090 * zoomfactor, 115.982030 * zoomfactor);
        patternContext.bezierCurveTo(156.330450 * zoomfactor, 114.807220 * zoomfactor, 146.317050 * zoomfactor, 113.304870 * zoomfactor, 119.399530 * zoomfactor, 111.966290 * zoomfactor);
        patternContext.bezierCurveTo(92.137833 * zoomfactor, 101.086210 * zoomfactor, 76.630963 * zoomfactor, 85.238479 * zoomfactor, 75.284723 * zoomfactor, 63.406357 * zoomfactor);
        patternContext.bezierCurveTo(77.713833 * zoomfactor, 39.765478 * zoomfactor, 90.961643 * zoomfactor, 25.141146 * zoomfactor, 109.305470 * zoomfactor, 17.970193 * zoomfactor);
        patternContext.bezierCurveTo(138.466110 * zoomfactor, 19.329508 * zoomfactor, 155.924730 * zoomfactor, 21.038751 * zoomfactor, 199.778230 * zoomfactor, 23.327016 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path1073
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.955130 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(248.214870 * zoomfactor, 190.345430 * zoomfactor);
        patternContext.lineTo(263.200830 * zoomfactor, 252.484170 * zoomfactor);
        patternContext.lineTo(241.068820 * zoomfactor, 320.358480 * zoomfactor);
        patternContext.lineTo(238.389050 * zoomfactor, 363.866810 * zoomfactor);
        patternContext.lineTo(233.922770 * zoomfactor, 378.198960 * zoomfactor);
        patternContext.lineTo(189.706570 * zoomfactor, 379.222680 * zoomfactor);
        patternContext.lineTo(182.113890 * zoomfactor, 366.426090 * zoomfactor);
        patternContext.lineTo(179.880750 * zoomfactor, 342.880430 * zoomfactor);
        patternContext.lineTo(140.130840 * zoomfactor, 342.368570 * zoomfactor);
        patternContext.lineTo(138.344330 * zoomfactor, 361.819340 * zoomfactor);
        patternContext.lineTo(132.984790 * zoomfactor, 377.175220 * zoomfactor);
        patternContext.lineTo(90.108493 * zoomfactor, 377.687080 * zoomfactor);
        patternContext.lineTo(79.389413 * zoomfactor, 362.331210 * zoomfactor);
        patternContext.lineTo(77.156273 * zoomfactor, 316.775450 * zoomfactor);
        patternContext.lineTo(59.024773 * zoomfactor, 249.412990 * zoomfactor);
        patternContext.lineTo(61.077663 * zoomfactor, 190.857290 * zoomfactor);
        patternContext.lineTo(79.836033 * zoomfactor, 212.355500 * zoomfactor);
        patternContext.lineTo(108.420240 * zoomfactor, 224.640210 * zoomfactor);
        patternContext.lineTo(129.411760 * zoomfactor, 228.223240 * zoomfactor);
        patternContext.lineTo(192.386340 * zoomfactor, 227.199510 * zoomfactor);
        patternContext.lineTo(215.164380 * zoomfactor, 219.521580 * zoomfactor);
        patternContext.lineTo(237.495790 * zoomfactor, 205.701300 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path7615-3
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 1.381718 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.miterLimit = 4;
        patternContext.moveTo(88.028533 * zoomfactor, 98.851423 * zoomfactor);
        patternContext.bezierCurveTo(70.400593 * zoomfactor, 130.875910 * zoomfactor, 58.989803 * zoomfactor, 129.052620 * zoomfactor, 85.574483 * zoomfactor, 210.378820 * zoomfactor);
        patternContext.bezierCurveTo(80.250183 * zoomfactor, 205.044050 * zoomfactor, 63.644103 * zoomfactor, 187.022600 * zoomfactor, 60.401233 * zoomfactor, 178.794290 * zoomfactor);
        patternContext.bezierCurveTo(51.898653 * zoomfactor, 159.425650 * zoomfactor, 46.852173 * zoomfactor, 153.966030 * zoomfactor, 50.828153 * zoomfactor, 130.152760 * zoomfactor);
        patternContext.lineTo(77.183083 * zoomfactor, 85.069153 * zoomfactor);
        patternContext.fill();

        // #path10302
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.177267 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(81.354483 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.bezierCurveTo(77.267123 * zoomfactor, 235.184140 * zoomfactor, 73.062873 * zoomfactor, 235.310950 * zoomfactor, 69.390223 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.bezierCurveTo(68.694003 * zoomfactor, 235.147840 * zoomfactor, 67.802793 * zoomfactor, 236.585050 * zoomfactor, 67.778863 * zoomfactor, 238.135350 * zoomfactor);
        patternContext.bezierCurveTo(67.649513 * zoomfactor, 246.517170 * zoomfactor, 67.682563 * zoomfactor, 256.215660 * zoomfactor, 67.738563 * zoomfactor, 265.955580 * zoomfactor);
        patternContext.bezierCurveTo(67.746563 * zoomfactor, 267.351530 * zoomfactor, 68.441433 * zoomfactor, 268.883760 * zoomfactor, 69.067923 * zoomfactor, 268.917090 * zoomfactor);
        patternContext.bezierCurveTo(72.929183 * zoomfactor, 269.122500 * zoomfactor, 77.228633 * zoomfactor, 269.086710 * zoomfactor, 81.475313 * zoomfactor, 268.917090 * zoomfactor);
        patternContext.bezierCurveTo(82.121143 * zoomfactor, 268.891290 * zoomfactor, 82.876723 * zoomfactor, 267.394450 * zoomfactor, 82.885243 * zoomfactor, 265.955580 * zoomfactor);
        patternContext.bezierCurveTo(82.937743 * zoomfactor, 257.073390 * zoomfactor, 82.950643 * zoomfactor, 247.171000 * zoomfactor, 82.925543 * zoomfactor, 238.673810 * zoomfactor);
        patternContext.bezierCurveTo(82.920543 * zoomfactor, 237.023940 * zoomfactor, 82.095083 * zoomfactor, 235.171980 * zoomfactor, 81.354483 * zoomfactor, 235.173840 * zoomfactor);
        patternContext.fill();

        // #path10302-0
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.133111 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(71.465453 * zoomfactor, 112.594080 * zoomfactor);
        patternContext.bezierCurveTo(69.234363 * zoomfactor, 111.982360 * zoomfactor, 66.928863 * zoomfactor, 111.395050 * zoomfactor, 64.942823 * zoomfactor, 110.774450 * zoomfactor);
        patternContext.bezierCurveTo(64.138253 * zoomfactor, 110.523000 * zoomfactor, 63.699623 * zoomfactor, 111.887200 * zoomfactor, 63.271563 * zoomfactor, 113.371210 * zoomfactor);
        patternContext.bezierCurveTo(60.957263 * zoomfactor, 121.394630 * zoomfactor, 58.379003 * zoomfactor, 130.706190 * zoomfactor, 55.802183 * zoomfactor, 140.061010 * zoomfactor);
        patternContext.bezierCurveTo(55.433303 * zoomfactor, 141.401890 * zoomfactor, 54.985743 * zoomfactor, 142.927310 * zoomfactor, 55.734083 * zoomfactor, 143.105010 * zoomfactor);
        patternContext.bezierCurveTo(57.864323 * zoomfactor, 143.610840 * zoomfactor, 60.216373 * zoomfactor, 144.224050 * zoomfactor, 62.498293 * zoomfactor, 144.992040 * zoomfactor);
        patternContext.bezierCurveTo(63.172653 * zoomfactor, 145.218990 * zoomfactor, 63.669923 * zoomfactor, 143.744080 * zoomfactor, 64.059753 * zoomfactor, 142.364660 * zoomfactor);
        patternContext.bezierCurveTo(66.466103 * zoomfactor, 133.849410 * zoomfactor, 69.124093 * zoomfactor, 124.349180 * zoomfactor, 71.384993 * zoomfactor, 116.191550 * zoomfactor);
        patternContext.bezierCurveTo(71.824733 * zoomfactor, 114.607820 * zoomfactor, 72.235263 * zoomfactor, 112.806920 * zoomfactor, 71.465393 * zoomfactor, 112.594090 * zoomfactor);
        patternContext.fill();

        // #path10302-0-8-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(77, 77, 77)';
        patternContext.lineWidth = 0.126965 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(57.303523 * zoomfactor, 162.548630 * zoomfactor);
        patternContext.bezierCurveTo(58.524963 * zoomfactor, 160.425270 * zoomfactor, 59.748753 * zoomfactor, 158.223340 * zoomfactor, 60.901163 * zoomfactor, 156.346380 * zoomfactor);
        patternContext.bezierCurveTo(61.368013 * zoomfactor, 155.586000 * zoomfactor, 60.342813 * zoomfactor, 154.901610 * zoomfactor, 59.200013 * zoomfactor, 154.226800 * zoomfactor);
        patternContext.lineTo(49.539283 * zoomfactor, 148.522270 * zoomfactor);
        patternContext.bezierCurveTo(49.439383 * zoomfactor, 148.463570 * zoomfactor, 51.592153 * zoomfactor, 158.938120 * zoomfactor, 53.452653 * zoomfactor, 162.327730 * zoomfactor);
        patternContext.bezierCurveTo(54.007263 * zoomfactor, 162.569470 * zoomfactor, 56.880583 * zoomfactor, 163.280950 * zoomfactor, 57.303523 * zoomfactor, 162.548650 * zoomfactor);
        patternContext.fill();
        patternContext.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    heizungA: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        // #rect611
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.moveTo(52.140999 * zoomfactor, 28.113303 * zoomfactor);
        patternContext.lineTo(52.140999 * zoomfactor, 28.113303 * zoomfactor);
        patternContext.quadraticCurveTo(52.140999 * zoomfactor, 28.203617 * zoomfactor, 52.140999 * zoomfactor, 28.203617 * zoomfactor);
        patternContext.lineTo(52.381837 * zoomfactor, 28.203617 * zoomfactor);
        patternContext.quadraticCurveTo(52.381837 * zoomfactor, 28.203617 * zoomfactor, 52.381837 * zoomfactor, 28.113303 * zoomfactor);
        patternContext.lineTo(52.381837 * zoomfactor, 28.113303 * zoomfactor);
        patternContext.quadraticCurveTo(52.381837 * zoomfactor, 28.022989 * zoomfactor, 52.381837 * zoomfactor, 28.022989 * zoomfactor);
        patternContext.lineTo(52.140999 * zoomfactor, 28.022989 * zoomfactor);
        patternContext.quadraticCurveTo(52.140999 * zoomfactor, 28.022989 * zoomfactor, 52.140999 * zoomfactor, 28.113303 * zoomfactor);
        patternContext.fill();

        // #rect13-2
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 25.071089 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 37.966369 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 37.966369 * zoomfactor, 13.031005 * zoomfactor, 37.966369 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 37.966369 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 37.966369 * zoomfactor, 69.031005 * zoomfactor, 37.966369 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 25.071089 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 25.071089 * zoomfactor, 65.031005 * zoomfactor, 25.071089 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 25.071089 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 25.071089 * zoomfactor, 9.031005 * zoomfactor, 25.071089 * zoomfactor);
        patternContext.fill();

        // #rect13-2-4
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 45.179443 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 58.074723 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 58.074723 * zoomfactor, 13.031005 * zoomfactor, 58.074723 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 58.074723 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 58.074723 * zoomfactor, 69.031005 * zoomfactor, 58.074723 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 45.179443 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 45.179443 * zoomfactor, 65.031005 * zoomfactor, 45.179443 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 45.179443 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 45.179443 * zoomfactor, 9.031005 * zoomfactor, 45.179443 * zoomfactor);
        patternContext.fill();

        // #rect13-2-4-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 64.424721 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 77.320001 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 77.320001 * zoomfactor, 13.031005 * zoomfactor, 77.320001 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 77.320001 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 77.320001 * zoomfactor, 69.031005 * zoomfactor, 77.320001 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 64.424721 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 64.424721 * zoomfactor, 65.031005 * zoomfactor, 64.424721 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 64.424721 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 64.424721 * zoomfactor, 9.031005 * zoomfactor, 64.424721 * zoomfactor);
        patternContext.fill();

        // #rect002
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.058956 * zoomfactor;
        patternContext.rect(32.633125 * zoomfactor, 27.134724 * zoomfactor, 12.523574 * zoomfactor, 52.867401 * zoomfactor);
        patternContext.fill();

        // #rect310
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(128, 128, 128)';
        patternContext.lineWidth = 0.029679 * zoomfactor;
        patternContext.rect(35.991089 * zoomfactor, 21.421928 * zoomfactor, 6.260000 * zoomfactor, 3.665672 * zoomfactor);
        patternContext.fill();

        // #rect095
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(102, 102, 102)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.moveTo(33.485291 * zoomfactor, 19.926117 * zoomfactor);
        patternContext.lineTo(33.485291 * zoomfactor, 21.464729 * zoomfactor);
        patternContext.quadraticCurveTo(33.485291 * zoomfactor, 21.464729 * zoomfactor, 33.585291 * zoomfactor, 21.464729 * zoomfactor);
        patternContext.lineTo(44.656889 * zoomfactor, 21.464729 * zoomfactor);
        patternContext.quadraticCurveTo(44.756889 * zoomfactor, 21.464729 * zoomfactor, 44.756889 * zoomfactor, 21.464729 * zoomfactor);
        patternContext.lineTo(44.756889 * zoomfactor, 19.926117 * zoomfactor);
        patternContext.quadraticCurveTo(44.756889 * zoomfactor, 19.926117 * zoomfactor, 44.656889 * zoomfactor, 19.926117 * zoomfactor);
        patternContext.lineTo(33.585291 * zoomfactor, 19.926117 * zoomfactor);
        patternContext.quadraticCurveTo(33.485291 * zoomfactor, 19.926117 * zoomfactor, 33.485291 * zoomfactor, 19.926117 * zoomfactor);
        patternContext.fill();

        // #path828
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(179, 179, 179)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.moveTo(36.232546 * zoomfactor, 7.131331 * zoomfactor);
        patternContext.bezierCurveTo(36.546739 * zoomfactor, 6.866747 * zoomfactor, 39.438957 * zoomfactor, 6.680007 * zoomfactor, 42.306434 * zoomfactor, 7.139101 * zoomfactor);
        patternContext.bezierCurveTo(42.697796 * zoomfactor, 6.965998 * zoomfactor, 44.662285 * zoomfactor, 19.926116 * zoomfactor, 44.662285 * zoomfactor, 19.926116 * zoomfactor);
        patternContext.bezierCurveTo(42.214509 * zoomfactor, 20.244816 * zoomfactor, 39.732509 * zoomfactor, 20.554761 * zoomfactor, 33.579893 * zoomfactor, 19.925711 * zoomfactor);
        patternContext.bezierCurveTo(33.579893 * zoomfactor, 19.925711 * zoomfactor, 35.984499 * zoomfactor, 7.214009 * zoomfactor, 36.232546 * zoomfactor, 7.131327 * zoomfactor);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    heizungM: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        // #rect611
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.moveTo(52.141422 * zoomfactor, 27.907100 * zoomfactor);
        patternContext.lineTo(52.141422 * zoomfactor, 27.907100 * zoomfactor);
        patternContext.quadraticCurveTo(52.141422 * zoomfactor, 27.997414 * zoomfactor, 52.141422 * zoomfactor, 27.997414 * zoomfactor);
        patternContext.lineTo(52.382260 * zoomfactor, 27.997414 * zoomfactor);
        patternContext.quadraticCurveTo(52.382260 * zoomfactor, 27.997414 * zoomfactor, 52.382260 * zoomfactor, 27.907100 * zoomfactor);
        patternContext.lineTo(52.382260 * zoomfactor, 27.907100 * zoomfactor);
        patternContext.quadraticCurveTo(52.382260 * zoomfactor, 27.816786 * zoomfactor, 52.382260 * zoomfactor, 27.816786 * zoomfactor);
        patternContext.lineTo(52.141422 * zoomfactor, 27.816786 * zoomfactor);
        patternContext.quadraticCurveTo(52.141422 * zoomfactor, 27.816786 * zoomfactor, 52.141422 * zoomfactor, 27.907100 * zoomfactor);
        patternContext.fill();

        // #rect613
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031423 * zoomfactor, 4.756549 * zoomfactor);
        patternContext.lineTo(9.031423 * zoomfactor, 17.651829 * zoomfactor);
        patternContext.quadraticCurveTo(9.031423 * zoomfactor, 17.651829 * zoomfactor, 13.031423 * zoomfactor, 17.651829 * zoomfactor);
        patternContext.lineTo(65.031423 * zoomfactor, 17.651829 * zoomfactor);
        patternContext.quadraticCurveTo(69.031423 * zoomfactor, 17.651829 * zoomfactor, 69.031423 * zoomfactor, 17.651829 * zoomfactor);
        patternContext.lineTo(69.031423 * zoomfactor, 4.756549 * zoomfactor);
        patternContext.quadraticCurveTo(69.031423 * zoomfactor, 4.756549 * zoomfactor, 65.031423 * zoomfactor, 4.756549 * zoomfactor);
        patternContext.lineTo(13.031423 * zoomfactor, 4.756549 * zoomfactor);
        patternContext.quadraticCurveTo(9.031423 * zoomfactor, 4.756549 * zoomfactor, 9.031423 * zoomfactor, 4.756549 * zoomfactor);
        patternContext.fill();

        // #rect613-2
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031427 * zoomfactor, 24.864885 * zoomfactor);
        patternContext.lineTo(9.031427 * zoomfactor, 37.760165 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 37.760165 * zoomfactor, 13.031427 * zoomfactor, 37.760165 * zoomfactor);
        patternContext.lineTo(65.031427 * zoomfactor, 37.760165 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 37.760165 * zoomfactor, 69.031427 * zoomfactor, 37.760165 * zoomfactor);
        patternContext.lineTo(69.031427 * zoomfactor, 24.864885 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 24.864885 * zoomfactor, 65.031427 * zoomfactor, 24.864885 * zoomfactor);
        patternContext.lineTo(13.031427 * zoomfactor, 24.864885 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 24.864885 * zoomfactor, 9.031427 * zoomfactor, 24.864885 * zoomfactor);
        patternContext.fill();

        // #rect613-2-4
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031427 * zoomfactor, 44.973240 * zoomfactor);
        patternContext.lineTo(9.031427 * zoomfactor, 57.868520 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 57.868520 * zoomfactor, 13.031427 * zoomfactor, 57.868520 * zoomfactor);
        patternContext.lineTo(65.031427 * zoomfactor, 57.868520 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 57.868520 * zoomfactor, 69.031427 * zoomfactor, 57.868520 * zoomfactor);
        patternContext.lineTo(69.031427 * zoomfactor, 44.973240 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 44.973240 * zoomfactor, 65.031427 * zoomfactor, 44.973240 * zoomfactor);
        patternContext.lineTo(13.031427 * zoomfactor, 44.973240 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 44.973240 * zoomfactor, 9.031427 * zoomfactor, 44.973240 * zoomfactor);
        patternContext.fill();

        // #rect613-2-4-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031427 * zoomfactor, 64.218521 * zoomfactor);
        patternContext.lineTo(9.031427 * zoomfactor, 77.113801 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 77.113801 * zoomfactor, 13.031427 * zoomfactor, 77.113801 * zoomfactor);
        patternContext.lineTo(65.031427 * zoomfactor, 77.113801 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 77.113801 * zoomfactor, 69.031427 * zoomfactor, 77.113801 * zoomfactor);
        patternContext.lineTo(69.031427 * zoomfactor, 64.218521 * zoomfactor);
        patternContext.quadraticCurveTo(69.031427 * zoomfactor, 64.218521 * zoomfactor, 65.031427 * zoomfactor, 64.218521 * zoomfactor);
        patternContext.lineTo(13.031427 * zoomfactor, 64.218521 * zoomfactor);
        patternContext.quadraticCurveTo(9.031427 * zoomfactor, 64.218521 * zoomfactor, 9.031427 * zoomfactor, 64.218521 * zoomfactor);
        patternContext.fill();

        // #rect1002
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.072500 * zoomfactor;
        patternContext.rect(32.633549 * zoomfactor, 0.010118 * zoomfactor, 12.523574 * zoomfactor, 79.948090 * zoomfactor);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    heizungE: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.moveTo(52.140999 * zoomfactor, 27.943006 * zoomfactor);
        patternContext.lineTo(52.140999 * zoomfactor, 27.943006 * zoomfactor);
        patternContext.quadraticCurveTo(52.140999 * zoomfactor, 28.033320 * zoomfactor, 52.140999 * zoomfactor, 28.033320 * zoomfactor);
        patternContext.lineTo(52.381837 * zoomfactor, 28.033320 * zoomfactor);
        patternContext.quadraticCurveTo(52.381837 * zoomfactor, 28.033320 * zoomfactor, 52.381837 * zoomfactor, 27.943006 * zoomfactor);
        patternContext.lineTo(52.381837 * zoomfactor, 27.943006 * zoomfactor);
        patternContext.quadraticCurveTo(52.381837 * zoomfactor, 27.852692 * zoomfactor, 52.381837 * zoomfactor, 27.852692 * zoomfactor);
        patternContext.lineTo(52.140999 * zoomfactor, 27.852692 * zoomfactor);
        patternContext.quadraticCurveTo(52.140999 * zoomfactor, 27.852692 * zoomfactor, 52.140999 * zoomfactor, 27.943006 * zoomfactor);
        patternContext.fill();

        //     rernContext613
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031000 * zoomfactor, 4.792455 * zoomfactor);
        patternContext.lineTo(9.031000 * zoomfactor, 17.687735 * zoomfactor);
        patternContext.quadraticCurveTo(9.031000 * zoomfactor, 17.687735 * zoomfactor, 13.031000 * zoomfactor, 17.687735 * zoomfactor);
        patternContext.lineTo(65.031000 * zoomfactor, 17.687735 * zoomfactor);
        patternContext.quadraticCurveTo(69.031000 * zoomfactor, 17.687735 * zoomfactor, 69.031000 * zoomfactor, 17.687735 * zoomfactor);
        patternContext.lineTo(69.031000 * zoomfactor, 4.792455 * zoomfactor);
        patternContext.quadraticCurveTo(69.031000 * zoomfactor, 4.792455 * zoomfactor, 65.031000 * zoomfactor, 4.792455 * zoomfactor);
        patternContext.lineTo(13.031000 * zoomfactor, 4.792455 * zoomfactor);
        patternContext.quadraticCurveTo(9.031000 * zoomfactor, 4.792455 * zoomfactor, 9.031000 * zoomfactor, 4.792455 * zoomfactor);
        patternContext.fill();

        //     rernContext613-2
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 24.900791 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 37.796071 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 37.796071 * zoomfactor, 13.031005 * zoomfactor, 37.796071 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 37.796071 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 37.796071 * zoomfactor, 69.031005 * zoomfactor, 37.796071 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 24.900791 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 24.900791 * zoomfactor, 65.031005 * zoomfactor, 24.900791 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 24.900791 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 24.900791 * zoomfactor, 9.031005 * zoomfactor, 24.900791 * zoomfactor);
        patternContext.fill();

        //     rernContext613-2-4
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 45.009144 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 57.904424 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 57.904424 * zoomfactor, 13.031005 * zoomfactor, 57.904424 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 57.904424 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 57.904424 * zoomfactor, 69.031005 * zoomfactor, 57.904424 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 45.009144 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 45.009144 * zoomfactor, 65.031005 * zoomfactor, 45.009144 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 45.009144 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 45.009144 * zoomfactor, 9.031005 * zoomfactor, 45.009144 * zoomfactor);
        patternContext.fill();

        //     pernContext6153
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(153, 153, 153)';
        patternContext.strokeStyle = 'rgb(153, 153, 153)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(34.195951 * zoomfactor, 77.155711 * zoomfactor);
        patternContext.lineTo(34.781352 * zoomfactor, 76.623531 * zoomfactor);
        patternContext.lineTo(43.040813 * zoomfactor, 76.612891 * zoomfactor);
        patternContext.lineTo(43.594281 * zoomfactor, 77.070567 * zoomfactor);
        patternContext.lineTo(43.583641 * zoomfactor, 77.943345 * zoomfactor);
        patternContext.lineTo(43.040816 * zoomfactor, 78.550032 * zoomfactor);
        patternContext.lineTo(34.728137 * zoomfactor, 78.592602 * zoomfactor);
        patternContext.lineTo(34.206599 * zoomfactor, 77.996559 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        //     rernContext613-2-4-7
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.056212 * zoomfactor;
        patternContext.moveTo(9.031005 * zoomfactor, 63.725258 * zoomfactor);
        patternContext.lineTo(9.031005 * zoomfactor, 76.620538 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 76.620538 * zoomfactor, 13.031005 * zoomfactor, 76.620538 * zoomfactor);
        patternContext.lineTo(65.031005 * zoomfactor, 76.620538 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 76.620538 * zoomfactor, 69.031005 * zoomfactor, 76.620538 * zoomfactor);
        patternContext.lineTo(69.031005 * zoomfactor, 63.725258 * zoomfactor);
        patternContext.quadraticCurveTo(69.031005 * zoomfactor, 63.725258 * zoomfactor, 65.031005 * zoomfactor, 63.725258 * zoomfactor);
        patternContext.lineTo(13.031005 * zoomfactor, 63.725258 * zoomfactor);
        patternContext.quadraticCurveTo(9.031005 * zoomfactor, 63.725258 * zoomfactor, 9.031005 * zoomfactor, 63.725258 * zoomfactor);
        patternContext.fill();

        //     r002
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(204, 204, 204)';
        patternContext.lineWidth = 0.070899 * zoomfactor;
        patternContext.rect(32.633125 * zoomfactor, 0.046024 * zoomfactor, 12.524000 * zoomfactor, 76.455940 * zoomfactor);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    tisch2: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        // #rect20251
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(110, 58, 29)';
        patternContext.strokeStyle = 'rgb(0, 0, 0)';
        patternContext.lineWidth = 0.266353 * zoomfactor;
        patternContext.rect(10.503345 * zoomfactor, 0.503345 * zoomfactor, 68.993309 * zoomfactor, 78.993317 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        // #path20711
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(131, 72, 35, 0.634956)';
        patternContext.lineWidth = 0.104295 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(15.449412 * zoomfactor, 0.510894 * zoomfactor);
        patternContext.bezierCurveTo(14.422144 * zoomfactor, 3.695097 * zoomfactor, 13.339358 * zoomfactor, 6.984411 * zoomfactor, 13.937440 * zoomfactor, 10.217890 * zoomfactor);
        patternContext.bezierCurveTo(14.302395 * zoomfactor, 12.190976 * zoomfactor, 14.440380 * zoomfactor, 10.662543 * zoomfactor, 14.693427 * zoomfactor, 12.942660 * zoomfactor);
        patternContext.bezierCurveTo(14.824184 * zoomfactor, 14.120804 * zoomfactor, 14.475419 * zoomfactor, 15.340328 * zoomfactor, 14.693427 * zoomfactor, 16.518922 * zoomfactor);
        patternContext.bezierCurveTo(15.197504 * zoomfactor, 19.244165 * zoomfactor, 16.324030 * zoomfactor, 22.071094 * zoomfactor, 18.095361 * zoomfactor, 24.693234 * zoomfactor);
        patternContext.bezierCurveTo(19.080281 * zoomfactor, 26.151234 * zoomfactor, 20.803840 * zoomfactor, 27.502519 * zoomfactor, 21.875289 * zoomfactor, 28.950687 * zoomfactor);
        patternContext.bezierCurveTo(24.169051 * zoomfactor, 32.050934 * zoomfactor, 21.123562 * zoomfactor, 28.106870 * zoomfactor, 23.009266 * zoomfactor, 31.505159 * zoomfactor);
        patternContext.bezierCurveTo(23.363773 * zoomfactor, 32.144028 * zoomfactor, 24.255517 * zoomfactor, 32.798411 * zoomfactor, 24.899231 * zoomfactor, 33.378441 * zoomfactor);
        patternContext.bezierCurveTo(25.734572 * zoomfactor, 34.131138 * zoomfactor, 26.661366 * zoomfactor, 36.148446 * zoomfactor, 26.789192 * zoomfactor, 36.954700 * zoomfactor);
        patternContext.bezierCurveTo(27.203515 * zoomfactor, 39.568011 * zoomfactor, 26.985782 * zoomfactor, 42.370060 * zoomfactor, 26.411202 * zoomfactor, 44.958714 * zoomfactor);
        patternContext.bezierCurveTo(26.335982 * zoomfactor, 45.297621 * zoomfactor, 26.559471 * zoomfactor, 45.646522 * zoomfactor, 26.411202 * zoomfactor, 45.980503 * zoomfactor);
        patternContext.bezierCurveTo(26.254921 * zoomfactor, 46.332552 * zoomfactor, 25.811497 * zoomfactor, 46.650245 * zoomfactor, 25.655215 * zoomfactor, 47.002292 * zoomfactor);
        patternContext.bezierCurveTo(25.379899 * zoomfactor, 47.622489 * zoomfactor, 25.417064 * zoomfactor, 48.245545 * zoomfactor, 25.277223 * zoomfactor, 48.875574 * zoomfactor);
        patternContext.bezierCurveTo(24.973021 * zoomfactor, 50.246105 * zoomfactor, 23.893635 * zoomfactor, 51.934493 * zoomfactor, 23.387259 * zoomfactor, 53.303325 * zoomfactor);
        patternContext.bezierCurveTo(23.230578 * zoomfactor, 53.726881 * zoomfactor, 23.619819 * zoomfactor, 54.246607 * zoomfactor, 23.387259 * zoomfactor, 54.665710 * zoomfactor);
        patternContext.bezierCurveTo(22.658204 * zoomfactor, 55.979562 * zoomfactor, 22.588514 * zoomfactor, 59.810102 * zoomfactor, 23.009266 * zoomfactor, 61.137040 * zoomfactor);
        patternContext.bezierCurveTo(23.342359 * zoomfactor, 62.187526 * zoomfactor, 23.625224 * zoomfactor, 63.300596 * zoomfactor, 23.387259 * zoomfactor, 64.372706 * zoomfactor);
        patternContext.bezierCurveTo(23.093760 * zoomfactor, 65.695025 * zoomfactor, 21.685945 * zoomfactor, 66.842811 * zoomfactor, 21.119302 * zoomfactor, 68.119264 * zoomfactor);
        patternContext.bezierCurveTo(20.703599 * zoomfactor, 69.055707 * zoomfactor, 20.735022 * zoomfactor, 69.915187 * zoomfactor, 19.985325 * zoomfactor, 70.844036 * zoomfactor);
        patternContext.bezierCurveTo(19.600195 * zoomfactor, 71.321199 * zoomfactor, 18.829729 * zoomfactor, 71.724744 * zoomfactor, 18.473353 * zoomfactor, 72.206421 * zoomfactor);
        patternContext.bezierCurveTo(17.987848 * zoomfactor, 72.862632 * zoomfactor, 19.275193 * zoomfactor, 75.633042 * zoomfactor, 19.985325 * zoomfactor, 75.952981 * zoomfactor);
        patternContext.bezierCurveTo(20.074425 * zoomfactor, 75.993121 * zoomfactor, 20.274223 * zoomfactor, 75.912841 * zoomfactor, 20.363318 * zoomfactor, 75.952981 * zoomfactor);
        patternContext.bezierCurveTo(20.971433 * zoomfactor, 76.226957 * zoomfactor, 19.086780 * zoomfactor, 77.337752 * zoomfactor, 18.851346 * zoomfactor, 77.655961 * zoomfactor);
        patternContext.bezierCurveTo(18.577945 * zoomfactor, 78.025492 * zoomfactor, 18.851346 * zoomfactor, 78.614944 * zoomfactor, 18.851346 * zoomfactor, 79.018349 * zoomfactor);
        patternContext.fill();

        // #path20713
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(103, 57, 28, 0.643805)';
        patternContext.lineWidth = 0.088960 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(49.737416 * zoomfactor, 58.858095 * zoomfactor);
        patternContext.bezierCurveTo(48.169259 * zoomfactor, 71.129519 * zoomfactor, 66.959300 * zoomfactor, 80.479034 * zoomfactor, 68.493118 * zoomfactor, 78.626100 * zoomfactor);
        patternContext.bezierCurveTo(69.207136 * zoomfactor, 77.763534 * zoomfactor, 69.072970 * zoomfactor, 76.636919 * zoomfactor, 68.757284 * zoomfactor, 75.789435 * zoomfactor);
        patternContext.bezierCurveTo(68.727084 * zoomfactor, 75.708355 * zoomfactor, 68.523320 * zoomfactor, 75.693215 * zoomfactor, 68.493118 * zoomfactor, 75.612145 * zoomfactor);
        patternContext.bezierCurveTo(68.375088 * zoomfactor, 75.295296 * zoomfactor, 68.648425 * zoomfactor, 74.861088 * zoomfactor, 68.493118 * zoomfactor, 74.548395 * zoomfactor);
        patternContext.bezierCurveTo(68.119759 * zoomfactor, 73.796666 * zoomfactor, 68.133718 * zoomfactor, 73.037235 * zoomfactor, 67.964789 * zoomfactor, 72.243605 * zoomfactor);
        patternContext.bezierCurveTo(67.953159 * zoomfactor, 72.188765 * zoomfactor, 67.448134 * zoomfactor, 71.234700 * zoomfactor, 67.436461 * zoomfactor, 71.179855 * zoomfactor);
        patternContext.bezierCurveTo(67.230274 * zoomfactor, 70.211196 * zoomfactor, 66.923286 * zoomfactor, 68.991328 * zoomfactor, 67.172295 * zoomfactor, 67.988607 * zoomfactor);
        patternContext.bezierCurveTo(67.494429 * zoomfactor, 66.691426 * zoomfactor, 67.586986 * zoomfactor, 65.533275 * zoomfactor, 67.964789 * zoomfactor, 64.265485 * zoomfactor);
        patternContext.bezierCurveTo(68.089008 * zoomfactor, 63.848665 * zoomfactor, 68.603167 * zoomfactor, 63.438185 * zoomfactor, 68.757284 * zoomfactor, 63.024445 * zoomfactor);
        patternContext.bezierCurveTo(69.018623 * zoomfactor, 62.322870 * zoomfactor, 68.963023 * zoomfactor, 61.546460 * zoomfactor, 69.285612 * zoomfactor, 60.896946 * zoomfactor);
        patternContext.bezierCurveTo(69.570328 * zoomfactor, 60.323697 * zoomfactor, 69.136899 * zoomfactor, 59.545585 * zoomfactor, 69.285612 * zoomfactor, 58.946738 * zoomfactor);
        patternContext.bezierCurveTo(69.373672 * zoomfactor, 58.769448 * zoomfactor, 69.461723 * zoomfactor, 58.592155 * zoomfactor, 69.549778 * zoomfactor, 58.414863 * zoomfactor);
        patternContext.bezierCurveTo(69.637838 * zoomfactor, 58.355773 * zoomfactor, 69.774566 * zoomfactor, 58.316853 * zoomfactor, 69.813944 * zoomfactor, 58.237574 * zoomfactor);
        patternContext.bezierCurveTo(69.925320 * zoomfactor, 58.013314 * zoomfactor, 69.756034 * zoomfactor, 57.761579 * zoomfactor, 69.813944 * zoomfactor, 57.528406 * zoomfactor);
        patternContext.bezierCurveTo(69.977086 * zoomfactor, 56.871453 * zoomfactor, 70.204245 * zoomfactor, 56.226644 * zoomfactor, 70.342273 * zoomfactor, 55.578200 * zoomfactor);
        patternContext.bezierCurveTo(70.465469 * zoomfactor, 54.999463 * zoomfactor, 70.234217 * zoomfactor, 54.385439 * zoomfactor, 70.342273 * zoomfactor, 53.805283 * zoomfactor);
        patternContext.bezierCurveTo(70.442977 * zoomfactor, 53.264641 * zoomfactor, 70.769908 * zoomfactor, 52.750302 * zoomfactor, 70.870601 * zoomfactor, 52.209660 * zoomfactor);
        patternContext.bezierCurveTo(71.097551 * zoomfactor, 50.991157 * zoomfactor, 70.570072 * zoomfactor, 49.696726 * zoomfactor, 70.870601 * zoomfactor, 48.486537 * zoomfactor);
        patternContext.bezierCurveTo(71.382931 * zoomfactor, 46.423468 * zoomfactor, 71.134767 * zoomfactor, 44.215418 * zoomfactor, 71.134767 * zoomfactor, 42.104043 * zoomfactor);
        patternContext.bezierCurveTo(71.134767 * zoomfactor, 41.001291 * zoomfactor, 70.953810 * zoomfactor, 39.828532 * zoomfactor, 71.134767 * zoomfactor, 38.735503 * zoomfactor);
        patternContext.bezierCurveTo(71.323384 * zoomfactor, 37.596217 * zoomfactor, 71.646975 * zoomfactor, 36.354977 * zoomfactor, 71.398933 * zoomfactor, 35.189673 * zoomfactor);
        patternContext.bezierCurveTo(71.323193 * zoomfactor, 34.833812 * zoomfactor, 71.304143 * zoomfactor, 34.466950 * zoomfactor, 71.134767 * zoomfactor, 34.125923 * zoomfactor);
        patternContext.bezierCurveTo(71.034374 * zoomfactor, 33.923780 * zoomfactor, 78.499698 * zoomfactor, 45.320142 * zoomfactor, 78.399302 * zoomfactor, 45.118000 * zoomfactor);
        patternContext.bezierCurveTo(78.315772 * zoomfactor, 44.949805 * zoomfactor, 70.643792 * zoomfactor, 33.237684 * zoomfactor, 70.606439 * zoomfactor, 33.062174 * zoomfactor);
        patternContext.bezierCurveTo(70.400224 * zoomfactor, 32.093380 * zoomfactor, 71.634745 * zoomfactor, 27.304377 * zoomfactor, 70.738523 * zoomfactor, 26.502386 * zoomfactor);
        patternContext.bezierCurveTo(70.264818 * zoomfactor, 26.078490 * zoomfactor, 67.872972 * zoomfactor, 28.360159 * zoomfactor, 67.436463 * zoomfactor, 27.920719 * zoomfactor);
        patternContext.bezierCurveTo(67.218026 * zoomfactor, 27.700816 * zoomfactor, 64.099125 * zoomfactor, 38.241399 * zoomfactor, 66.908131 * zoomfactor, 27.211553 * zoomfactor);
        patternContext.bezierCurveTo(66.971081 * zoomfactor, 26.964409 * zoomfactor, 66.282709 * zoomfactor, 26.903936 * zoomfactor, 66.115637 * zoomfactor, 26.679678 * zoomfactor);
        patternContext.bezierCurveTo(66.031017 * zoomfactor, 26.566097 * zoomfactor, 65.637368 * zoomfactor, 25.074748 * zoomfactor, 65.587308 * zoomfactor, 24.906763 * zoomfactor);
        patternContext.bezierCurveTo(65.077214 * zoomfactor, 23.195045 * zoomfactor, 65.557088 * zoomfactor, 26.360435 * zoomfactor, 65.058979 * zoomfactor, 24.020305 * zoomfactor);
        patternContext.bezierCurveTo(64.792161 * zoomfactor, 22.766810 * zoomfactor, 64.850452 * zoomfactor, 21.024862 * zoomfactor, 65.058979 * zoomfactor, 19.765309 * zoomfactor);
        patternContext.bezierCurveTo(65.165266 * zoomfactor, 19.123272 * zoomfactor, 65.521964 * zoomfactor, 18.482285 * zoomfactor, 65.323143 * zoomfactor, 17.815102 * zoomfactor);
        patternContext.bezierCurveTo(64.997365 * zoomfactor, 16.721890 * zoomfactor, 64.215086 * zoomfactor, 15.588936 * zoomfactor, 64.002319 * zoomfactor, 14.446562 * zoomfactor);
        patternContext.bezierCurveTo(63.804143 * zoomfactor, 13.382537 * zoomfactor, 63.858911 * zoomfactor, 12.465966 * zoomfactor, 63.473989 * zoomfactor, 11.432606 * zoomfactor);
        patternContext.bezierCurveTo(63.328953 * zoomfactor, 11.043260 * zoomfactor, 63.619026 * zoomfactor, 10.580910 * zoomfactor, 63.473989 * zoomfactor, 10.191564 * zoomfactor);
        patternContext.bezierCurveTo(63.358984 * zoomfactor, 9.882819 * zoomfactor, 63.038656 * zoomfactor, 9.617174 * zoomfactor, 62.945659 * zoomfactor, 9.305106 * zoomfactor);
        patternContext.bezierCurveTo(62.859319 * zoomfactor, 9.015358 * zoomfactor, 63.084894 * zoomfactor, 8.698971 * zoomfactor, 62.945659 * zoomfactor, 8.418648 * zoomfactor);
        patternContext.bezierCurveTo(62.153171 * zoomfactor, 6.823037 * zoomfactor, 62.399938 * zoomfactor, 5.026764 * zoomfactor, 61.360670 * zoomfactor, 3.631776 * zoomfactor);
        patternContext.bezierCurveTo(61.228586 * zoomfactor, 3.454484 * zoomfactor, 61.624836 * zoomfactor, 3.277193 * zoomfactor, 61.360670 * zoomfactor, 3.099901 * zoomfactor);
        patternContext.bezierCurveTo(61.236140 * zoomfactor, 3.016325 * zoomfactor, 60.956869 * zoomfactor, 3.183477 * zoomfactor, 60.832341 * zoomfactor, 3.099901 * zoomfactor);
        patternContext.bezierCurveTo(60.828941 * zoomfactor, 3.097611 * zoomfactor, 60.376540 * zoomfactor, 2.237782 * zoomfactor, 60.304011 * zoomfactor, 2.213444 * zoomfactor);
        patternContext.bezierCurveTo(60.146493 * zoomfactor, 2.160586 * zoomfactor, 59.922214 * zoomfactor, 2.279006 * zoomfactor, 59.775681 * zoomfactor, 2.213444 * zoomfactor);
        patternContext.bezierCurveTo(59.205004 * zoomfactor, 1.958108 * zoomfactor, 59.451187 * zoomfactor, 1.463788 * zoomfactor, 58.983185 * zoomfactor, 1.149694 * zoomfactor);
        patternContext.fill();

        // #path20715
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(131, 72, 35, 0.634956)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(29.631880 * zoomfactor, 1.021789 * zoomfactor);
        patternContext.bezierCurveTo(29.404815 * zoomfactor, 1.192087 * zoomfactor, 29.151386 * zoomfactor, 1.331985 * zoomfactor, 28.950687 * zoomfactor, 1.532684 * zoomfactor);
        patternContext.bezierCurveTo(28.610594 * zoomfactor, 1.872778 * zoomfactor, 28.524768 * zoomfactor, 2.682973 * zoomfactor, 28.439792 * zoomfactor, 3.065367 * zoomfactor);
        patternContext.bezierCurveTo(27.947159 * zoomfactor, 5.282215 * zoomfactor, 28.478062 * zoomfactor, 8.080551 * zoomfactor, 29.461581 * zoomfactor, 10.047592 * zoomfactor);
        patternContext.bezierCurveTo(29.744524 * zoomfactor, 10.613475 * zoomfactor, 29.570166 * zoomfactor, 11.511141 * zoomfactor, 29.802179 * zoomfactor, 12.091170 * zoomfactor);
        patternContext.bezierCurveTo(29.861809 * zoomfactor, 12.240244 * zoomfactor, 30.070970 * zoomfactor, 12.288158 * zoomfactor, 30.142775 * zoomfactor, 12.431766 * zoomfactor);
        patternContext.bezierCurveTo(30.599626 * zoomfactor, 13.345468 * zoomfactor, 29.408842 * zoomfactor, 18.485599 * zoomfactor, 29.120986 * zoomfactor, 19.924885 * zoomfactor);
        patternContext.bezierCurveTo(28.884761 * zoomfactor, 21.106006 * zoomfactor, 29.527897 * zoomfactor, 22.063421 * zoomfactor, 29.802179 * zoomfactor, 23.160550 * zoomfactor);
        patternContext.bezierCurveTo(29.884789 * zoomfactor, 23.490977 * zoomfactor, 29.768289 * zoomfactor, 23.843433 * zoomfactor, 29.802179 * zoomfactor, 24.182339 * zoomfactor);
        patternContext.bezierCurveTo(29.830979 * zoomfactor, 24.470354 * zoomfactor, 29.946272 * zoomfactor, 24.745567 * zoomfactor, 29.972476 * zoomfactor, 25.033830 * zoomfactor);
        patternContext.bezierCurveTo(30.047786 * zoomfactor, 25.862178 * zoomfactor, 29.835625 * zoomfactor, 26.767197 * zoomfactor, 29.972476 * zoomfactor, 27.588302 * zoomfactor);
        patternContext.bezierCurveTo(30.145241 * zoomfactor, 28.624887 * zoomfactor, 30.227481 * zoomfactor, 29.722794 * zoomfactor, 30.142775 * zoomfactor, 30.823969 * zoomfactor);
        patternContext.bezierCurveTo(29.926454 * zoomfactor, 33.636129 * zoomfactor, 30.061335 * zoomfactor, 30.453687 * zoomfactor, 29.802179 * zoomfactor, 32.526949 * zoomfactor);
        patternContext.bezierCurveTo(29.745849 * zoomfactor, 32.977571 * zoomfactor, 29.858509 * zoomfactor, 33.438713 * zoomfactor, 29.802179 * zoomfactor, 33.889336 * zoomfactor);
        patternContext.bezierCurveTo(29.626197 * zoomfactor, 35.297186 * zoomfactor, 29.210568 * zoomfactor, 36.677092 * zoomfactor, 28.950687 * zoomfactor, 37.976489 * zoomfactor);
        patternContext.bezierCurveTo(28.806817 * zoomfactor, 38.695841 * zoomfactor, 28.923387 * zoomfactor, 39.475378 * zoomfactor, 28.780390 * zoomfactor, 40.190367 * zoomfactor);
        patternContext.bezierCurveTo(28.709980 * zoomfactor, 40.542416 * zoomfactor, 28.490566 * zoomfactor, 40.856744 * zoomfactor, 28.439792 * zoomfactor, 41.212156 * zoomfactor);
        patternContext.bezierCurveTo(28.336033 * zoomfactor, 41.938466 * zoomfactor, 28.373112 * zoomfactor, 42.700731 * zoomfactor, 28.269496 * zoomfactor, 43.426033 * zoomfactor);
        patternContext.bezierCurveTo(28.251556 * zoomfactor, 43.551689 * zoomfactor, 28.117149 * zoomfactor, 43.640970 * zoomfactor, 28.099197 * zoomfactor, 43.766628 * zoomfactor);
        patternContext.bezierCurveTo(27.971474 * zoomfactor, 44.660692 * zoomfactor, 28.201376 * zoomfactor, 44.481879 * zoomfactor, 28.099197 * zoomfactor, 45.299312 * zoomfactor);
        patternContext.bezierCurveTo(27.991993 * zoomfactor, 46.156943 * zoomfactor, 27.708995 * zoomfactor, 47.008933 * zoomfactor, 27.588302 * zoomfactor, 47.853785 * zoomfactor);
        patternContext.bezierCurveTo(27.500862 * zoomfactor, 48.465853 * zoomfactor, 27.656612 * zoomfactor, 49.112254 * zoomfactor, 27.588302 * zoomfactor, 49.727064 * zoomfactor);
        patternContext.bezierCurveTo(27.531532 * zoomfactor, 50.237958 * zoomfactor, 27.518812 * zoomfactor, 50.755690 * zoomfactor, 27.418003 * zoomfactor, 51.259747 * zoomfactor);
        patternContext.bezierCurveTo(27.323613 * zoomfactor, 51.731687 * zoomfactor, 27.077408 * zoomfactor, 51.611762 * zoomfactor, 27.077408 * zoomfactor, 52.111237 * zoomfactor);
        patternContext.bezierCurveTo(27.077408 * zoomfactor, 52.960129 * zoomfactor, 26.875552 * zoomfactor, 53.833267 * zoomfactor, 26.736812 * zoomfactor, 54.665710 * zoomfactor);
        patternContext.bezierCurveTo(26.642202 * zoomfactor, 55.233371 * zoomfactor, 26.878727 * zoomfactor, 54.807625 * zoomfactor, 26.736812 * zoomfactor, 55.517200 * zoomfactor);
        patternContext.bezierCurveTo(26.407972 * zoomfactor, 57.161400 * zoomfactor, 26.717342 * zoomfactor, 54.120872 * zoomfactor, 26.396215 * zoomfactor, 56.368693 * zoomfactor);
        patternContext.bezierCurveTo(26.318745 * zoomfactor, 56.911001 * zoomfactor, 26.116469 * zoomfactor, 59.257636 * zoomfactor, 25.885321 * zoomfactor, 59.604356 * zoomfactor);
        patternContext.bezierCurveTo(25.814911 * zoomfactor, 59.709973 * zoomfactor, 25.610031 * zoomfactor, 59.665806 * zoomfactor, 25.544724 * zoomfactor, 59.774655 * zoomfactor);
        patternContext.bezierCurveTo(25.332102 * zoomfactor, 60.129025 * zoomfactor, 25.409164 * zoomfactor, 60.607929 * zoomfactor, 25.204128 * zoomfactor, 60.966743 * zoomfactor);
        patternContext.bezierCurveTo(24.922490 * zoomfactor, 61.459609 * zoomfactor, 24.483199 * zoomfactor, 61.847753 * zoomfactor, 24.182339 * zoomfactor, 62.329128 * zoomfactor);
        patternContext.bezierCurveTo(23.719043 * zoomfactor, 63.070401 * zoomfactor, 23.296261 * zoomfactor, 63.828543 * zoomfactor, 22.819954 * zoomfactor, 64.543003 * zoomfactor);
        patternContext.bezierCurveTo(22.608725 * zoomfactor, 64.859846 * zoomfactor, 22.578324 * zoomfactor, 65.295528 * zoomfactor, 22.309059 * zoomfactor, 65.564792 * zoomfactor);
        patternContext.bezierCurveTo(22.223909 * zoomfactor, 65.649942 * zoomfactor, 22.053612 * zoomfactor, 65.649942 * zoomfactor, 21.968463 * zoomfactor, 65.735091 * zoomfactor);
        patternContext.bezierCurveTo(21.888183 * zoomfactor, 65.815371 * zoomfactor, 21.990733 * zoomfactor, 65.964360 * zoomfactor, 21.968463 * zoomfactor, 66.075686 * zoomfactor);
        patternContext.bezierCurveTo(21.922563 * zoomfactor, 66.305194 * zoomfactor, 21.872183 * zoomfactor, 66.534839 * zoomfactor, 21.798165 * zoomfactor, 66.756880 * zoomfactor);
        patternContext.bezierCurveTo(21.417478 * zoomfactor, 67.898938 * zoomfactor, 21.145386 * zoomfactor, 69.055813 * zoomfactor, 20.776376 * zoomfactor, 70.162842 * zoomfactor);
        patternContext.bezierCurveTo(20.696856 * zoomfactor, 70.401399 * zoomfactor, 20.938532 * zoomfactor, 71.022476 * zoomfactor, 20.776376 * zoomfactor, 71.184632 * zoomfactor);
        patternContext.bezierCurveTo(20.736236 * zoomfactor, 71.224772 * zoomfactor, 20.631464 * zoomfactor, 71.133862 * zoomfactor, 20.606078 * zoomfactor, 71.184632 * zoomfactor);
        patternContext.bezierCurveTo(20.394615 * zoomfactor, 71.607557 * zoomfactor, 20.568098 * zoomfactor, 73.209848 * zoomfactor, 20.435780 * zoomfactor, 73.739104 * zoomfactor);
        patternContext.bezierCurveTo(20.329589 * zoomfactor, 74.163866 * zoomfactor, 20.095183 * zoomfactor, 74.662246 * zoomfactor, 20.095183 * zoomfactor, 75.101489 * zoomfactor);
        patternContext.bezierCurveTo(20.095183 * zoomfactor, 75.358727 * zoomfactor, 20.234298 * zoomfactor, 78.816866 * zoomfactor, 19.924885 * zoomfactor, 78.507454 * zoomfactor);
        patternContext.bezierCurveTo(19.708726 * zoomfactor, 78.291295 * zoomfactor, 20.120552 * zoomfactor, 77.925117 * zoomfactor, 20.265481 * zoomfactor, 77.655961 * zoomfactor);
        patternContext.bezierCurveTo(23.048802 * zoomfactor, 72.486937 * zoomfactor, 19.578958 * zoomfactor, 78.905845 * zoomfactor, 21.798165 * zoomfactor, 75.101489 * zoomfactor);
        patternContext.bezierCurveTo(21.985233 * zoomfactor, 74.780803 * zoomfactor, 22.378023 * zoomfactor, 73.329545 * zoomfactor, 22.649656 * zoomfactor, 73.057913 * zoomfactor);
        patternContext.bezierCurveTo(22.689796 * zoomfactor, 73.017773 * zoomfactor, 22.788466 * zoomfactor, 73.105143 * zoomfactor, 22.819954 * zoomfactor, 73.057913 * zoomfactor);
        patternContext.bezierCurveTo(23.019102 * zoomfactor, 72.759188 * zoomfactor, 22.936272 * zoomfactor, 72.316471 * zoomfactor, 23.160550 * zoomfactor, 72.036124 * zoomfactor);
        patternContext.bezierCurveTo(23.288408 * zoomfactor, 71.876300 * zoomfactor, 23.548641 * zoomfactor, 71.859266 * zoomfactor, 23.671445 * zoomfactor, 71.695526 * zoomfactor);
        patternContext.bezierCurveTo(23.739565 * zoomfactor, 71.604696 * zoomfactor, 23.620675 * zoomfactor, 71.456478 * zoomfactor, 23.671445 * zoomfactor, 71.354931 * zoomfactor);
        patternContext.bezierCurveTo(23.850955 * zoomfactor, 70.995910 * zoomfactor, 24.261710 * zoomfactor, 70.808204 * zoomfactor, 24.522936 * zoomfactor, 70.503441 * zoomfactor);
        patternContext.bezierCurveTo(25.483972 * zoomfactor, 69.382232 * zoomfactor, 26.961716 * zoomfactor, 67.274254 * zoomfactor, 27.418003 * zoomfactor, 65.905390 * zoomfactor);
        patternContext.bezierCurveTo(28.011924 * zoomfactor, 64.123630 * zoomfactor, 27.680377 * zoomfactor, 61.484972 * zoomfactor, 28.780390 * zoomfactor, 59.944954 * zoomfactor);
        patternContext.bezierCurveTo(29.267279 * zoomfactor, 59.263308 * zoomfactor, 29.721696 * zoomfactor, 59.173945 * zoomfactor, 30.313074 * zoomfactor, 58.582567 * zoomfactor);
        patternContext.bezierCurveTo(30.898084 * zoomfactor, 57.997558 * zoomfactor, 31.665844 * zoomfactor, 57.233004 * zoomfactor, 32.186353 * zoomfactor, 56.538989 * zoomfactor);
        patternContext.bezierCurveTo(32.636018 * zoomfactor, 55.939438 * zoomfactor, 32.896315 * zoomfactor, 54.948772 * zoomfactor, 33.208142 * zoomfactor, 54.325115 * zoomfactor);
        patternContext.bezierCurveTo(33.408424 * zoomfactor, 53.924551 * zoomfactor, 33.901432 * zoomfactor, 53.528528 * zoomfactor, 34.059632 * zoomfactor, 53.133026 * zoomfactor);
        patternContext.bezierCurveTo(34.413975 * zoomfactor, 52.247167 * zoomfactor, 34.647256 * zoomfactor, 51.331796 * zoomfactor, 34.911122 * zoomfactor, 50.408257 * zoomfactor);
        patternContext.bezierCurveTo(35.093656 * zoomfactor, 49.769392 * zoomfactor, 35.448181 * zoomfactor, 49.183583 * zoomfactor, 35.592316 * zoomfactor, 48.534976 * zoomfactor);
        patternContext.bezierCurveTo(35.680616 * zoomfactor, 48.137614 * zoomfactor, 35.526086 * zoomfactor, 47.740252 * zoomfactor, 35.592316 * zoomfactor, 47.342890 * zoomfactor);
        patternContext.bezierCurveTo(35.842228 * zoomfactor, 45.843417 * zoomfactor, 35.762615 * zoomfactor, 44.284204 * zoomfactor, 35.762615 * zoomfactor, 42.744839 * zoomfactor);
        patternContext.bezierCurveTo(35.762615 * zoomfactor, 40.957722 * zoomfactor, 35.940298 * zoomfactor, 39.072140 * zoomfactor, 35.762615 * zoomfactor, 37.295298 * zoomfactor);
        patternContext.bezierCurveTo(35.682795 * zoomfactor, 36.497114 * zoomfactor, 35.510604 * zoomfactor, 35.708396 * zoomfactor, 35.422017 * zoomfactor, 34.911122 * zoomfactor);
        patternContext.bezierCurveTo(35.341027 * zoomfactor, 34.182158 * zoomfactor, 35.495007 * zoomfactor, 33.427103 * zoomfactor, 35.422017 * zoomfactor, 32.697248 * zoomfactor);
        patternContext.bezierCurveTo(35.285955 * zoomfactor, 31.336607 * zoomfactor, 35.047864 * zoomfactor, 29.977506 * zoomfactor, 34.911122 * zoomfactor, 28.610091 * zoomfactor);
        patternContext.bezierCurveTo(34.849352 * zoomfactor, 27.992411 * zoomfactor, 34.979672 * zoomfactor, 27.353723 * zoomfactor, 34.911122 * zoomfactor, 26.736812 * zoomfactor);
        patternContext.bezierCurveTo(34.803315 * zoomfactor, 25.766524 * zoomfactor, 34.691693 * zoomfactor, 24.811077 * zoomfactor, 34.570527 * zoomfactor, 23.841743 * zoomfactor);
        patternContext.bezierCurveTo(34.509187 * zoomfactor, 23.351048 * zoomfactor, 34.677604 * zoomfactor, 22.790904 * zoomfactor, 34.570527 * zoomfactor, 22.309059 * zoomfactor);
        patternContext.bezierCurveTo(34.492647 * zoomfactor, 21.958589 * zoomfactor, 34.300339 * zoomfactor, 21.639319 * zoomfactor, 34.229931 * zoomfactor, 21.287270 * zoomfactor);
        patternContext.bezierCurveTo(34.120764 * zoomfactor, 20.741443 * zoomfactor, 34.339096 * zoomfactor, 20.130116 * zoomfactor, 34.229931 * zoomfactor, 19.584289 * zoomfactor);
        patternContext.bezierCurveTo(34.205031 * zoomfactor, 19.459821 * zoomfactor, 34.077584 * zoomfactor, 19.369349 * zoomfactor, 34.059632 * zoomfactor, 19.243692 * zoomfactor);
        patternContext.bezierCurveTo(33.773319 * zoomfactor, 17.239496 * zoomfactor, 34.310843 * zoomfactor, 15.122650 * zoomfactor, 34.059632 * zoomfactor, 13.112959 * zoomfactor);
        patternContext.bezierCurveTo(34.030602 * zoomfactor, 12.880713 * zoomfactor, 33.927811 * zoomfactor, 12.662634 * zoomfactor, 33.889336 * zoomfactor, 12.431766 * zoomfactor);
        patternContext.bezierCurveTo(33.788381 * zoomfactor, 11.826048 * zoomfactor, 34.009644 * zoomfactor, 11.160034 * zoomfactor, 33.889336 * zoomfactor, 10.558486 * zoomfactor);
        patternContext.bezierCurveTo(33.839546 * zoomfactor, 10.309551 * zoomfactor, 33.610309 * zoomfactor, 10.123579 * zoomfactor, 33.548738 * zoomfactor, 9.877293 * zoomfactor);
        patternContext.bezierCurveTo(33.472438 * zoomfactor, 9.572097 * zoomfactor, 33.439277 * zoomfactor, 9.159693 * zoomfactor, 33.378441 * zoomfactor, 8.855505 * zoomfactor);
        patternContext.bezierCurveTo(33.258357 * zoomfactor, 8.255094 * zoomfactor, 33.498522 * zoomfactor, 7.582635 * zoomfactor, 33.378441 * zoomfactor, 6.982225 * zoomfactor);
        patternContext.bezierCurveTo(33.265512 * zoomfactor, 6.417578 * zoomfactor, 33.177996 * zoomfactor, 5.839855 * zoomfactor, 33.037843 * zoomfactor, 5.279243 * zoomfactor);
        patternContext.bezierCurveTo(32.863514 * zoomfactor, 4.581924 * zoomfactor, 33.075243 * zoomfactor, 1.096596 * zoomfactor, 32.867547 * zoomfactor, 0.681193 * zoomfactor);
        patternContext.bezierCurveTo(32.591697 * zoomfactor, 0.129495 * zoomfactor, 31.301782 * zoomfactor, 0.868031 * zoomfactor, 30.994265 * zoomfactor, 1.021789 * zoomfactor);
        patternContext.bezierCurveTo(30.781640 * zoomfactor, 1.128101 * zoomfactor, 29.744410 * zoomfactor, 1.021789 * zoomfactor, 29.631880 * zoomfactor, 1.021789 * zoomfactor);
        patternContext.fill();

        // #path20715-9
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(102, 57, 27, 0.670354)';
        patternContext.lineWidth = 0.101431 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(31.643983 * zoomfactor, 1.276316 * zoomfactor);
        patternContext.bezierCurveTo(31.171471 * zoomfactor, 1.448122 * zoomfactor, 30.644096 * zoomfactor, 1.589259 * zoomfactor, 30.226450 * zoomfactor, 1.791735 * zoomfactor);
        patternContext.bezierCurveTo(29.518731 * zoomfactor, 2.134841 * zoomfactor, 29.340131 * zoomfactor, 2.952211 * zoomfactor, 29.163300 * zoomfactor, 3.337990 * zoomfactor);
        patternContext.bezierCurveTo(28.138152 * zoomfactor, 5.574469 * zoomfactor, 29.242940 * zoomfactor, 8.397584 * zoomfactor, 31.289598 * zoomfactor, 10.382044 * zoomfactor);
        patternContext.bezierCurveTo(31.878390 * zoomfactor, 10.952938 * zoomfactor, 31.515559 * zoomfactor, 11.858554 * zoomfactor, 31.998368 * zoomfactor, 12.443719 * zoomfactor);
        patternContext.bezierCurveTo(32.122455 * zoomfactor, 12.594113 * zoomfactor, 32.557710 * zoomfactor, 12.642452 * zoomfactor, 32.707133 * zoomfactor, 12.787331 * zoomfactor);
        patternContext.bezierCurveTo(33.657820 * zoomfactor, 13.709124 * zoomfactor, 31.179851 * zoomfactor, 18.894772 * zoomfactor, 30.580835 * zoomfactor, 20.346803 * zoomfactor);
        patternContext.bezierCurveTo(30.089261 * zoomfactor, 21.538383 * zoomfactor, 31.427599 * zoomfactor, 22.504276 * zoomfactor, 31.998368 * zoomfactor, 23.611121 * zoomfactor);
        patternContext.bezierCurveTo(32.170276 * zoomfactor, 23.944474 * zoomfactor, 31.927848 * zoomfactor, 24.300051 * zoomfactor, 31.998368 * zoomfactor, 24.641958 * zoomfactor);
        patternContext.bezierCurveTo(32.058298 * zoomfactor, 24.932523 * zoomfactor, 32.298219 * zoomfactor, 25.210173 * zoomfactor, 32.352748 * zoomfactor, 25.500989 * zoomfactor);
        patternContext.bezierCurveTo(32.509465 * zoomfactor, 26.336672 * zoomfactor, 32.067967 * zoomfactor, 27.249705 * zoomfactor, 32.352748 * zoomfactor, 28.078081 * zoomfactor);
        patternContext.bezierCurveTo(32.712265 * zoomfactor, 29.123845 * zoomfactor, 32.883403 * zoomfactor, 30.231474 * zoomfactor, 32.707133 * zoomfactor, 31.342400 * zoomfactor);
        patternContext.bezierCurveTo(32.256979 * zoomfactor, 34.179463 * zoomfactor, 32.537660 * zoomfactor, 30.968840 * zoomfactor, 31.998368 * zoomfactor, 33.060461 * zoomfactor);
        patternContext.bezierCurveTo(31.881148 * zoomfactor, 33.515073 * zoomfactor, 32.115588 * zoomfactor, 33.980299 * zoomfactor, 31.998368 * zoomfactor, 34.434912 * zoomfactor);
        patternContext.bezierCurveTo(31.632157 * zoomfactor, 35.855229 * zoomfactor, 30.767251 * zoomfactor, 37.247354 * zoomfactor, 30.226450 * zoomfactor, 38.558257 * zoomfactor);
        patternContext.bezierCurveTo(29.927063 * zoomfactor, 39.283979 * zoomfactor, 30.169640 * zoomfactor, 40.070419 * zoomfactor, 29.872070 * zoomfactor, 40.791740 * zoomfactor);
        patternContext.bezierCurveTo(29.725549 * zoomfactor, 41.146906 * zoomfactor, 29.268958 * zoomfactor, 41.464017 * zoomfactor, 29.163300 * zoomfactor, 41.822577 * zoomfactor);
        patternContext.bezierCurveTo(28.947382 * zoomfactor, 42.555318 * zoomfactor, 29.024542 * zoomfactor, 43.324333 * zoomfactor, 28.808921 * zoomfactor, 44.056058 * zoomfactor);
        patternContext.bezierCurveTo(28.771591 * zoomfactor, 44.182827 * zoomfactor, 28.491894 * zoomfactor, 44.272898 * zoomfactor, 28.454537 * zoomfactor, 44.399669 * zoomfactor);
        patternContext.bezierCurveTo(28.188751 * zoomfactor, 45.301650 * zoomfactor, 28.667167 * zoomfactor, 45.121254 * zoomfactor, 28.454537 * zoomfactor, 45.945925 * zoomfactor);
        patternContext.bezierCurveTo(28.231450 * zoomfactor, 46.811151 * zoomfactor, 27.642543 * zoomfactor, 47.670685 * zoomfactor, 27.391387 * zoomfactor, 48.523019 * zoomfactor);
        patternContext.bezierCurveTo(27.209428 * zoomfactor, 49.140507 * zoomfactor, 27.533537 * zoomfactor, 49.792632 * zoomfactor, 27.391387 * zoomfactor, 50.412886 * zoomfactor);
        patternContext.bezierCurveTo(27.273251 * zoomfactor, 50.928304 * zoomfactor, 27.246781 * zoomfactor, 51.450620 * zoomfactor, 27.037002 * zoomfactor, 51.959141 * zoomfactor);
        patternContext.bezierCurveTo(26.840580 * zoomfactor, 52.435260 * zoomfactor, 26.328238 * zoomfactor, 52.314273 * zoomfactor, 26.328238 * zoomfactor, 52.818171 * zoomfactor);
        patternContext.bezierCurveTo(26.328238 * zoomfactor, 53.674580 * zoomfactor, 25.908185 * zoomfactor, 54.555450 * zoomfactor, 25.619473 * zoomfactor, 55.395264 * zoomfactor);
        patternContext.bezierCurveTo(25.422594 * zoomfactor, 55.967952 * zoomfactor, 25.914792 * zoomfactor, 55.538436 * zoomfactor, 25.619473 * zoomfactor, 56.254294 * zoomfactor);
        patternContext.bezierCurveTo(24.935171 * zoomfactor, 57.913054 * zoomfactor, 25.578953 * zoomfactor, 54.845602 * zoomfactor, 24.910706 * zoomfactor, 57.113328 * zoomfactor);
        patternContext.bezierCurveTo(24.749494 * zoomfactor, 57.660438 * zoomfactor, 24.328566 * zoomfactor, 60.027853 * zoomfactor, 23.847557 * zoomfactor, 60.377643 * zoomfactor);
        patternContext.bezierCurveTo(23.701037 * zoomfactor, 60.484195 * zoomfactor, 23.274691 * zoomfactor, 60.439633 * zoomfactor, 23.138790 * zoomfactor, 60.549450 * zoomfactor);
        patternContext.bezierCurveTo(22.696333 * zoomfactor, 60.906958 * zoomfactor, 22.856696 * zoomfactor, 61.390103 * zoomfactor, 22.430025 * zoomfactor, 61.752094 * zoomfactor);
        patternContext.bezierCurveTo(21.843948 * zoomfactor, 62.249325 * zoomfactor, 20.929803 * zoomfactor, 62.640906 * zoomfactor, 20.303726 * zoomfactor, 63.126543 * zoomfactor);
        patternContext.bezierCurveTo(19.339628 * zoomfactor, 63.874380 * zoomfactor, 18.459837 * zoomfactor, 64.639236 * zoomfactor, 17.468663 * zoomfactor, 65.360023 * zoomfactor);
        patternContext.bezierCurveTo(17.029104 * zoomfactor, 65.679671 * zoomfactor, 16.965841 * zoomfactor, 66.119211 * zoomfactor, 16.405513 * zoomfactor, 66.390860 * zoomfactor);
        patternContext.bezierCurveTo(16.228319 * zoomfactor, 66.476760 * zoomfactor, 15.873938 * zoomfactor, 66.476760 * zoomfactor, 15.696747 * zoomfactor, 66.562667 * zoomfactor);
        patternContext.bezierCurveTo(15.529688 * zoomfactor, 66.643657 * zoomfactor, 15.743087 * zoomfactor, 66.793966 * zoomfactor, 15.696747 * zoomfactor, 66.906278 * zoomfactor);
        patternContext.bezierCurveTo(15.601227 * zoomfactor, 67.137818 * zoomfactor, 15.496393 * zoomfactor, 67.369497 * zoomfactor, 15.342364 * zoomfactor, 67.593504 * zoomfactor);
        patternContext.bezierCurveTo(14.550171 * zoomfactor, 68.745675 * zoomfactor, 13.983960 * zoomfactor, 69.912794 * zoomfactor, 13.216066 * zoomfactor, 71.029626 * zoomfactor);
        patternContext.bezierCurveTo(13.050589 * zoomfactor, 71.270296 * zoomfactor, 13.553506 * zoomfactor, 71.896872 * zoomfactor, 13.216066 * zoomfactor, 72.060464 * zoomfactor);
        patternContext.bezierCurveTo(13.132536 * zoomfactor, 72.100964 * zoomfactor, 12.914511 * zoomfactor, 72.009244 * zoomfactor, 12.861683 * zoomfactor, 72.060464 * zoomfactor);
        patternContext.bezierCurveTo(12.421638 * zoomfactor, 72.487134 * zoomfactor, 12.782653 * zoomfactor, 74.103614 * zoomfactor, 12.507301 * zoomfactor, 74.637557 * zoomfactor);
        patternContext.bezierCurveTo(12.286322 * zoomfactor, 75.066080 * zoomfactor, 11.798533 * zoomfactor, 75.568873 * zoomfactor, 11.798533 * zoomfactor, 76.012006 * zoomfactor);
        patternContext.bezierCurveTo(11.798533 * zoomfactor, 76.271522 * zoomfactor, 12.088026 * zoomfactor, 79.760283 * zoomfactor, 11.444151 * zoomfactor, 79.448131 * zoomfactor);
        patternContext.bezierCurveTo(10.994333 * zoomfactor, 79.230058 * zoomfactor, 11.851325 * zoomfactor, 78.860638 * zoomfactor, 12.152916 * zoomfactor, 78.589098 * zoomfactor);
        patternContext.bezierCurveTo(17.944885 * zoomfactor, 73.374301 * zoomfactor, 10.724292 * zoomfactor, 79.850050 * zoomfactor, 15.342364 * zoomfactor, 76.012006 * zoomfactor);
        patternContext.bezierCurveTo(15.731645 * zoomfactor, 75.688480 * zoomfactor, 16.549024 * zoomfactor, 74.224371 * zoomfactor, 17.114280 * zoomfactor, 73.950334 * zoomfactor);
        patternContext.bezierCurveTo(17.197810 * zoomfactor, 73.909834 * zoomfactor, 17.403138 * zoomfactor, 73.997984 * zoomfactor, 17.468663 * zoomfactor, 73.950334 * zoomfactor);
        patternContext.bezierCurveTo(17.883081 * zoomfactor, 73.648963 * zoomfactor, 17.710715 * zoomfactor, 73.202326 * zoomfactor, 18.177428 * zoomfactor, 72.919496 * zoomfactor);
        patternContext.bezierCurveTo(18.443495 * zoomfactor, 72.758257 * zoomfactor, 18.985029 * zoomfactor, 72.741072 * zoomfactor, 19.240578 * zoomfactor, 72.575882 * zoomfactor);
        patternContext.bezierCurveTo(19.382333 * zoomfactor, 72.484252 * zoomfactor, 19.134928 * zoomfactor, 72.334718 * zoomfactor, 19.240578 * zoomfactor, 72.232271 * zoomfactor);
        patternContext.bezierCurveTo(19.614131 * zoomfactor, 71.870071 * zoomfactor, 20.468894 * zoomfactor, 71.680703 * zoomfactor, 21.012494 * zoomfactor, 71.373241 * zoomfactor);
        patternContext.bezierCurveTo(23.012368 * zoomfactor, 70.242104 * zoomfactor, 26.087488 * zoomfactor, 68.115459 * zoomfactor, 27.037002 * zoomfactor, 66.734474 * zoomfactor);
        patternContext.bezierCurveTo(28.272925 * zoomfactor, 64.936936 * zoomfactor, 27.582991 * zoomfactor, 62.274912 * zoomfactor, 29.872070 * zoomfactor, 60.721257 * zoomfactor);
        patternContext.bezierCurveTo(30.885264 * zoomfactor, 60.033575 * zoomfactor, 31.830886 * zoomfactor, 59.943421 * zoomfactor, 33.061518 * zoomfactor, 59.346806 * zoomfactor);
        patternContext.bezierCurveTo(34.278898 * zoomfactor, 58.756616 * zoomfactor, 35.876573 * zoomfactor, 57.985292 * zoomfactor, 36.959730 * zoomfactor, 57.285132 * zoomfactor);
        patternContext.bezierCurveTo(37.895463 * zoomfactor, 56.680271 * zoomfactor, 38.437130 * zoomfactor, 55.680833 * zoomfactor, 39.086028 * zoomfactor, 55.051653 * zoomfactor);
        patternContext.bezierCurveTo(39.502806 * zoomfactor, 54.647542 * zoomfactor, 40.528734 * zoomfactor, 54.248012 * zoomfactor, 40.857941 * zoomfactor, 53.849008 * zoomfactor);
        patternContext.bezierCurveTo(41.595314 * zoomfactor, 52.955305 * zoomfactor, 42.080761 * zoomfactor, 52.031828 * zoomfactor, 42.629855 * zoomfactor, 51.100111 * zoomfactor);
        patternContext.bezierCurveTo(43.009700 * zoomfactor, 50.455589 * zoomfactor, 43.747451 * zoomfactor, 49.864592 * zoomfactor, 44.047390 * zoomfactor, 49.210242 * zoomfactor);
        patternContext.bezierCurveTo(44.231138 * zoomfactor, 48.809361 * zoomfactor, 43.909568 * zoomfactor, 48.408480 * zoomfactor, 44.047390 * zoomfactor, 48.007599 * zoomfactor);
        patternContext.bezierCurveTo(44.567446 * zoomfactor, 46.494848 * zoomfactor, 44.401775 * zoomfactor, 44.921828 * zoomfactor, 44.401775 * zoomfactor, 43.368832 * zoomfactor);
        patternContext.bezierCurveTo(44.401775 * zoomfactor, 41.565890 * zoomfactor, 44.771525 * zoomfactor, 39.663611 * zoomfactor, 44.401775 * zoomfactor, 37.871034 * zoomfactor);
        patternContext.bezierCurveTo(44.235673 * zoomfactor, 37.065782 * zoomfactor, 43.877351 * zoomfactor, 36.270080 * zoomfactor, 43.693005 * zoomfactor, 35.465746 * zoomfactor);
        patternContext.bezierCurveTo(43.524468 * zoomfactor, 34.730327 * zoomfactor, 43.844894 * zoomfactor, 33.968586 * zoomfactor, 43.693005 * zoomfactor, 33.232268 * zoomfactor);
        patternContext.bezierCurveTo(43.409866 * zoomfactor, 31.859578 * zoomfactor, 42.914409 * zoomfactor, 30.488442 * zoomfactor, 42.629855 * zoomfactor, 29.108918 * zoomfactor);
        patternContext.bezierCurveTo(42.501314 * zoomfactor, 28.485769 * zoomfactor, 42.772504 * zoomfactor, 27.841425 * zoomfactor, 42.629855 * zoomfactor, 27.219051 * zoomfactor);
        patternContext.bezierCurveTo(42.405513 * zoomfactor, 26.240171 * zoomfactor, 42.173233 * zoomfactor, 25.276263 * zoomfactor, 41.921092 * zoomfactor, 24.298346 * zoomfactor);
        patternContext.bezierCurveTo(41.793446 * zoomfactor, 23.803305 * zoomfactor, 42.143914 * zoomfactor, 23.238201 * zoomfactor, 41.921092 * zoomfactor, 22.752089 * zoomfactor);
        patternContext.bezierCurveTo(41.759027 * zoomfactor, 22.398516 * zoomfactor, 41.358842 * zoomfactor, 22.076419 * zoomfactor, 41.212326 * zoomfactor, 21.721252 * zoomfactor);
        patternContext.bezierCurveTo(40.985154 * zoomfactor, 21.170592 * zoomfactor, 41.439494 * zoomfactor, 20.553852 * zoomfactor, 41.212326 * zoomfactor, 20.003191 * zoomfactor);
        patternContext.bezierCurveTo(41.160506 * zoomfactor, 19.877621 * zoomfactor, 40.895299 * zoomfactor, 19.786348 * zoomfactor, 40.857941 * zoomfactor, 19.659578 * zoomfactor);
        patternContext.bezierCurveTo(40.262137 * zoomfactor, 17.637635 * zoomfactor, 41.380701 * zoomfactor, 15.502044 * zoomfactor, 40.857941 * zoomfactor, 13.474556 * zoomfactor);
        patternContext.bezierCurveTo(40.797531 * zoomfactor, 13.240254 * zoomfactor, 40.583628 * zoomfactor, 13.020244 * zoomfactor, 40.503563 * zoomfactor, 12.787331 * zoomfactor);
        patternContext.bezierCurveTo(40.293480 * zoomfactor, 12.176250 * zoomfactor, 40.753919 * zoomfactor, 11.504338 * zoomfactor, 40.503563 * zoomfactor, 10.897462 * zoomfactor);
        patternContext.bezierCurveTo(40.399952 * zoomfactor, 10.646323 * zoomfactor, 39.922920 * zoomfactor, 10.458704 * zoomfactor, 39.794793 * zoomfactor, 10.210237 * zoomfactor);
        patternContext.bezierCurveTo(39.636016 * zoomfactor, 9.902338 * zoomfactor, 39.567010 * zoomfactor, 9.486283 * zoomfactor, 39.440413 * zoomfactor, 9.179400 * zoomfactor);
        patternContext.bezierCurveTo(39.190523 * zoomfactor, 8.573674 * zoomfactor, 39.690296 * zoomfactor, 7.895259 * zoomfactor, 39.440413 * zoomfactor, 7.289532 * zoomfactor);
        patternContext.bezierCurveTo(39.205412 * zoomfactor, 6.719885 * zoomfactor, 39.023295 * zoomfactor, 6.137047 * zoomfactor, 38.731643 * zoomfactor, 5.571471 * zoomfactor);
        patternContext.bezierCurveTo(38.368872 * zoomfactor, 4.867977 * zoomfactor, 38.809473 * zoomfactor, 1.351785 * zoomfactor, 38.377265 * zoomfactor, 0.932703 * zoomfactor);
        patternContext.bezierCurveTo(37.803233 * zoomfactor, 0.376121 * zoomfactor, 35.118976 * zoomfactor, 1.121196 * zoomfactor, 34.479047 * zoomfactor, 1.276316 * zoomfactor);
        patternContext.bezierCurveTo(34.036583 * zoomfactor, 1.383570 * zoomfactor, 31.878153 * zoomfactor, 1.276316 * zoomfactor, 31.643983 * zoomfactor, 1.276316 * zoomfactor);
        patternContext.fill();

        // #path20715-9-4
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(131, 72, 35, 0.265487)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(47.583203 * zoomfactor, 1.277363 * zoomfactor);
        patternContext.bezierCurveTo(47.356138 * zoomfactor, 1.447661 * zoomfactor, 47.102709 * zoomfactor, 1.587559 * zoomfactor, 46.902010 * zoomfactor, 1.788257 * zoomfactor);
        patternContext.bezierCurveTo(46.561917 * zoomfactor, 2.128352 * zoomfactor, 46.476091 * zoomfactor, 2.938547 * zoomfactor, 46.391115 * zoomfactor, 3.320940 * zoomfactor);
        patternContext.bezierCurveTo(45.898482 * zoomfactor, 5.537788 * zoomfactor, 46.429385 * zoomfactor, 8.336124 * zoomfactor, 47.412904 * zoomfactor, 10.303164 * zoomfactor);
        patternContext.bezierCurveTo(47.695847 * zoomfactor, 10.869047 * zoomfactor, 47.521489 * zoomfactor, 11.766713 * zoomfactor, 47.753502 * zoomfactor, 12.346742 * zoomfactor);
        patternContext.bezierCurveTo(47.813132 * zoomfactor, 12.495816 * zoomfactor, 48.022293 * zoomfactor, 12.543730 * zoomfactor, 48.094098 * zoomfactor, 12.687338 * zoomfactor);
        patternContext.bezierCurveTo(48.550949 * zoomfactor, 13.601040 * zoomfactor, 47.360165 * zoomfactor, 18.741171 * zoomfactor, 47.072309 * zoomfactor, 20.180457 * zoomfactor);
        patternContext.bezierCurveTo(46.836084 * zoomfactor, 21.361578 * zoomfactor, 47.479220 * zoomfactor, 22.318993 * zoomfactor, 47.753502 * zoomfactor, 23.416122 * zoomfactor);
        patternContext.bezierCurveTo(47.836112 * zoomfactor, 23.746549 * zoomfactor, 47.719612 * zoomfactor, 24.099005 * zoomfactor, 47.753502 * zoomfactor, 24.437911 * zoomfactor);
        patternContext.bezierCurveTo(47.782302 * zoomfactor, 24.725926 * zoomfactor, 47.897595 * zoomfactor, 25.001139 * zoomfactor, 47.923799 * zoomfactor, 25.289402 * zoomfactor);
        patternContext.bezierCurveTo(47.999109 * zoomfactor, 26.117750 * zoomfactor, 47.786948 * zoomfactor, 27.022769 * zoomfactor, 47.923799 * zoomfactor, 27.843874 * zoomfactor);
        patternContext.bezierCurveTo(48.096564 * zoomfactor, 28.880459 * zoomfactor, 48.178804 * zoomfactor, 29.978366 * zoomfactor, 48.094098 * zoomfactor, 31.079541 * zoomfactor);
        patternContext.bezierCurveTo(47.877777 * zoomfactor, 33.891701 * zoomfactor, 48.012658 * zoomfactor, 30.709259 * zoomfactor, 47.753502 * zoomfactor, 32.782521 * zoomfactor);
        patternContext.bezierCurveTo(47.697172 * zoomfactor, 33.233143 * zoomfactor, 47.809832 * zoomfactor, 33.694285 * zoomfactor, 47.753502 * zoomfactor, 34.144908 * zoomfactor);
        patternContext.bezierCurveTo(47.577520 * zoomfactor, 35.552758 * zoomfactor, 47.161891 * zoomfactor, 36.932664 * zoomfactor, 46.902010 * zoomfactor, 38.232061 * zoomfactor);
        patternContext.bezierCurveTo(46.758140 * zoomfactor, 38.951413 * zoomfactor, 46.874710 * zoomfactor, 39.730950 * zoomfactor, 46.731713 * zoomfactor, 40.445939 * zoomfactor);
        patternContext.bezierCurveTo(46.661303 * zoomfactor, 40.797988 * zoomfactor, 46.441889 * zoomfactor, 41.112316 * zoomfactor, 46.391115 * zoomfactor, 41.467728 * zoomfactor);
        patternContext.bezierCurveTo(46.287356 * zoomfactor, 42.194038 * zoomfactor, 46.324435 * zoomfactor, 42.956303 * zoomfactor, 46.220819 * zoomfactor, 43.681605 * zoomfactor);
        patternContext.bezierCurveTo(46.202879 * zoomfactor, 43.807261 * zoomfactor, 46.068472 * zoomfactor, 43.896542 * zoomfactor, 46.050520 * zoomfactor, 44.022200 * zoomfactor);
        patternContext.bezierCurveTo(45.922797 * zoomfactor, 44.916264 * zoomfactor, 46.152699 * zoomfactor, 44.737451 * zoomfactor, 46.050520 * zoomfactor, 45.554884 * zoomfactor);
        patternContext.bezierCurveTo(45.943316 * zoomfactor, 46.412515 * zoomfactor, 45.660318 * zoomfactor, 47.264505 * zoomfactor, 45.539625 * zoomfactor, 48.109357 * zoomfactor);
        patternContext.bezierCurveTo(45.452185 * zoomfactor, 48.721425 * zoomfactor, 45.607935 * zoomfactor, 49.367826 * zoomfactor, 45.539625 * zoomfactor, 49.982636 * zoomfactor);
        patternContext.bezierCurveTo(45.482855 * zoomfactor, 50.493530 * zoomfactor, 45.470135 * zoomfactor, 51.011262 * zoomfactor, 45.369326 * zoomfactor, 51.515319 * zoomfactor);
        patternContext.bezierCurveTo(45.274936 * zoomfactor, 51.987259 * zoomfactor, 45.028731 * zoomfactor, 51.867334 * zoomfactor, 45.028731 * zoomfactor, 52.366809 * zoomfactor);
        patternContext.bezierCurveTo(45.028731 * zoomfactor, 53.215701 * zoomfactor, 44.826875 * zoomfactor, 54.088839 * zoomfactor, 44.688135 * zoomfactor, 54.921282 * zoomfactor);
        patternContext.bezierCurveTo(44.593525 * zoomfactor, 55.488943 * zoomfactor, 44.830050 * zoomfactor, 55.063197 * zoomfactor, 44.688135 * zoomfactor, 55.772772 * zoomfactor);
        patternContext.bezierCurveTo(44.359295 * zoomfactor, 57.416972 * zoomfactor, 44.668665 * zoomfactor, 54.376444 * zoomfactor, 44.347538 * zoomfactor, 56.624265 * zoomfactor);
        patternContext.bezierCurveTo(44.270068 * zoomfactor, 57.166573 * zoomfactor, 44.067792 * zoomfactor, 59.513208 * zoomfactor, 43.836644 * zoomfactor, 59.859928 * zoomfactor);
        patternContext.bezierCurveTo(43.766234 * zoomfactor, 59.965545 * zoomfactor, 43.561354 * zoomfactor, 59.921378 * zoomfactor, 43.496047 * zoomfactor, 60.030227 * zoomfactor);
        patternContext.bezierCurveTo(43.283425 * zoomfactor, 60.384597 * zoomfactor, 43.360487 * zoomfactor, 60.863501 * zoomfactor, 43.155451 * zoomfactor, 61.222315 * zoomfactor);
        patternContext.bezierCurveTo(42.873813 * zoomfactor, 61.715181 * zoomfactor, 42.434522 * zoomfactor, 62.103325 * zoomfactor, 42.133662 * zoomfactor, 62.584700 * zoomfactor);
        patternContext.bezierCurveTo(41.670366 * zoomfactor, 63.325973 * zoomfactor, 41.247584 * zoomfactor, 64.084115 * zoomfactor, 40.771277 * zoomfactor, 64.798575 * zoomfactor);
        patternContext.bezierCurveTo(40.560048 * zoomfactor, 65.115418 * zoomfactor, 40.529647 * zoomfactor, 65.551100 * zoomfactor, 40.260382 * zoomfactor, 65.820364 * zoomfactor);
        patternContext.bezierCurveTo(40.175232 * zoomfactor, 65.905514 * zoomfactor, 40.004935 * zoomfactor, 65.905514 * zoomfactor, 39.919786 * zoomfactor, 65.990663 * zoomfactor);
        patternContext.bezierCurveTo(39.839506 * zoomfactor, 66.070943 * zoomfactor, 39.942056 * zoomfactor, 66.219932 * zoomfactor, 39.919786 * zoomfactor, 66.331258 * zoomfactor);
        patternContext.bezierCurveTo(39.873886 * zoomfactor, 66.560766 * zoomfactor, 39.823506 * zoomfactor, 66.790411 * zoomfactor, 39.749488 * zoomfactor, 67.012452 * zoomfactor);
        patternContext.bezierCurveTo(39.368801 * zoomfactor, 68.154510 * zoomfactor, 39.096709 * zoomfactor, 69.311385 * zoomfactor, 38.727699 * zoomfactor, 70.418414 * zoomfactor);
        patternContext.bezierCurveTo(38.648179 * zoomfactor, 70.656971 * zoomfactor, 38.889855 * zoomfactor, 71.278048 * zoomfactor, 38.727699 * zoomfactor, 71.440204 * zoomfactor);
        patternContext.bezierCurveTo(38.687559 * zoomfactor, 71.480344 * zoomfactor, 38.582787 * zoomfactor, 71.389434 * zoomfactor, 38.557401 * zoomfactor, 71.440204 * zoomfactor);
        patternContext.bezierCurveTo(38.345938 * zoomfactor, 71.863129 * zoomfactor, 38.519421 * zoomfactor, 73.465420 * zoomfactor, 38.387103 * zoomfactor, 73.994676 * zoomfactor);
        patternContext.bezierCurveTo(38.280912 * zoomfactor, 74.419438 * zoomfactor, 38.046506 * zoomfactor, 74.917818 * zoomfactor, 38.046506 * zoomfactor, 75.357061 * zoomfactor);
        patternContext.bezierCurveTo(38.046506 * zoomfactor, 75.614299 * zoomfactor, 38.185621 * zoomfactor, 79.072438 * zoomfactor, 37.876208 * zoomfactor, 78.763026 * zoomfactor);
        patternContext.bezierCurveTo(37.660049 * zoomfactor, 78.546867 * zoomfactor, 38.071875 * zoomfactor, 78.180689 * zoomfactor, 38.216804 * zoomfactor, 77.911533 * zoomfactor);
        patternContext.bezierCurveTo(41.000125 * zoomfactor, 72.742509 * zoomfactor, 37.530281 * zoomfactor, 79.161417 * zoomfactor, 39.749488 * zoomfactor, 75.357061 * zoomfactor);
        patternContext.bezierCurveTo(39.936556 * zoomfactor, 75.036375 * zoomfactor, 40.329346 * zoomfactor, 73.585117 * zoomfactor, 40.600979 * zoomfactor, 73.313485 * zoomfactor);
        patternContext.bezierCurveTo(40.641119 * zoomfactor, 73.273345 * zoomfactor, 40.739789 * zoomfactor, 73.360715 * zoomfactor, 40.771277 * zoomfactor, 73.313485 * zoomfactor);
        patternContext.bezierCurveTo(40.970425 * zoomfactor, 73.014760 * zoomfactor, 40.887595 * zoomfactor, 72.572043 * zoomfactor, 41.111873 * zoomfactor, 72.291696 * zoomfactor);
        patternContext.bezierCurveTo(41.239731 * zoomfactor, 72.131872 * zoomfactor, 41.499964 * zoomfactor, 72.114838 * zoomfactor, 41.622768 * zoomfactor, 71.951098 * zoomfactor);
        patternContext.bezierCurveTo(41.690888 * zoomfactor, 71.860268 * zoomfactor, 41.571998 * zoomfactor, 71.712050 * zoomfactor, 41.622768 * zoomfactor, 71.610503 * zoomfactor);
        patternContext.bezierCurveTo(41.802278 * zoomfactor, 71.251482 * zoomfactor, 42.213033 * zoomfactor, 71.063776 * zoomfactor, 42.474259 * zoomfactor, 70.759013 * zoomfactor);
        patternContext.bezierCurveTo(43.435295 * zoomfactor, 69.637804 * zoomfactor, 44.913039 * zoomfactor, 67.529826 * zoomfactor, 45.369326 * zoomfactor, 66.160962 * zoomfactor);
        patternContext.bezierCurveTo(45.963247 * zoomfactor, 64.379202 * zoomfactor, 45.631700 * zoomfactor, 61.740544 * zoomfactor, 46.731713 * zoomfactor, 60.200526 * zoomfactor);
        patternContext.bezierCurveTo(47.218602 * zoomfactor, 59.518880 * zoomfactor, 47.673019 * zoomfactor, 59.429517 * zoomfactor, 48.264397 * zoomfactor, 58.838139 * zoomfactor);
        patternContext.bezierCurveTo(48.849407 * zoomfactor, 58.253130 * zoomfactor, 49.617167 * zoomfactor, 57.488576 * zoomfactor, 50.137676 * zoomfactor, 56.794561 * zoomfactor);
        patternContext.bezierCurveTo(50.587341 * zoomfactor, 56.195010 * zoomfactor, 50.847638 * zoomfactor, 55.204344 * zoomfactor, 51.159465 * zoomfactor, 54.580687 * zoomfactor);
        patternContext.bezierCurveTo(51.359747 * zoomfactor, 54.180123 * zoomfactor, 51.852755 * zoomfactor, 53.784100 * zoomfactor, 52.010955 * zoomfactor, 53.388598 * zoomfactor);
        patternContext.bezierCurveTo(52.365298 * zoomfactor, 52.502739 * zoomfactor, 52.598579 * zoomfactor, 51.587368 * zoomfactor, 52.862445 * zoomfactor, 50.663829 * zoomfactor);
        patternContext.bezierCurveTo(53.044979 * zoomfactor, 50.024964 * zoomfactor, 53.399504 * zoomfactor, 49.439155 * zoomfactor, 53.543639 * zoomfactor, 48.790548 * zoomfactor);
        patternContext.bezierCurveTo(53.631939 * zoomfactor, 48.393186 * zoomfactor, 53.477409 * zoomfactor, 47.995824 * zoomfactor, 53.543639 * zoomfactor, 47.598462 * zoomfactor);
        patternContext.bezierCurveTo(53.793551 * zoomfactor, 46.098989 * zoomfactor, 53.713938 * zoomfactor, 44.539776 * zoomfactor, 53.713938 * zoomfactor, 43.000411 * zoomfactor);
        patternContext.bezierCurveTo(53.713938 * zoomfactor, 41.213294 * zoomfactor, 53.891621 * zoomfactor, 39.327712 * zoomfactor, 53.713938 * zoomfactor, 37.550870 * zoomfactor);
        patternContext.bezierCurveTo(53.634118 * zoomfactor, 36.752686 * zoomfactor, 53.461927 * zoomfactor, 35.963968 * zoomfactor, 53.373340 * zoomfactor, 35.166694 * zoomfactor);
        patternContext.bezierCurveTo(53.292350 * zoomfactor, 34.437730 * zoomfactor, 53.446330 * zoomfactor, 33.682675 * zoomfactor, 53.373340 * zoomfactor, 32.952820 * zoomfactor);
        patternContext.bezierCurveTo(53.237278 * zoomfactor, 31.592179 * zoomfactor, 52.999187 * zoomfactor, 30.233078 * zoomfactor, 52.862445 * zoomfactor, 28.865663 * zoomfactor);
        patternContext.bezierCurveTo(52.800675 * zoomfactor, 28.247983 * zoomfactor, 52.930995 * zoomfactor, 27.609295 * zoomfactor, 52.862445 * zoomfactor, 26.992384 * zoomfactor);
        patternContext.bezierCurveTo(52.754638 * zoomfactor, 26.022096 * zoomfactor, 52.643016 * zoomfactor, 25.066649 * zoomfactor, 52.521850 * zoomfactor, 24.097315 * zoomfactor);
        patternContext.bezierCurveTo(52.460510 * zoomfactor, 23.606620 * zoomfactor, 52.628927 * zoomfactor, 23.046476 * zoomfactor, 52.521850 * zoomfactor, 22.564631 * zoomfactor);
        patternContext.bezierCurveTo(52.443970 * zoomfactor, 22.214161 * zoomfactor, 52.251662 * zoomfactor, 21.894891 * zoomfactor, 52.181254 * zoomfactor, 21.542842 * zoomfactor);
        patternContext.bezierCurveTo(52.072087 * zoomfactor, 20.997015 * zoomfactor, 52.290419 * zoomfactor, 20.385688 * zoomfactor, 52.181254 * zoomfactor, 19.839861 * zoomfactor);
        patternContext.bezierCurveTo(52.156354 * zoomfactor, 19.715393 * zoomfactor, 52.028907 * zoomfactor, 19.624921 * zoomfactor, 52.010955 * zoomfactor, 19.499264 * zoomfactor);
        patternContext.bezierCurveTo(51.724642 * zoomfactor, 17.495068 * zoomfactor, 52.262166 * zoomfactor, 15.378222 * zoomfactor, 52.010955 * zoomfactor, 13.368531 * zoomfactor);
        patternContext.bezierCurveTo(51.981925 * zoomfactor, 13.136285 * zoomfactor, 51.879134 * zoomfactor, 12.918206 * zoomfactor, 51.840659 * zoomfactor, 12.687338 * zoomfactor);
        patternContext.bezierCurveTo(51.739704 * zoomfactor, 12.081620 * zoomfactor, 51.960967 * zoomfactor, 11.415606 * zoomfactor, 51.840659 * zoomfactor, 10.814058 * zoomfactor);
        patternContext.bezierCurveTo(51.790869 * zoomfactor, 10.565123 * zoomfactor, 51.561632 * zoomfactor, 10.379151 * zoomfactor, 51.500061 * zoomfactor, 10.132866 * zoomfactor);
        patternContext.bezierCurveTo(51.423761 * zoomfactor, 9.827669 * zoomfactor, 51.390600 * zoomfactor, 9.415266 * zoomfactor, 51.329764 * zoomfactor, 9.111078 * zoomfactor);
        patternContext.bezierCurveTo(51.209680 * zoomfactor, 8.510668 * zoomfactor, 51.449845 * zoomfactor, 7.838208 * zoomfactor, 51.329764 * zoomfactor, 7.237798 * zoomfactor);
        patternContext.bezierCurveTo(51.216835 * zoomfactor, 6.673151 * zoomfactor, 51.129319 * zoomfactor, 6.095429 * zoomfactor, 50.989166 * zoomfactor, 5.534817 * zoomfactor);
        patternContext.bezierCurveTo(50.814837 * zoomfactor, 4.837497 * zoomfactor, 51.026566 * zoomfactor, 1.352170 * zoomfactor, 50.818870 * zoomfactor, 0.936766 * zoomfactor);
        patternContext.bezierCurveTo(50.543020 * zoomfactor, 0.385069 * zoomfactor, 49.253105 * zoomfactor, 1.123604 * zoomfactor, 48.945588 * zoomfactor, 1.277363 * zoomfactor);
        patternContext.bezierCurveTo(48.732963 * zoomfactor, 1.383675 * zoomfactor, 47.695733 * zoomfactor, 1.277363 * zoomfactor, 47.583203 * zoomfactor, 1.277363 * zoomfactor);
        patternContext.fill();

        // #path26238
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(130, 72, 34, 0.25885)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(58.752866 * zoomfactor, 78.507454 * zoomfactor);
        patternContext.bezierCurveTo(58.752866 * zoomfactor, 77.996560 * zoomfactor, 58.718886 * zoomfactor, 77.484533 * zoomfactor, 58.752866 * zoomfactor, 76.974770 * zoomfactor);
        patternContext.bezierCurveTo(58.906415 * zoomfactor, 74.671530 * zoomfactor, 58.909375 * zoomfactor, 77.126438 * zoomfactor, 59.093462 * zoomfactor, 75.101489 * zoomfactor);
        patternContext.bezierCurveTo(59.254881 * zoomfactor, 73.325881 * zoomfactor, 58.724008 * zoomfactor, 71.339071 * zoomfactor, 58.241972 * zoomfactor, 69.651948 * zoomfactor);
        patternContext.bezierCurveTo(57.926916 * zoomfactor, 68.549252 * zoomfactor, 57.274809 * zoomfactor, 67.540901 * zoomfactor, 57.049884 * zoomfactor, 66.416284 * zoomfactor);
        patternContext.bezierCurveTo(56.730775 * zoomfactor, 64.820733 * zoomfactor, 57.038984 * zoomfactor, 63.241890 * zoomfactor, 56.879587 * zoomfactor, 61.647934 * zoomfactor);
        patternContext.bezierCurveTo(56.777299 * zoomfactor, 60.625068 * zoomfactor, 56.454288 * zoomfactor, 59.609717 * zoomfactor, 56.368693 * zoomfactor, 58.582567 * zoomfactor);
        patternContext.bezierCurveTo(56.288993 * zoomfactor, 57.626225 * zoomfactor, 56.464183 * zoomfactor, 56.642449 * zoomfactor, 56.368693 * zoomfactor, 55.687499 * zoomfactor);
        patternContext.bezierCurveTo(56.120466 * zoomfactor, 53.205226 * zoomfactor, 56.198394 * zoomfactor, 56.829308 * zoomfactor, 56.198394 * zoomfactor, 53.643921 * zoomfactor);
        patternContext.bezierCurveTo(56.198394 * zoomfactor, 51.892115 * zoomfactor, 56.118894 * zoomfactor, 50.113713 * zoomfactor, 56.198394 * zoomfactor, 48.364679 * zoomfactor);
        patternContext.bezierCurveTo(56.253124 * zoomfactor, 47.160603 * zoomfactor, 56.407107 * zoomfactor, 45.975357 * zoomfactor, 56.538989 * zoomfactor, 44.788417 * zoomfactor);
        patternContext.bezierCurveTo(56.698631 * zoomfactor, 43.351656 * zoomfactor, 56.374958 * zoomfactor, 41.943475 * zoomfactor, 56.198394 * zoomfactor, 40.530962 * zoomfactor);
        patternContext.bezierCurveTo(56.106594 * zoomfactor, 39.796540 * zoomfactor, 56.160494 * zoomfactor, 39.045287 * zoomfactor, 56.028095 * zoomfactor, 38.317087 * zoomfactor);
        patternContext.bezierCurveTo(55.695275 * zoomfactor, 36.486568 * zoomfactor, 54.819094 * zoomfactor, 34.025803 * zoomfactor, 53.984516 * zoomfactor, 32.356652 * zoomfactor);
        patternContext.bezierCurveTo(53.852087 * zoomfactor, 32.091791 * zoomfactor, 53.984516 * zoomfactor, 31.274022 * zoomfactor, 53.984516 * zoomfactor, 30.994265 * zoomfactor);
        patternContext.bezierCurveTo(53.984516 * zoomfactor, 29.833239 * zoomfactor, 53.741695 * zoomfactor, 27.999811 * zoomfactor, 53.984516 * zoomfactor, 26.907109 * zoomfactor);
        patternContext.bezierCurveTo(54.107889 * zoomfactor, 26.351941 * zoomfactor, 54.551394 * zoomfactor, 25.775707 * zoomfactor, 54.665710 * zoomfactor, 25.204128 * zoomfactor);
        patternContext.bezierCurveTo(54.732510 * zoomfactor, 24.870146 * zoomfactor, 54.609720 * zoomfactor, 24.518301 * zoomfactor, 54.665710 * zoomfactor, 24.182339 * zoomfactor);
        patternContext.bezierCurveTo(54.789800 * zoomfactor, 23.437798 * zoomfactor, 54.899276 * zoomfactor, 22.717683 * zoomfactor, 55.006305 * zoomfactor, 21.968463 * zoomfactor);
        patternContext.bezierCurveTo(55.031675 * zoomfactor, 21.790757 * zoomfactor, 55.119838 * zoomfactor, 21.627867 * zoomfactor, 55.176605 * zoomfactor, 21.457569 * zoomfactor);
        patternContext.bezierCurveTo(55.233375 * zoomfactor, 21.230504 * zoomfactor, 55.317873 * zoomfactor, 21.008621 * zoomfactor, 55.346904 * zoomfactor, 20.776376 * zoomfactor);
        patternContext.bezierCurveTo(55.495131 * zoomfactor, 19.590561 * zoomfactor, 55.519052 * zoomfactor, 18.379252 * zoomfactor, 55.687499 * zoomfactor, 17.200114 * zoomfactor);
        patternContext.bezierCurveTo(55.745939 * zoomfactor, 16.791005 * zoomfactor, 55.960155 * zoomfactor, 16.415668 * zoomfactor, 56.028095 * zoomfactor, 16.008027 * zoomfactor);
        patternContext.bezierCurveTo(56.097145 * zoomfactor, 15.593729 * zoomfactor, 56.067975 * zoomfactor, 15.036884 * zoomfactor, 56.198394 * zoomfactor, 14.645642 * zoomfactor);
        patternContext.bezierCurveTo(56.238534 * zoomfactor, 14.525223 * zoomfactor, 56.311926 * zoomfactor, 14.418578 * zoomfactor, 56.368693 * zoomfactor, 14.305046 * zoomfactor);
        patternContext.bezierCurveTo(56.482225 * zoomfactor, 14.191513 * zoomfactor, 56.649659 * zoomfactor, 14.113524 * zoomfactor, 56.709288 * zoomfactor, 13.964449 * zoomfactor);
        patternContext.bezierCurveTo(56.772538 * zoomfactor, 13.806331 * zoomfactor, 56.675888 * zoomfactor, 13.620546 * zoomfactor, 56.709288 * zoomfactor, 13.453555 * zoomfactor);
        patternContext.bezierCurveTo(56.779988 * zoomfactor, 13.100066 * zoomfactor, 57.105848 * zoomfactor, 12.774771 * zoomfactor, 57.220183 * zoomfactor, 12.431766 * zoomfactor);
        patternContext.bezierCurveTo(57.383539 * zoomfactor, 11.941700 * zoomfactor, 57.513312 * zoomfactor, 10.946549 * zoomfactor, 57.901376 * zoomfactor, 10.558486 * zoomfactor);
        patternContext.bezierCurveTo(58.184703 * zoomfactor, 10.275158 * zoomfactor, 58.865058 * zoomfactor, 9.765103 * zoomfactor, 59.263761 * zoomfactor, 9.366399 * zoomfactor);
        patternContext.bezierCurveTo(59.479068 * zoomfactor, 9.151092 * zoomfactor, 59.769004 * zoomfactor, 8.520559 * zoomfactor, 59.944954 * zoomfactor, 8.344610 * zoomfactor);
        patternContext.bezierCurveTo(60.034704 * zoomfactor, 8.254855 * zoomfactor, 60.209390 * zoomfactor, 8.275858 * zoomfactor, 60.285550 * zoomfactor, 8.174312 * zoomfactor);
        patternContext.bezierCurveTo(60.949265 * zoomfactor, 7.289359 * zoomfactor, 60.305500 * zoomfactor, 7.944185 * zoomfactor, 60.455849 * zoomfactor, 7.493119 * zoomfactor);
        patternContext.bezierCurveTo(60.574303 * zoomfactor, 7.137753 * zoomfactor, 60.848287 * zoomfactor, 6.996994 * zoomfactor, 60.966743 * zoomfactor, 6.641628 * zoomfactor);
        patternContext.bezierCurveTo(61.095654 * zoomfactor, 6.254897 * zoomfactor, 61.041943 * zoomfactor, 5.829939 * zoomfactor, 61.137040 * zoomfactor, 5.449541 * zoomfactor);
        patternContext.bezierCurveTo(61.327122 * zoomfactor, 4.689221 * zoomfactor, 61.485364 * zoomfactor, 3.731104 * zoomfactor, 61.818233 * zoomfactor, 3.065367 * zoomfactor);
        patternContext.bezierCurveTo(61.869643 * zoomfactor, 2.962545 * zoomfactor, 61.739513 * zoomfactor, 2.633195 * zoomfactor, 61.818233 * zoomfactor, 2.554472 * zoomfactor);
        patternContext.bezierCurveTo(61.858373 * zoomfactor, 2.514332 * zoomfactor, 61.948393 * zoomfactor, 2.594612 * zoomfactor, 61.988533 * zoomfactor, 2.554472 * zoomfactor);
        patternContext.bezierCurveTo(62.243980 * zoomfactor, 2.299025 * zoomfactor, 62.243980 * zoomfactor, 1.788131 * zoomfactor, 62.499427 * zoomfactor, 1.532684 * zoomfactor);
        patternContext.bezierCurveTo(62.539567 * zoomfactor, 1.492544 * zoomfactor, 62.629584 * zoomfactor, 1.572824 * zoomfactor, 62.669723 * zoomfactor, 1.532684 * zoomfactor);
        patternContext.bezierCurveTo(62.709863 * zoomfactor, 1.492544 * zoomfactor, 62.629583 * zoomfactor, 1.402525 * zoomfactor, 62.669723 * zoomfactor, 1.362385 * zoomfactor);
        patternContext.bezierCurveTo(62.750003 * zoomfactor, 1.282106 * zoomfactor, 62.930042 * zoomfactor, 1.442664 * zoomfactor, 63.010322 * zoomfactor, 1.362385 * zoomfactor);
        patternContext.bezierCurveTo(63.050462 * zoomfactor, 1.322245 * zoomfactor, 62.970182 * zoomfactor, 1.232227 * zoomfactor, 63.010322 * zoomfactor, 1.192087 * zoomfactor);
        patternContext.bezierCurveTo(63.090602 * zoomfactor, 1.111808 * zoomfactor, 63.243210 * zoomfactor, 1.227989 * zoomfactor, 63.350917 * zoomfactor, 1.192087 * zoomfactor);
        patternContext.bezierCurveTo(64.976419 * zoomfactor, 0.650253 * zoomfactor, 64.915404 * zoomfactor, 1.192087 * zoomfactor, 66.756880 * zoomfactor, 1.192087 * zoomfactor);
        patternContext.bezierCurveTo(67.551336 * zoomfactor, 1.192087 * zoomfactor, 69.293422 * zoomfactor, 0.457105 * zoomfactor, 69.651948 * zoomfactor, 1.532684 * zoomfactor);
        patternContext.bezierCurveTo(69.948162 * zoomfactor, 2.421321 * zoomfactor, 69.561178 * zoomfactor, 5.255948 * zoomfactor, 69.481651 * zoomfactor, 6.130734 * zoomfactor);
        patternContext.bezierCurveTo(69.455301 * zoomfactor, 6.420646 * zoomfactor, 69.512401 * zoomfactor, 8.129372 * zoomfactor, 69.481651 * zoomfactor, 8.344610 * zoomfactor);
        patternContext.bezierCurveTo(69.233927 * zoomfactor, 10.078668 * zoomfactor, 68.584193 * zoomfactor, 11.779818 * zoomfactor, 68.119264 * zoomfactor, 13.453555 * zoomfactor);
        patternContext.bezierCurveTo(67.964324 * zoomfactor, 14.011338 * zoomfactor, 67.925997 * zoomfactor, 14.596695 * zoomfactor, 67.778669 * zoomfactor, 15.156536 * zoomfactor);
        patternContext.bezierCurveTo(66.303291 * zoomfactor, 20.762969 * zoomfactor, 68.277689 * zoomfactor, 12.308971 * zoomfactor, 66.756880 * zoomfactor, 18.392202 * zoomfactor);
        patternContext.bezierCurveTo(66.673130 * zoomfactor, 18.727186 * zoomfactor, 66.685800 * zoomfactor, 19.083258 * zoomfactor, 66.586581 * zoomfactor, 19.413990 * zoomfactor);
        patternContext.bezierCurveTo(66.513631 * zoomfactor, 19.657150 * zoomfactor, 66.315727 * zoomfactor, 19.851086 * zoomfactor, 66.245985 * zoomfactor, 20.095183 * zoomfactor);
        patternContext.bezierCurveTo(66.199205 * zoomfactor, 20.258929 * zoomfactor, 66.270065 * zoomfactor, 20.437491 * zoomfactor, 66.245985 * zoomfactor, 20.606078 * zoomfactor);
        patternContext.bezierCurveTo(66.099224 * zoomfactor, 21.633420 * zoomfactor, 65.711937 * zoomfactor, 22.641444 * zoomfactor, 65.564792 * zoomfactor, 23.671445 * zoomfactor);
        patternContext.bezierCurveTo(65.410862 * zoomfactor, 24.748961 * zoomfactor, 65.323804 * zoomfactor, 25.811436 * zoomfactor, 65.224196 * zoomfactor, 26.907109 * zoomfactor);
        patternContext.bezierCurveTo(65.171786 * zoomfactor, 27.483636 * zoomfactor, 64.936012 * zoomfactor, 28.033567 * zoomfactor, 64.883601 * zoomfactor, 28.610091 * zoomfactor);
        patternContext.bezierCurveTo(64.723546 * zoomfactor, 30.370695 * zoomfactor, 64.489758 * zoomfactor, 32.441568 * zoomfactor, 64.713302 * zoomfactor, 34.229931 * zoomfactor);
        patternContext.bezierCurveTo(64.735552 * zoomfactor, 34.408054 * zoomfactor, 64.863775 * zoomfactor, 34.562412 * zoomfactor, 64.883601 * zoomfactor, 34.740826 * zoomfactor);
        patternContext.bezierCurveTo(64.921211 * zoomfactor, 35.079339 * zoomfactor, 64.822671 * zoomfactor, 35.427512 * zoomfactor, 64.883601 * zoomfactor, 35.762615 * zoomfactor);
        patternContext.bezierCurveTo(64.938281 * zoomfactor, 36.063377 * zoomfactor, 65.164244 * zoomfactor, 36.314348 * zoomfactor, 65.224196 * zoomfactor, 36.614105 * zoomfactor);
        patternContext.bezierCurveTo(65.419218 * zoomfactor, 37.589211 * zoomfactor, 65.254446 * zoomfactor, 38.699127 * zoomfactor, 65.394495 * zoomfactor, 39.679472 * zoomfactor);
        patternContext.bezierCurveTo(65.452935 * zoomfactor, 40.088581 * zoomfactor, 65.676647 * zoomfactor, 40.462451 * zoomfactor, 65.735091 * zoomfactor, 40.871560 * zoomfactor);
        patternContext.bezierCurveTo(65.791291 * zoomfactor, 41.264927 * zoomfactor, 65.702091 * zoomfactor, 41.667657 * zoomfactor, 65.735091 * zoomfactor, 42.063646 * zoomfactor);
        patternContext.bezierCurveTo(65.862427 * zoomfactor, 43.591670 * zoomfactor, 65.957703 * zoomfactor, 45.127894 * zoomfactor, 66.075686 * zoomfactor, 46.661696 * zoomfactor);
        patternContext.bezierCurveTo(66.123166 * zoomfactor, 47.278991 * zoomfactor, 66.343619 * zoomfactor, 48.478961 * zoomfactor, 66.586581 * zoomfactor, 49.045870 * zoomfactor);
        patternContext.bezierCurveTo(66.649831 * zoomfactor, 49.193447 * zoomfactor, 66.855374 * zoomfactor, 49.242860 * zoomfactor, 66.927179 * zoomfactor, 49.386468 * zoomfactor);
        patternContext.bezierCurveTo(67.341622 * zoomfactor, 50.215355 * zoomfactor, 67.187180 * zoomfactor, 51.565280 * zoomfactor, 67.267774 * zoomfactor, 52.451835 * zoomfactor);
        patternContext.bezierCurveTo(67.385689 * zoomfactor, 53.748892 * zoomfactor, 67.875887 * zoomfactor, 55.031105 * zoomfactor, 67.608370 * zoomfactor, 56.368693 * zoomfactor);
        patternContext.bezierCurveTo(67.412337 * zoomfactor, 57.348860 * zoomfactor, 66.708120 * zoomfactor, 58.091326 * zoomfactor, 66.245985 * zoomfactor, 58.923165 * zoomfactor);
        patternContext.bezierCurveTo(65.857519 * zoomfactor, 59.622403 * zoomfactor, 65.506268 * zoomfactor, 60.555147 * zoomfactor, 65.224196 * zoomfactor, 61.307339 * zoomfactor);
        patternContext.bezierCurveTo(64.933435 * zoomfactor, 62.082700 * zoomfactor, 65.179126 * zoomfactor, 62.156310 * zoomfactor, 64.713302 * zoomfactor, 63.010322 * zoomfactor);
        patternContext.bezierCurveTo(64.342665 * zoomfactor, 63.689822 * zoomfactor, 63.969878 * zoomfactor, 63.924042 * zoomfactor, 63.521216 * zoomfactor, 64.372706 * zoomfactor);
        patternContext.bezierCurveTo(63.332388 * zoomfactor, 64.561534 * zoomfactor, 63.343331 * zoomfactor, 65.402081 * zoomfactor, 63.180618 * zoomfactor, 65.564792 * zoomfactor);
        patternContext.bezierCurveTo(62.718629 * zoomfactor, 66.026783 * zoomfactor, 62.824772 * zoomfactor, 65.315692 * zoomfactor, 62.669723 * zoomfactor, 66.245985 * zoomfactor);
        patternContext.bezierCurveTo(62.536540 * zoomfactor, 67.045090 * zoomfactor, 62.894072 * zoomfactor, 66.517233 * zoomfactor, 62.499427 * zoomfactor, 67.438073 * zoomfactor);
        patternContext.bezierCurveTo(62.418797 * zoomfactor, 67.626197 * zoomfactor, 62.234844 * zoomfactor, 67.758934 * zoomfactor, 62.158829 * zoomfactor, 67.948968 * zoomfactor);
        patternContext.bezierCurveTo(61.981727 * zoomfactor, 68.391724 * zoomfactor, 62.158035 * zoomfactor, 72.204420 * zoomfactor, 62.329128 * zoomfactor, 72.717315 * zoomfactor);
        patternContext.bezierCurveTo(62.476218 * zoomfactor, 73.158585 * zoomfactor, 63.957218 * zoomfactor, 75.857575 * zoomfactor, 63.521216 * zoomfactor, 76.293577 * zoomfactor);
        patternContext.bezierCurveTo(63.481076 * zoomfactor, 76.333717 * zoomfactor, 63.391057 * zoomfactor, 76.253437 * zoomfactor, 63.350917 * zoomfactor, 76.293577 * zoomfactor);
        patternContext.bezierCurveTo(63.129683 * zoomfactor, 76.514811 * zoomfactor, 62.877178 * zoomfactor, 77.296787 * zoomfactor, 62.499427 * zoomfactor, 77.485665 * zoomfactor);
        patternContext.bezierCurveTo(62.195519 * zoomfactor, 77.637618 * zoomfactor, 61.343195 * zoomfactor, 78.163861 * zoomfactor, 61.137040 * zoomfactor, 78.507454 * zoomfactor);
        patternContext.bezierCurveTo(61.044680 * zoomfactor, 78.661381 * zoomfactor, 61.066320 * zoomfactor, 78.868986 * zoomfactor, 60.966743 * zoomfactor, 79.018349 * zoomfactor);
        patternContext.bezierCurveTo(60.909043 * zoomfactor, 79.104909 * zoomfactor, 60.643452 * zoomfactor, 79.205951 * zoomfactor, 60.626145 * zoomfactor, 79.188645 * zoomfactor);
        patternContext.bezierCurveTo(60.455426 * zoomfactor, 79.017925 * zoomfactor, 60.796444 * zoomfactor, 78.748990 * zoomfactor, 60.796444 * zoomfactor, 78.677750 * zoomfactor);
        patternContext.bezierCurveTo(60.796444 * zoomfactor, 78.620980 * zoomfactor, 60.682912 * zoomfactor, 78.677750 * zoomfactor, 60.626145 * zoomfactor, 78.677750 * zoomfactor);
        patternContext.bezierCurveTo(59.961994 * zoomfactor, 78.677750 * zoomfactor, 59.417984 * zoomfactor, 78.640480 * zoomfactor, 58.752866 * zoomfactor, 78.507454 * zoomfactor);
        patternContext.fill();

        // #path27562
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(174, 95, 45, 0.110619)';
        patternContext.lineWidth = 0.070004 * zoomfactor;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(22.649656 * zoomfactor, 1.021789 * zoomfactor);
        patternContext.bezierCurveTo(22.145005 * zoomfactor, 1.749127 * zoomfactor, 22.149425 * zoomfactor, 2.533144 * zoomfactor, 21.798165 * zoomfactor, 3.235665 * zoomfactor);
        patternContext.bezierCurveTo(21.518860 * zoomfactor, 3.794274 * zoomfactor, 22.595177 * zoomfactor, 6.409989 * zoomfactor, 22.309059 * zoomfactor, 6.982225 * zoomfactor);
        patternContext.bezierCurveTo(21.922118 * zoomfactor, 7.756107 * zoomfactor, 21.339554 * zoomfactor, 8.410341 * zoomfactor, 20.946674 * zoomfactor, 9.196101 * zoomfactor);
        patternContext.bezierCurveTo(20.738103 * zoomfactor, 9.613242 * zoomfactor, 20.552244 * zoomfactor, 10.176135 * zoomfactor, 20.265481 * zoomfactor, 10.558486 * zoomfactor);
        patternContext.bezierCurveTo(19.790287 * zoomfactor, 11.192078 * zoomfactor, 20.001037 * zoomfactor, 10.576476 * zoomfactor, 19.584289 * zoomfactor, 11.409977 * zoomfactor);
        patternContext.bezierCurveTo(19.504009 * zoomfactor, 11.570536 * zoomfactor, 19.526129 * zoomfactor, 11.780698 * zoomfactor, 19.413990 * zoomfactor, 11.920872 * zoomfactor);
        patternContext.bezierCurveTo(19.286132 * zoomfactor, 12.080694 * zoomfactor, 19.030954 * zoomfactor, 12.101645 * zoomfactor, 18.903096 * zoomfactor, 12.261468 * zoomfactor);
        patternContext.bezierCurveTo(18.790957 * zoomfactor, 12.401641 * zoomfactor, 18.859726 * zoomfactor, 12.645430 * zoomfactor, 18.732798 * zoomfactor, 12.772362 * zoomfactor);
        patternContext.bezierCurveTo(18.652518 * zoomfactor, 12.852642 * zoomfactor, 18.486666 * zoomfactor, 12.709382 * zoomfactor, 18.392202 * zoomfactor, 12.772362 * zoomfactor);
        patternContext.bezierCurveTo(18.235280 * zoomfactor, 12.876977 * zoomfactor, 18.150320 * zoomfactor, 13.354840 * zoomfactor, 18.051605 * zoomfactor, 13.453555 * zoomfactor);
        patternContext.bezierCurveTo(17.874526 * zoomfactor, 13.630634 * zoomfactor, 17.396574 * zoomfactor, 13.840058 * zoomfactor, 17.200114 * zoomfactor, 14.134748 * zoomfactor);
        patternContext.bezierCurveTo(17.137134 * zoomfactor, 14.229208 * zoomfactor, 17.236014 * zoomfactor, 14.367638 * zoomfactor, 17.200114 * zoomfactor, 14.475344 * zoomfactor);
        patternContext.bezierCurveTo(16.852028 * zoomfactor, 15.519603 * zoomfactor, 15.963340 * zoomfactor, 16.479306 * zoomfactor, 15.326835 * zoomfactor, 17.370413 * zoomfactor);
        patternContext.bezierCurveTo(15.105500 * zoomfactor, 17.680281 * zoomfactor, 15.085205 * zoomfactor, 18.122937 * zoomfactor, 14.815940 * zoomfactor, 18.392202 * zoomfactor);
        patternContext.bezierCurveTo(14.775800 * zoomfactor, 18.432342 * zoomfactor, 14.685782 * zoomfactor, 18.352062 * zoomfactor, 14.645642 * zoomfactor, 18.392202 * zoomfactor);
        patternContext.bezierCurveTo(14.548122 * zoomfactor, 18.489722 * zoomfactor, 14.527723 * zoomfactor, 18.916257 * zoomfactor, 14.475344 * zoomfactor, 19.073394 * zoomfactor);
        patternContext.bezierCurveTo(14.209034 * zoomfactor, 19.872325 * zoomfactor, 13.278987 * zoomfactor, 22.143031 * zoomfactor, 12.772362 * zoomfactor, 22.649656 * zoomfactor);
        patternContext.bezierCurveTo(12.732222 * zoomfactor, 22.689796 * zoomfactor, 12.642204 * zoomfactor, 22.609516 * zoomfactor, 12.602064 * zoomfactor, 22.649656 * zoomfactor);
        patternContext.bezierCurveTo(12.561764 * zoomfactor, 22.689956 * zoomfactor, 12.504024 * zoomfactor, 24.037816 * zoomfactor, 12.431766 * zoomfactor, 24.182339 * zoomfactor);
        patternContext.bezierCurveTo(12.317609 * zoomfactor, 24.410654 * zoomfactor, 11.840616 * zoomfactor, 25.114086 * zoomfactor, 11.750573 * zoomfactor, 25.204128 * zoomfactor);
        patternContext.bezierCurveTo(11.665423 * zoomfactor, 25.289278 * zoomfactor, 11.324828 * zoomfactor, 25.118978 * zoomfactor, 11.239679 * zoomfactor, 25.204128 * zoomfactor);
        patternContext.bezierCurveTo(11.154529 * zoomfactor, 25.289278 * zoomfactor, 11.154529 * zoomfactor, 25.459575 * zoomfactor, 11.069381 * zoomfactor, 25.544724 * zoomfactor);
        patternContext.bezierCurveTo(11.029241 * zoomfactor, 25.584864 * zoomfactor, 10.939222 * zoomfactor, 25.504584 * zoomfactor, 10.899082 * zoomfactor, 25.544724 * zoomfactor);
        patternContext.bezierCurveTo(10.673824 * zoomfactor, 25.769983 * zoomfactor, 10.930212 * zoomfactor, 27.449134 * zoomfactor, 11.069381 * zoomfactor, 27.588302 * zoomfactor);
        patternContext.bezierCurveTo(11.109521 * zoomfactor, 27.628442 * zoomfactor, 11.214292 * zoomfactor, 27.537532 * zoomfactor, 11.239679 * zoomfactor, 27.588302 * zoomfactor);
        patternContext.bezierCurveTo(11.434239 * zoomfactor, 27.977422 * zoomfactor, 11.239679 * zoomfactor, 33.423632 * zoomfactor, 11.239679 * zoomfactor, 34.400228 * zoomfactor);
        patternContext.bezierCurveTo(11.239679 * zoomfactor, 34.647071 * zoomfactor, 11.045388 * zoomfactor, 35.568323 * zoomfactor, 11.239679 * zoomfactor, 35.762615 * zoomfactor);
        patternContext.bezierCurveTo(11.281739 * zoomfactor, 35.804675 * zoomfactor, 12.389709 * zoomfactor, 35.804675 * zoomfactor, 12.431766 * zoomfactor, 35.762615 * zoomfactor);
        patternContext.bezierCurveTo(12.521526 * zoomfactor, 35.672865 * zoomfactor, 12.512306 * zoomfactor, 35.511774 * zoomfactor, 12.602064 * zoomfactor, 35.422017 * zoomfactor);
        patternContext.bezierCurveTo(12.849070 * zoomfactor, 35.175012 * zoomfactor, 13.174532 * zoomfactor, 35.290688 * zoomfactor, 13.453555 * zoomfactor, 35.081421 * zoomfactor);
        patternContext.bezierCurveTo(14.104522 * zoomfactor, 34.593196 * zoomfactor, 14.658041 * zoomfactor, 34.223732 * zoomfactor, 15.326835 * zoomfactor, 33.889336 * zoomfactor);
        patternContext.bezierCurveTo(15.850028 * zoomfactor, 33.627737 * zoomfactor, 15.045170 * zoomfactor, 33.793286 * zoomfactor, 15.667431 * zoomfactor, 33.378441 * zoomfactor);
        patternContext.bezierCurveTo(15.761891 * zoomfactor, 33.315461 * zoomfactor, 15.913563 * zoomfactor, 33.441421 * zoomfactor, 16.008027 * zoomfactor, 33.378441 * zoomfactor);
        patternContext.bezierCurveTo(16.284125 * zoomfactor, 33.194376 * zoomfactor, 17.112309 * zoomfactor, 31.933562 * zoomfactor, 17.370413 * zoomfactor, 31.675459 * zoomfactor);
        patternContext.bezierCurveTo(17.868703 * zoomfactor, 31.177169 * zoomfactor, 18.752224 * zoomfactor, 30.974839 * zoomfactor, 19.243692 * zoomfactor, 30.483370 * zoomfactor);
        patternContext.bezierCurveTo(19.333452 * zoomfactor, 30.393620 * zoomfactor, 19.324232 * zoomfactor, 30.232530 * zoomfactor, 19.413990 * zoomfactor, 30.142775 * zoomfactor);
        patternContext.bezierCurveTo(19.953672 * zoomfactor, 29.603094 * zoomfactor, 20.625578 * zoomfactor, 29.281535 * zoomfactor, 21.287270 * zoomfactor, 28.950687 * zoomfactor);
        patternContext.bezierCurveTo(21.423574 * zoomfactor, 28.882537 * zoomfactor, 22.200873 * zoomfactor, 27.920881 * zoomfactor, 22.309059 * zoomfactor, 27.758601 * zoomfactor);
        patternContext.bezierCurveTo(22.515571 * zoomfactor, 27.448832 * zoomfactor, 22.860698 * zoomfactor, 27.497582 * zoomfactor, 23.160550 * zoomfactor, 27.247707 * zoomfactor);
        patternContext.bezierCurveTo(23.475018 * zoomfactor, 26.985650 * zoomfactor, 23.552292 * zoomfactor, 26.515369 * zoomfactor, 23.841743 * zoomfactor, 26.225917 * zoomfactor);
        patternContext.bezierCurveTo(23.986469 * zoomfactor, 26.081191 * zoomfactor, 24.224779 * zoomfactor, 26.045144 * zoomfactor, 24.352637 * zoomfactor, 25.885321 * zoomfactor);
        patternContext.bezierCurveTo(24.878973 * zoomfactor, 25.227401 * zoomfactor, 24.734942 * zoomfactor, 24.034628 * zoomfactor, 25.204128 * zoomfactor, 23.330848 * zoomfactor);
        patternContext.bezierCurveTo(25.337721 * zoomfactor, 23.130459 * zoomfactor, 25.581430 * zoomfactor, 23.020343 * zoomfactor, 25.715023 * zoomfactor, 22.819954 * zoomfactor);
        patternContext.bezierCurveTo(26.177502 * zoomfactor, 22.126235 * zoomfactor, 26.633350 * zoomfactor, 21.005580 * zoomfactor, 27.077408 * zoomfactor, 20.265481 * zoomfactor);
        patternContext.bezierCurveTo(27.160018 * zoomfactor, 20.127804 * zoomfactor, 27.346201 * zoomfactor, 20.068493 * zoomfactor, 27.418003 * zoomfactor, 19.924885 * zoomfactor);
        patternContext.bezierCurveTo(27.468773 * zoomfactor, 19.823339 * zoomfactor, 27.367233 * zoomfactor, 19.685835 * zoomfactor, 27.418003 * zoomfactor, 19.584289 * zoomfactor);
        patternContext.bezierCurveTo(27.489813 * zoomfactor, 19.440681 * zoomfactor, 27.719660 * zoomfactor, 19.399457 * zoomfactor, 27.758601 * zoomfactor, 19.243692 * zoomfactor);
        patternContext.bezierCurveTo(27.841211 * zoomfactor, 18.913265 * zoomfactor, 27.724711 * zoomfactor, 18.560810 * zoomfactor, 27.758601 * zoomfactor, 18.221903 * zoomfactor);
        patternContext.bezierCurveTo(27.821631 * zoomfactor, 17.591584 * zoomfactor, 27.996316 * zoomfactor, 16.965907 * zoomfactor, 28.099197 * zoomfactor, 16.348624 * zoomfactor);
        patternContext.bezierCurveTo(28.166927 * zoomfactor, 15.942261 * zoomfactor, 27.968292 * zoomfactor, 15.378955 * zoomfactor, 28.099197 * zoomfactor, 14.986238 * zoomfactor);
        patternContext.bezierCurveTo(28.350861 * zoomfactor, 14.231246 * zoomfactor, 28.605660 * zoomfactor, 12.239307 * zoomfactor, 28.439792 * zoomfactor, 11.409977 * zoomfactor);
        patternContext.bezierCurveTo(28.424052 * zoomfactor, 11.331257 * zoomfactor, 28.294883 * zoomfactor, 11.315837 * zoomfactor, 28.269496 * zoomfactor, 11.239679 * zoomfactor);
        patternContext.bezierCurveTo(27.929840 * zoomfactor, 10.220709 * zoomfactor, 27.533118 * zoomfactor, 8.961126 * zoomfactor, 27.758601 * zoomfactor, 7.833715 * zoomfactor);
        patternContext.bezierCurveTo(27.837301 * zoomfactor, 7.440218 * zoomfactor, 28.007529 * zoomfactor, 7.178599 * zoomfactor, 28.099197 * zoomfactor, 6.811926 * zoomfactor);
        patternContext.bezierCurveTo(28.190507 * zoomfactor, 6.446699 * zoomfactor, 27.928448 * zoomfactor, 5.791039 * zoomfactor, 28.099197 * zoomfactor, 5.449541 * zoomfactor);
        patternContext.bezierCurveTo(28.307212 * zoomfactor, 5.033512 * zoomfactor, 28.640037 * zoomfactor, 4.818869 * zoomfactor, 28.780390 * zoomfactor, 4.257454 * zoomfactor);
        patternContext.bezierCurveTo(28.937201 * zoomfactor, 3.630208 * zoomfactor, 28.780390 * zoomfactor, 2.716843 * zoomfactor, 28.780390 * zoomfactor, 2.043578 * zoomfactor);
        patternContext.bezierCurveTo(28.780390 * zoomfactor, 1.973455 * zoomfactor, 28.825470 * zoomfactor, 1.577762 * zoomfactor, 28.780390 * zoomfactor, 1.532683 * zoomfactor);
        patternContext.bezierCurveTo(28.689030 * zoomfactor, 1.441320 * zoomfactor, 28.150253 * zoomfactor, 1.634795 * zoomfactor, 28.099197 * zoomfactor, 1.532683 * zoomfactor);
        patternContext.bezierCurveTo(28.099197 * zoomfactor, 0.567661 * zoomfactor, 28.212729 * zoomfactor, 1.475917 * zoomfactor, 27.928898 * zoomfactor, 1.192087 * zoomfactor);
        patternContext.bezierCurveTo(27.786983 * zoomfactor, 1.050172 * zoomfactor, 28.070815 * zoomfactor, 0.482511 * zoomfactor, 27.928898 * zoomfactor, 0.340596 * zoomfactor);
        patternContext.bezierCurveTo(27.843928 * zoomfactor, 0.255622 * zoomfactor, 27.210752 * zoomfactor, 0.340596 * zoomfactor, 27.077408 * zoomfactor, 0.340596 * zoomfactor);
        patternContext.bezierCurveTo(26.529225 * zoomfactor, 0.340596 * zoomfactor, 27.368124 * zoomfactor, 0.300457 * zoomfactor, 26.736812 * zoomfactor, 0.510894 * zoomfactor);
        patternContext.bezierCurveTo(26.467546 * zoomfactor, 0.600649 * zoomfactor, 26.160676 * zoomfactor, 0.442056 * zoomfactor, 25.885321 * zoomfactor, 0.510894 * zoomfactor);
        patternContext.bezierCurveTo(25.649804 * zoomfactor, 0.569774 * zoomfactor, 25.317172 * zoomfactor, 0.780655 * zoomfactor, 25.033830 * zoomfactor, 0.851491 * zoomfactor);
        patternContext.bezierCurveTo(24.489042 * zoomfactor, 0.987688 * zoomfactor, 23.189346 * zoomfactor, 1.021789 * zoomfactor, 22.649656 * zoomfactor, 1.021789 * zoomfactor);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    portal: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        patternContext.arc(blockSize / 2, blockSize / 2, blockSize / 2, 0, 2 * Math.PI);
        patternContext.fillStyle = "#888";
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    pissoir: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        // #path2412
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(228, 228, 228)';
        patternContext.strokeStyle = 'rgb(247, 247, 247)';
        patternContext.lineWidth = 0.075392;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(80.000000, 16.909777);
        patternContext.bezierCurveTo(80.000000, 16.909777, 16.780517, -7.075620, 17.402343, 37.289847);
        patternContext.bezierCurveTo(18.071077, 85.002078, 80.000000, 63.303995, 80.000000, 63.303995);
        patternContext.moveTo(25.880409, 35.323179);
        patternContext.fill();
        patternContext.stroke();

        // #path2412-3
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(193, 193, 193)';
        patternContext.strokeStyle = 'rgba(254, 254, 254, 0)';
        patternContext.lineWidth = 0.061418;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(79.956164, 23.522699);
        patternContext.bezierCurveTo(79.956164, 23.522699, 22.699167, 5.947080, 23.262345, 38.456465);
        patternContext.bezierCurveTo(23.868009, 73.418238, 79.956164, 57.518680, 79.956164, 57.518680);
        patternContext.moveTo(30.940812, 37.015364);
        patternContext.fill();
        patternContext.stroke();

        // #path2412-3-9
        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(227, 216, 164, 0.763274)';
        patternContext.strokeStyle = 'rgba(215, 224, 102, 0)';
        patternContext.lineWidth = 0.030534;
        patternContext.lineCap = 'butt';
        patternContext.lineJoin = 'miter';
        patternContext.moveTo(79.954992, 33.772624);
        patternContext.bezierCurveTo(79.954992, 33.772624, 61.698441, 22.568465, 61.961183, 39.790960);
        patternContext.bezierCurveTo(62.243748, 58.312659, 79.954992, 45.346049, 79.954992, 45.346049);
        patternContext.fill();
        patternContext.stroke();

        // #rect8553
        patternContext.beginPath();
        patternContext.fillStyle = 'rgb(228, 228, 228)';
        patternContext.lineWidth = 0.230717;
        patternContext.rect(74.084312, 16.909777, 5.915691, 44.679905);
        patternContext.fill();

        return context.createPattern(patternCanvas, 'repeat');
    },
    stop: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;

        patternContext.beginPath();
        patternContext.fillStyle = 'rgba(255, 255, 255, 0)';
        patternContext.strokeStyle = 'rgba(180, 35, 35, 0.533186)';
        patternContext.lineWidth = 3 * zoomfactor;
        patternContext.moveTo(21.366168 * zoomfactor, 21.509076 * zoomfactor);
        patternContext.bezierCurveTo(11.145551 * zoomfactor, 31.792731 * zoomfactor, 11.183869 * zoomfactor, 48.410824 * zoomfactor, 21.451801 * zoomfactor, 58.647236 * zoomfactor);
        patternContext.bezierCurveTo(31.719733 * zoomfactor, 68.883649 * zoomfactor, 48.337865 * zoomfactor, 68.870876 * zoomfactor, 58.590049 * zoomfactor, 58.618692 * zoomfactor);
        patternContext.bezierCurveTo(68.842233 * zoomfactor, 48.366508 * zoomfactor, 68.855006 * zoomfactor, 31.748376 * zoomfactor, 58.618593 * zoomfactor, 21.480444 * zoomfactor);
        patternContext.bezierCurveTo(48.382181 * zoomfactor, 11.212512 * zoomfactor, 31.764088 * zoomfactor, 11.174194 * zoomfactor, 21.480433 * zoomfactor, 21.394811 * zoomfactor);
        patternContext.moveTo(21.366168 * zoomfactor, 21.509076 * zoomfactor);
        patternContext.lineTo(58.616520 * zoomfactor, 58.530897 * zoomfactor);
        patternContext.fill();
        patternContext.stroke();

        return context.createPattern(patternCanvas, 'repeat');
    },
    en_glauben: function() {
        const patternCanvas = document.createElement('canvas');
        const ctx = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        ctx.save();
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.miterLimit = 4;
        ctx.font = "normal normal normal normal 15px/21.428571701049805px 'Helvetica Neue', Helvetica, Arial, sans-serif";
        ctx.font = "   15px 'HelveticaNeue',Helvetica,Arial,sans-serif";
        ctx.scale(0.2645833333333333, 0.2645833333333333);
        ctx.translate(2.842170943040401e-14, 0);
        ctx.scale(3.779527559055118, 3.779527559055118);
        ctx.save();
        ctx.restore();
        ctx.save();
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.save();
        ctx.fillStyle = "#6e4914";
        ctx.fillStyle = "rgba(110, 73, 20, 1)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.548287 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(33.5571542 * zoomfactor, 90.314812 * zoomfactor);
        ctx.bezierCurveTo(33.5571542 * zoomfactor, 95.17475675227794 * zoomfactor, 30.595871873350536 * zoomfactor, 99.1145204 * zoomfactor, 26.942945 * zoomfactor, 99.1145204 * zoomfactor);
        ctx.bezierCurveTo(23.290018126649468 * zoomfactor, 99.1145204 * zoomfactor, 20.3287358 * zoomfactor, 95.17475675227794 * zoomfactor, 20.3287358 * zoomfactor, 90.314812 * zoomfactor);
        ctx.bezierCurveTo(20.3287358 * zoomfactor, 85.45486724772206 * zoomfactor, 23.290018126649468 * zoomfactor, 81.5151036 * zoomfactor, 26.942945 * zoomfactor, 81.5151036 * zoomfactor);
        ctx.bezierCurveTo(30.595871873350536 * zoomfactor, 81.5151036 * zoomfactor, 33.5571542 * zoomfactor, 85.45486724772206 * zoomfactor, 33.5571542 * zoomfactor, 90.314812 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#6e4914";
        ctx.fillStyle = "rgba(110, 73, 20, 1)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.529557 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(58.3087213 * zoomfactor, 90.571655 * zoomfactor);
        ctx.bezierCurveTo(58.3087213 * zoomfactor, 95.4367718989601 * zoomfactor, 55.549242100440274 * zoomfactor, 99.38072840000001 * zoomfactor, 52.145252 * zoomfactor, 99.38072840000001 * zoomfactor);
        ctx.bezierCurveTo(48.741261899559724 * zoomfactor, 99.38072840000001 * zoomfactor, 45.9817827 * zoomfactor, 95.4367718989601 * zoomfactor, 45.9817827 * zoomfactor, 90.571655 * zoomfactor);
        ctx.bezierCurveTo(45.9817827 * zoomfactor, 85.70653810103991 * zoomfactor, 48.741261899559724 * zoomfactor, 81.7625816 * zoomfactor, 52.145252 * zoomfactor, 81.7625816 * zoomfactor);
        ctx.bezierCurveTo(55.549242100440274 * zoomfactor, 81.7625816 * zoomfactor, 58.3087213 * zoomfactor, 85.70653810103991 * zoomfactor, 58.3087213 * zoomfactor, 90.571655 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.947348 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(17.838156 * zoomfactor, 38.767313 * zoomfactor);
        ctx.lineTo(14.439128000000002 * zoomfactor, 56.477255 * zoomfactor);
        ctx.lineTo(19.615197000000002 * zoomfactor, 74.773157 * zoomfactor);
        ctx.lineTo(20.28159 * zoomfactor, 86.822364 * zoomfactor);
        ctx.lineTo(21.392243 * zoomfactor, 90.791513 * zoomfactor);
        ctx.lineTo(32.3877 * zoomfactor, 91.075019 * zoomfactor);
        ctx.lineTo(34.27581 * zoomfactor, 87.531132 * zoomfactor);
        ctx.lineTo(34.831135 * zoomfactor, 81.01039 * zoomfactor);
        ctx.lineTo(44.715945000000005 * zoomfactor, 80.868633 * zoomfactor);
        ctx.lineTo(45.16020400000001 * zoomfactor, 86.255336 * zoomfactor);
        ctx.lineTo(46.492988000000004 * zoomfactor, 90.507999 * zoomfactor);
        ctx.lineTo(57.15525100000001 * zoomfactor, 90.649756 * zoomfactor);
        ctx.lineTo(59.82081600000001 * zoomfactor, 86.397093 * zoomfactor);
        ctx.lineTo(60.376143000000006 * zoomfactor, 73.780872 * zoomfactor);
        ctx.bezierCurveTo(64.041296 * zoomfactor, 67.401882 * zoomfactor, 66.28251300000001 * zoomfactor, 57.802432 * zoomfactor, 66.752352 * zoomfactor, 56.216414 * zoomfactor);
        ctx.lineTo(62.310571 * zoomfactor, 42.545499 * zoomfactor);
        ctx.lineTo(59.709752 * zoomfactor, 44.862785 * zoomfactor);
        ctx.lineTo(52.601575000000004 * zoomfactor, 48.264916 * zoomfactor);
        ctx.lineTo(47.381510000000006 * zoomfactor, 49.257202 * zoomfactor);
        ctx.lineTo(31.721310000000006 * zoomfactor, 48.973689 * zoomfactor);
        ctx.lineTo(26.056983000000006 * zoomfactor, 46.847362000000004 * zoomfactor);
        ctx.lineTo(20.503721000000006 * zoomfactor, 43.01997 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(61.642769 * zoomfactor, 67.898918 * zoomfactor, 63.844254 * zoomfactor, 47.606655 * zoomfactor);
        g.addColorStop(0, "rgba(105, 99, 78, 1)");
        g.addColorStop(1, "rgba(133, 126, 98, 1)");
        ctx.fillStyle = g;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.269386 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(59.898959 * zoomfactor, 34.338579 * zoomfactor);
        ctx.lineTo(59.802349 * zoomfactor, 74.773154 * zoomfactor);
        ctx.bezierCurveTo(59.802349 * zoomfactor, 74.773154 * zoomfactor, 67.494597 * zoomfactor, 62.846025000000004 * zoomfactor, 67.632033 * zoomfactor, 55.74013600000001 * zoomfactor);
        ctx.bezierCurveTo(67.780253 * zoomfactor, 48.076617000000006 * zoomfactor, 59.89896300000001 * zoomfactor, 34.33857900000001 * zoomfactor, 59.89896300000001 * zoomfactor, 34.33857900000001 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(61.642769 * zoomfactor, 67.898918 * zoomfactor, 63.844254 * zoomfactor, 47.606655 * zoomfactor);
        g.addColorStop(0, "rgba(105, 99, 78, 1)");
        g.addColorStop(1, "rgba(133, 126, 98, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx1 = canvas.getContext("2d");
        ctx1.fillStyle = g;
        ctx1.save();
        ctx1.strokeStyle = "rgba(0,0,0,0)";
        ctx1.miterLimit = 4;
        ctx1.font = "";
        ctx1.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx1.beginPath();
        ctx1.moveTo(0, 0);
        ctx1.lineTo(3825 * zoomfactor, 0);
        ctx1.lineTo(3825 * zoomfactor, 2083 * zoomfactor);
        ctx1.lineTo(0, 2083 * zoomfactor);
        ctx1.closePath();
        ctx1.clip();
        ctx1.save();
        ctx1.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx1.transform(-1, 0, 0, 1, 79.2821 * zoomfactor, 0);
        ctx1.save();
        ctx1.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx1.beginPath();
        ctx1.moveTo(-10000 * zoomfactor, -10000 * zoomfactor);
        ctx1.lineTo(20000 * zoomfactor, -10000 * zoomfactor);
        ctx1.bezierCurveTo(20000 * zoomfactor, -10000 * zoomfactor, 20000 * zoomfactor, -10000 * zoomfactor, 20000 * zoomfactor, -10000 * zoomfactor);
        ctx1.lineTo(20000 * zoomfactor, 20000 * zoomfactor);
        ctx1.bezierCurveTo(20000 * zoomfactor, 20000 * zoomfactor, 20000 * zoomfactor, 20000 * zoomfactor, 20000 * zoomfactor, 20000 * zoomfactor);
        ctx1.lineTo(-10000 * zoomfactor, 20000 * zoomfactor);
        ctx1.bezierCurveTo(-10000 * zoomfactor, 20000 * zoomfactor, -10000 * zoomfactor, 20000 * zoomfactor, -10000 * zoomfactor, 20000 * zoomfactor);
        ctx1.lineTo(-10000 * zoomfactor, -10000 * zoomfactor);
        ctx1.bezierCurveTo(-10000 * zoomfactor, -10000 * zoomfactor, -10000 * zoomfactor, -10000 * zoomfactor, -10000 * zoomfactor, -10000 * zoomfactor);
        ctx1.closePath();
        ctx1.fill();
        ctx1.stroke();
        ctx1.restore();
        ctx1.restore();
        ctx1.restore();
        var p = ctx1.createPattern(ctx1.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.269386 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(19.383291 * zoomfactor, 34.338579 * zoomfactor);
        ctx.lineTo(19.479900999999998 * zoomfactor, 74.773154 * zoomfactor);
        ctx.bezierCurveTo(19.479900999999998 * zoomfactor, 74.773154 * zoomfactor, 11.787652999999999 * zoomfactor, 62.846025000000004 * zoomfactor, 11.650216999999998 * zoomfactor, 55.74013600000001 * zoomfactor);
        ctx.bezierCurveTo(11.501996999999998 * zoomfactor, 48.076617000000006 * zoomfactor, 19.383286999999996 * zoomfactor, 34.33857900000001 * zoomfactor, 19.383286999999996 * zoomfactor, 34.33857900000001 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(169.76465 * zoomfactor, 361.81934 * zoomfactor, 151.93471 * zoomfactor, 321.1073 * zoomfactor);
        g.addColorStop(0, "rgba(47, 85, 208, 0.90909091)");
        g.addColorStop(1, "rgba(43, 109, 167, 0.64966741)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx2 = canvas.getContext("2d");
        ctx2.fillStyle = g;
        ctx2.save();
        ctx2.strokeStyle = "rgba(0,0,0,0)";
        ctx2.miterLimit = 4;
        ctx2.font = "";
        ctx2.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx2.beginPath();
        ctx2.moveTo(0, 0);
        ctx2.lineTo(3825, 0);
        ctx2.lineTo(3825, 2083);
        ctx2.lineTo(0, 2083);
        ctx2.closePath();
        ctx2.clip();
        ctx2.save();
        ctx2.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx2.transform(0.26203647 * zoomfactor, 0, 0, 0.27694023 * zoomfactor, 0.67567572 * zoomfactor, -13.947004 * zoomfactor);
        ctx2.save();
        ctx2.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx2.beginPath();
        ctx2.moveTo(-10000, -10000);
        ctx2.lineTo(20000, -10000);
        ctx2.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx2.lineTo(20000, 20000);
        ctx2.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx2.lineTo(-10000, 20000);
        ctx2.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx2.lineTo(-10000, -10000);
        ctx2.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx2.closePath();
        ctx2.fill();
        ctx2.stroke();
        ctx2.restore();
        ctx2.restore();
        ctx2.restore();
        var p = ctx2.createPattern(ctx2.canvas, "no-repeat");
        ctx.fillStyle = p;
        var g = ctx.createLinearGradient(169.76465 * zoomfactor, 361.81934 * zoomfactor, 151.93471 * zoomfactor, 321.1073 * zoomfactor);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx3 = canvas.getContext("2d");
        ctx3.fillStyle = g;
        ctx3.save();
        ctx3.strokeStyle = "rgba(0,0,0,0)";
        ctx3.miterLimit = 4;
        ctx3.font = "";
        ctx3.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx3.beginPath();
        ctx3.moveTo(0, 0);
        ctx3.lineTo(3825, 0);
        ctx3.lineTo(3825, 2083);
        ctx3.lineTo(0, 2083);
        ctx3.closePath();
        ctx3.clip();
        ctx3.save();
        ctx3.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx3.transform(0.26203647 * zoomfactor, 0, 0, 0.27694023 * zoomfactor, 0.67567572 * zoomfactor, -13.947004 * zoomfactor);
        ctx3.save();
        ctx3.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx3.beginPath();
        ctx3.moveTo(-10000, -10000);
        ctx3.lineTo(20000, -10000);
        ctx3.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx3.lineTo(20000, 20000);
        ctx3.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx3.lineTo(-10000, 20000);
        ctx3.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx3.lineTo(-10000, -10000);
        ctx3.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx3.closePath();
        ctx3.fill();
        ctx3.stroke();
        ctx3.restore();
        ctx3.restore();
        ctx3.restore();
        var p = ctx3.createPattern(ctx3.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.269386 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(19.615199 * zoomfactor, 74.773154 * zoomfactor);
        ctx.lineTo(60.376141 * zoomfactor, 73.780868 * zoomfactor);
        ctx.lineTo(59.820814 * zoomfactor, 86.397091 * zoomfactor);
        ctx.lineTo(57.155249 * zoomfactor, 90.64975 * zoomfactor);
        ctx.lineTo(46.492988 * zoomfactor, 90.507994 * zoomfactor);
        ctx.lineTo(45.160204 * zoomfactor, 86.255334 * zoomfactor);
        ctx.lineTo(44.715945 * zoomfactor, 80.868633 * zoomfactor);
        ctx.lineTo(34.831136 * zoomfactor, 81.010387 * zoomfactor);
        ctx.lineTo(34.275811 * zoomfactor, 87.531128 * zoomfactor);
        ctx.lineTo(32.3877 * zoomfactor, 91.075019 * zoomfactor);
        ctx.lineTo(21.392243 * zoomfactor, 90.791509 * zoomfactor);
        ctx.lineTo(20.28159 * zoomfactor, 86.822361 * zoomfactor);
        ctx.lineTo(19.615199 * zoomfactor, 74.773154 * zoomfactor);
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(71.412895 * zoomfactor, 261.66318 * zoomfactor, 214.23026 * zoomfactor, 281.35965 * zoomfactor);
        g.addColorStop(0, "rgba(105, 99, 78, 1)");
        g.addColorStop(1, "rgba(105, 99, 78, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx4 = canvas.getContext("2d");
        ctx4.fillStyle = g;
        ctx4.save();
        ctx4.strokeStyle = "rgba(0,0,0,0)";
        ctx4.miterLimit = 4;
        ctx4.font = "";
        ctx4.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx4.beginPath();
        ctx4.moveTo(0, 0);
        ctx4.lineTo(3825, 0);
        ctx4.lineTo(3825, 2083);
        ctx4.lineTo(0, 2083);
        ctx4.closePath();
        ctx4.clip();
        ctx4.save();
        ctx4.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx4.transform(0.26203647 * zoomfactor, 0, 0, 0.27694023 * zoomfactor, 0.6756746 * zoomfactor, -14.515683 * zoomfactor);
        ctx4.save();
        ctx4.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx4.beginPath();
        ctx4.moveTo(-10000, -10000);
        ctx4.lineTo(20000, -10000);
        ctx4.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx4.lineTo(20000, 20000);
        ctx4.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx4.lineTo(-10000, 20000);
        ctx4.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx4.lineTo(-10000, -10000);
        ctx4.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx4.closePath();
        ctx4.fill();
        ctx4.stroke();
        ctx4.restore();
        ctx4.restore();
        ctx4.restore();
        var p = ctx4.createPattern(ctx4.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.269386 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(17.838155 * zoomfactor, 38.198627 * zoomfactor);
        ctx.lineTo(26.056984 * zoomfactor, 46.278677 * zoomfactor);
        ctx.lineTo(31.721311 * zoomfactor, 48.405005 * zoomfactor);
        ctx.lineTo(32.351899 * zoomfactor, 73.730776 * zoomfactor);
        ctx.lineTo(19.615199000000004 * zoomfactor, 74.20447300000001 * zoomfactor);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(77.470253 * zoomfactor, 259.63211 * zoomfactor, 189.96042 * zoomfactor, 268.38095 * zoomfactor);
        g.addColorStop(0, "rgba(105, 99, 78, 1)");
        g.addColorStop(1, "rgba(105, 99, 78, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx5 = canvas.getContext("2d");
        ctx5.fillStyle = g;
        ctx5.save();
        ctx5.strokeStyle = "rgba(0,0,0,0)";
        ctx5.miterLimit = 4;
        ctx5.font = "";
        ctx5.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx5.beginPath();
        ctx5.moveTo(0, 0);
        ctx5.lineTo(3825, 0);
        ctx5.lineTo(3825, 2083);
        ctx5.lineTo(0, 2083);
        ctx5.closePath();
        ctx5.clip();
        ctx5.save();
        ctx5.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx5.transform(-0.36552245 * zoomfactor, 0, 0, 0.27660867 * zoomfactor, 87.970679 * zoomfactor, -15.281613 * zoomfactor);
        ctx5.save();
        ctx5.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx5.beginPath();
        ctx5.moveTo(-10000, -10000);
        ctx5.lineTo(20000, -10000);
        ctx5.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx5.lineTo(20000, 20000);
        ctx5.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx5.lineTo(-10000, 20000);
        ctx5.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx5.lineTo(-10000, -10000);
        ctx5.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx5.closePath();
        ctx5.fill();
        ctx5.stroke();
        ctx5.restore();
        ctx5.restore();
        ctx5.restore();
        var p = ctx5.createPattern(ctx5.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.317972 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(64.030224 * zoomfactor, 37.369584 * zoomfactor);
        ctx.bezierCurveTo(60.67211700000001 * zoomfactor, 40.752548000000004 * zoomfactor, 65.219301 * zoomfactor, 43.097915 * zoomfactor, 52.60157400000001 * zoomfactor, 47.696231000000004 * zoomfactor);
        ctx.lineTo(47.38150900000001 * zoomfactor, 48.688517000000004 * zoomfactor);
        ctx.bezierCurveTo(46.847848000000006 * zoomfactor, 58.06792 * zoomfactor, 46.994276000000006 * zoomfactor, 64.539776 * zoomfactor, 46.974303000000006 * zoomfactor, 73.019723 * zoomfactor);
        ctx.lineTo(60.376141000000004 * zoomfactor, 73.212188 * zoomfactor);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.859687 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(67.516041 * zoomfactor, 31.291353 * zoomfactor);
        ctx.bezierCurveTo(67.516041 * zoomfactor, 43.779194922194534 * zoomfactor, 55.79827137021372 * zoomfactor, 53.902591 * zoomfactor, 41.34367 * zoomfactor, 53.902591 * zoomfactor);
        ctx.bezierCurveTo(26.889068629786287 * zoomfactor, 53.902591 * zoomfactor, 15.171299000000005 * zoomfactor, 43.779194922194534 * zoomfactor, 15.171299000000005 * zoomfactor, 31.291353 * zoomfactor);
        ctx.bezierCurveTo(15.171299000000005 * zoomfactor, 18.803511077805467 * zoomfactor, 26.889068629786287 * zoomfactor, 8.680115 * zoomfactor, 41.34367 * zoomfactor, 8.680115 * zoomfactor);
        ctx.bezierCurveTo(55.79827137021372 * zoomfactor, 8.680115 * zoomfactor, 67.516041 * zoomfactor, 18.803511077805467 * zoomfactor, 67.516041 * zoomfactor, 31.291353 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.951023 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(35.3955382 * zoomfactor, 36.084991 * zoomfactor);
        ctx.bezierCurveTo(35.3955382 * zoomfactor, 37.90554460325276 * zoomfactor, 33.83755754030139 * zoomfactor, 39.381394900000004 * zoomfactor, 31.915691 * zoomfactor, 39.381394900000004 * zoomfactor);
        ctx.bezierCurveTo(29.99382445969861 * zoomfactor, 39.381394900000004 * zoomfactor, 28.4358438 * zoomfactor, 37.90554460325276 * zoomfactor, 28.4358438 * zoomfactor, 36.084991 * zoomfactor);
        ctx.bezierCurveTo(28.4358438 * zoomfactor, 34.26443739674725 * zoomfactor, 29.99382445969861 * zoomfactor, 32.7885871 * zoomfactor, 31.915691 * zoomfactor, 32.7885871 * zoomfactor);
        ctx.bezierCurveTo(33.83755754030139 * zoomfactor, 32.7885871 * zoomfactor, 35.3955382 * zoomfactor, 34.26443739674725 * zoomfactor, 35.3955382 * zoomfactor, 36.084991 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.951023 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(50.6755942 * zoomfactor, 36.172325 * zoomfactor);
        ctx.bezierCurveTo(50.6755942 * zoomfactor, 37.992878603252755 * zoomfactor, 49.117613540301384 * zoomfactor, 39.4687289 * zoomfactor, 47.195747 * zoomfactor, 39.4687289 * zoomfactor);
        ctx.bezierCurveTo(45.27388045969861 * zoomfactor, 39.4687289 * zoomfactor, 43.715899799999995 * zoomfactor, 37.992878603252755 * zoomfactor, 43.715899799999995 * zoomfactor, 36.172325 * zoomfactor);
        ctx.bezierCurveTo(43.715899799999995 * zoomfactor, 34.351771396747246 * zoomfactor, 45.27388045969861 * zoomfactor, 32.8759211 * zoomfactor, 47.195747 * zoomfactor, 32.8759211 * zoomfactor);
        ctx.bezierCurveTo(49.117613540301384 * zoomfactor, 32.8759211 * zoomfactor, 50.6755942 * zoomfactor, 34.351771396747246 * zoomfactor, 50.6755942 * zoomfactor, 36.172325 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883 * zoomfactor, 181.14001 * zoomfactor, 0, -63.142883 * zoomfactor, 181.14001 * zoomfactor, 5.2169404 * zoomfactor);
        g.addColorStop(0, "rgba(183, 176, 176, 1)");
        g.addColorStop(1, "rgba(43, 109, 167, 0.64966741)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx6 = canvas.getContext("2d");
        ctx6.fillStyle = g;
        ctx6.save();
        ctx6.strokeStyle = "rgba(0,0,0,0)";
        ctx6.miterLimit = 4;
        ctx6.font = "";
        ctx6.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx6.beginPath();
        ctx6.moveTo(0, 0);
        ctx6.lineTo(3825, 0);
        ctx6.lineTo(3825, 2083);
        ctx6.lineTo(0, 2083);
        ctx6.closePath();
        ctx6.clip();
        ctx6.save();
        ctx6.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx6.transform(0.45002833 * zoomfactor, 2.0034692 * zoomfactor, -0.92148322 * zoomfactor, 0.20698773 * zoomfactor, 313.35834 * zoomfactor, 272.19747 * zoomfactor);
        ctx6.save();
        ctx6.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx6.beginPath();
        ctx6.moveTo(-10000, -10000);
        ctx6.lineTo(20000, -10000);
        ctx6.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx6.lineTo(20000, 20000);
        ctx6.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx6.lineTo(-10000, 20000);
        ctx6.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx6.lineTo(-10000, -10000);
        ctx6.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx6.closePath();
        ctx6.fill();
        ctx6.stroke();
        ctx6.restore();
        ctx6.restore();
        ctx6.restore();
        var p = ctx6.createPattern(ctx6.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.transform(0.36185855 * zoomfactor, 0, 0, 0.31884763 * zoomfactor, -10.390244 * zoomfactor, -21.519525 * zoomfactor);
        ctx.beginPath();
        ctx.moveTo(123.2417104 * zoomfactor, 183.13518 * zoomfactor);
        ctx.bezierCurveTo(123.2417104 * zoomfactor, 185.85634782419575 * zoomfactor, 120.90600662369616 * zoomfactor, 188.06229019999998 * zoomfactor, 118.02477 * zoomfactor, 188.06229019999998 * zoomfactor);
        ctx.bezierCurveTo(115.14353337630385 * zoomfactor, 188.06229019999998 * zoomfactor, 112.8078296 * zoomfactor, 185.85634782419575 * zoomfactor, 112.8078296 * zoomfactor, 183.13518 * zoomfactor);
        ctx.bezierCurveTo(112.8078296 * zoomfactor, 180.41401217580423 * zoomfactor, 115.14353337630385 * zoomfactor, 178.2080698 * zoomfactor, 118.02477 * zoomfactor, 178.2080698 * zoomfactor);
        ctx.bezierCurveTo(120.90600662369616 * zoomfactor, 178.2080698 * zoomfactor, 123.2417104 * zoomfactor, 180.41401217580423 * zoomfactor, 123.2417104 * zoomfactor, 183.13518 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883 * zoomfactor, 181.14001 * zoomfactor, 0, -63.142883 * zoomfactor, 181.14001 * zoomfactor, 5.2169404 * zoomfactor);
        g.addColorStop(0, "rgba(183, 176, 176, 1)");
        g.addColorStop(1, "rgba(43, 109, 167, 0.64966741)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx7 = canvas.getContext("2d");
        ctx7.fillStyle = g;
        ctx7.save();
        ctx7.strokeStyle = "rgba(0,0,0,0)";
        ctx7.miterLimit = 4;
        ctx7.font = "";
        ctx7.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx7.beginPath();
        ctx7.moveTo(0, 0);
        ctx7.lineTo(3825, 0);
        ctx7.lineTo(3825, 2083);
        ctx7.lineTo(0, 2083);
        ctx7.closePath();
        ctx7.clip();
        ctx7.save();
        ctx7.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx7.transform(0.45002833 * zoomfactor, 2.0034692 * zoomfactor, -0.92148322 * zoomfactor, 0.20698773 * zoomfactor, 313.35834 * zoomfactor, 272.19747 * zoomfactor);
        ctx7.save();
        ctx7.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx7.beginPath();
        ctx7.moveTo(-10000, -10000);
        ctx7.lineTo(20000, -10000);
        ctx7.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx7.lineTo(20000, 20000);
        ctx7.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx7.lineTo(-10000, 20000);
        ctx7.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx7.lineTo(-10000, -10000);
        ctx7.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx7.closePath();
        ctx7.fill();
        ctx7.stroke();
        ctx7.restore();
        ctx7.restore();
        ctx7.restore();
        var p = ctx7.createPattern(ctx7.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.transform(0.36185855 * zoomfactor, 0, 0, 0.31884763 * zoomfactor, 4.8898158 * zoomfactor, -21.432194 * zoomfactor);
        ctx.beginPath();
        ctx.moveTo(123.2417104 * zoomfactor, 183.13518 * zoomfactor);
        ctx.bezierCurveTo(123.2417104 * zoomfactor, 185.85634782419575 * zoomfactor, 120.90600662369616 * zoomfactor, 188.06229019999998 * zoomfactor, 118.02477 * zoomfactor, 188.06229019999998 * zoomfactor);
        ctx.bezierCurveTo(115.14353337630385 * zoomfactor, 188.06229019999998 * zoomfactor, 112.8078296 * zoomfactor, 185.85634782419575 * zoomfactor, 112.8078296 * zoomfactor, 183.13518 * zoomfactor);
        ctx.bezierCurveTo(112.8078296 * zoomfactor, 180.41401217580423 * zoomfactor, 115.14353337630385 * zoomfactor, 178.2080698 * zoomfactor, 118.02477 * zoomfactor, 178.2080698 * zoomfactor);
        ctx.bezierCurveTo(120.90600662369616 * zoomfactor, 178.2080698 * zoomfactor, 123.2417104 * zoomfactor, 180.41401217580423 * zoomfactor, 123.2417104 * zoomfactor, 183.13518 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ca9e42";
        ctx.fillStyle = "rgba(202, 158, 66, 0)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.90814 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(17.838158 * zoomfactor, 37.629947 * zoomfactor);
        ctx.bezierCurveTo(17.838158 * zoomfactor, 37.629947 * zoomfactor, 52.635307 * zoomfactor, 25.641063000000003 * zoomfactor, 41.691052 * zoomfactor, 15.831975 * zoomfactor);
        ctx.bezierCurveTo(30.746778 * zoomfactor, 6.022893999999999 * zoomfactor, 26.537453 * zoomfactor, 12.562281 * zoomfactor, 26.537453 * zoomfactor, 12.562281 * zoomfactor);
        ctx.bezierCurveTo(26.537453 * zoomfactor, 12.562281 * zoomfactor, 18.960646999999998 * zoomfactor, 18.011773 * zoomfactor, 18.118788 * zoomfactor, 21.826417 * zoomfactor);
        ctx.bezierCurveTo(17.276912 * zoomfactor, 25.641063 * zoomfactor, 14.190077999999998 * zoomfactor, 32.725403 * zoomfactor, 17.838158 * zoomfactor, 37.629947 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.725261 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(27.475328 * zoomfactor, 35.46019 * zoomfactor);
        ctx.lineTo(13.971905 * zoomfactor, 30.157371 * zoomfactor);
        ctx.bezierCurveTo(12.171451 * zoomfactor, 29.807735 * zoomfactor, 13.371755 * zoomfactor, 25.903459 * zoomfactor, 13.371755 * zoomfactor, 25.903459 * zoomfactor);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.transform(0.27729149 * zoomfactor, 0, 0, 0.2503972 * zoomfactor, 49.897982 * zoomfactor, -8.7326759 * zoomfactor);
        ctx.beginPath();
        ctx.moveTo(-59.6680223 * zoomfactor, 181.74757 * zoomfactor);
        ctx.bezierCurveTo(-59.6680223 * zoomfactor, 183.33216933272828 * zoomfactor, -61.04434898881358 * zoomfactor, 184.6167409 * zoomfactor, -62.742134 * zoomfactor, 184.6167409 * zoomfactor);
        ctx.bezierCurveTo(-64.43991901118642 * zoomfactor, 184.6167409 * zoomfactor, -65.8162457 * zoomfactor, 183.33216933272828 * zoomfactor, -65.8162457 * zoomfactor, 181.74757 * zoomfactor);
        ctx.bezierCurveTo(-65.8162457 * zoomfactor, 180.1629706672717 * zoomfactor, -64.43991901118642 * zoomfactor, 178.8783991 * zoomfactor, -62.742134 * zoomfactor, 178.8783991 * zoomfactor);
        ctx.bezierCurveTo(-61.04434898881358 * zoomfactor, 178.8783991 * zoomfactor, -59.6680223 * zoomfactor, 180.1629706672717 * zoomfactor, -59.6680223 * zoomfactor, 181.74757 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.864729 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(36.4924564 * zoomfactor, 36.436775 * zoomfactor);
        ctx.bezierCurveTo(36.4924564 * zoomfactor, 38.455609708451576 * zoomfactor, 34.484493170562274 * zoomfactor, 40.092198599999996 * zoomfactor, 32.007545 * zoomfactor, 40.092198599999996 * zoomfactor);
        ctx.bezierCurveTo(29.530596829437727 * zoomfactor, 40.092198599999996 * zoomfactor, 27.5226336 * zoomfactor, 38.455609708451576 * zoomfactor, 27.5226336 * zoomfactor, 36.436775 * zoomfactor);
        ctx.bezierCurveTo(27.5226336 * zoomfactor, 34.41794029154842 * zoomfactor, 29.530596829437727 * zoomfactor, 32.7813514 * zoomfactor, 32.007545 * zoomfactor, 32.7813514 * zoomfactor);
        ctx.bezierCurveTo(34.484493170562274 * zoomfactor, 32.7813514 * zoomfactor, 36.4924564 * zoomfactor, 34.41794029154842 * zoomfactor, 36.4924564 * zoomfactor, 36.436775 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.725261 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(52.575386 * zoomfactor, 35.46019 * zoomfactor);
        ctx.lineTo(66.07880800000001 * zoomfactor, 30.157370999999998 * zoomfactor);
        ctx.bezierCurveTo(67.879264 * zoomfactor, 29.807734999999997 * zoomfactor, 66.67896 * zoomfactor, 25.903458999999998 * zoomfactor, 66.67896 * zoomfactor, 25.903458999999998 * zoomfactor);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.864729 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(52.2148154 * zoomfactor, 36.334278 * zoomfactor);
        ctx.bezierCurveTo(52.2148154 * zoomfactor, 38.353112708451576 * zoomfactor, 50.20685217056227 * zoomfactor, 39.9897016 * zoomfactor, 47.729904 * zoomfactor, 39.9897016 * zoomfactor);
        ctx.bezierCurveTo(45.252955829437724 * zoomfactor, 39.9897016 * zoomfactor, 43.244992599999996 * zoomfactor, 38.353112708451576 * zoomfactor, 43.244992599999996 * zoomfactor, 36.334278 * zoomfactor);
        ctx.bezierCurveTo(43.244992599999996 * zoomfactor, 34.31544329154842 * zoomfactor, 45.252955829437724 * zoomfactor, 32.6788544 * zoomfactor, 47.729904 * zoomfactor, 32.6788544 * zoomfactor);
        ctx.bezierCurveTo(50.20685217056227 * zoomfactor, 32.6788544 * zoomfactor, 52.2148154 * zoomfactor, 34.31544329154842 * zoomfactor, 52.2148154 * zoomfactor, 36.334278 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(153.75616 * zoomfactor, 144.50685 * zoomfactor, 254.01888 * zoomfactor, 179.96059 * zoomfactor);
        g.addColorStop(0, "rgba(158, 143, 35, 1)");
        g.addColorStop(1, "rgba(137, 128, 68, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx8 = canvas.getContext("2d");
        ctx8.fillStyle = g;
        ctx8.save();
        ctx8.strokeStyle = "rgba(0,0,0,0)";
        ctx8.miterLimit = 4;
        ctx8.font = "";
        ctx8.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx8.beginPath();
        ctx8.moveTo(0, 0);
        ctx8.lineTo(3825, 0);
        ctx8.lineTo(3825, 2083);
        ctx8.lineTo(0, 2083);
        ctx8.closePath();
        ctx8.clip();
        ctx8.save();
        ctx8.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx8.transform(0.40010001 * zoomfactor, 0, 0, 0.32541199 * zoomfactor, -26.402098 * zoomfactor, -24.249331 * zoomfactor);
        ctx8.save();
        ctx8.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx8.beginPath();
        ctx8.moveTo(-10000, -10000);
        ctx8.lineTo(20000, -10000);
        ctx8.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx8.lineTo(20000, 20000);
        ctx8.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx8.lineTo(-10000, 20000);
        ctx8.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx8.lineTo(-10000, -10000);
        ctx8.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx8.closePath();
        ctx8.fill();
        ctx8.stroke();
        ctx8.restore();
        ctx8.restore();
        ctx8.restore();
        var p = ctx8.createPattern(ctx8.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 2.38603 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.globalAlpha = 0.97868217 * zoomfactor;
        ctx.beginPath();
        ctx.moveTo(39.205397 * zoomfactor, 19.703163 * zoomfactor);
        ctx.bezierCurveTo(39.205397 * zoomfactor, 19.703163 * zoomfactor, 44.189648999999996 * zoomfactor, 40.907834 * zoomfactor, 62.976499 * zoomfactor, 39.348653 * zoomfactor);
        ctx.bezierCurveTo(81.763347 * zoomfactor, 37.789501 * zoomfactor, 62.209691 * zoomfactor, 14.713828 * zoomfactor, 62.209691 * zoomfactor, 14.713828 * zoomfactor);
        ctx.bezierCurveTo(62.209691 * zoomfactor, 14.713828 * zoomfactor, 48.407119 * zoomfactor, 0.6813199799999996 * zoomfactor, 39.205397 * zoomfactor, 8.4771691 * zoomfactor);
        ctx.bezierCurveTo(30.003686 * zoomfactor, 16.272984 * zoomfactor, 39.205397 * zoomfactor, 19.703163 * zoomfactor, 39.205397 * zoomfactor, 19.703163 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.transform(0.27729149 * zoomfactor, 0, 0, 0.2503972 * zoomfactor, 65.008291 * zoomfactor, -8.5629351 * zoomfactor);
        ctx.beginPath();
        ctx.moveTo(-59.6680223 * zoomfactor, 181.74757 * zoomfactor);
        ctx.bezierCurveTo(-59.6680223 * zoomfactor, 183.33216933272828 * zoomfactor, -61.04434898881358 * zoomfactor, 184.6167409 * zoomfactor, -62.742134 * zoomfactor, 184.6167409 * zoomfactor);
        ctx.bezierCurveTo(-64.43991901118642 * zoomfactor, 184.6167409 * zoomfactor, -65.8162457 * zoomfactor, 183.33216933272828 * zoomfactor, -65.8162457 * zoomfactor, 181.74757 * zoomfactor);
        ctx.bezierCurveTo(-65.8162457 * zoomfactor, 180.1629706672717 * zoomfactor, -64.43991901118642 * zoomfactor, 178.8783991 * zoomfactor, -62.742134 * zoomfactor, 178.8783991 * zoomfactor);
        ctx.bezierCurveTo(-61.04434898881358 * zoomfactor, 178.8783991 * zoomfactor, -59.6680223 * zoomfactor, 180.1629706672717 * zoomfactor, -59.6680223 * zoomfactor, 181.74757 * zoomfactor);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(153.75616 * zoomfactor, 144.50685 * zoomfactor, 254.01888 * zoomfactor, 179.96059 * zoomfactor);
        g.addColorStop(0, "rgba(115, 104, 28, 1)");
        g.addColorStop(1, "rgba(184, 170, 77, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx9 = canvas.getContext("2d");
        ctx9.fillStyle = g;
        ctx9.save();
        ctx9.strokeStyle = "rgba(0,0,0,0)";
        ctx9.miterLimit = 4;
        ctx9.font = "";
        ctx9.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx9.beginPath();
        ctx9.moveTo(0, 0);
        ctx9.lineTo(3825, 0);
        ctx9.lineTo(3825, 2083);
        ctx9.lineTo(0, 2083);
        ctx9.closePath();
        ctx9.clip();
        ctx9.save();
        ctx9.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx9.transform(-0.40010001 * zoomfactor, 0, 0, 0.32541199 * zoomfactor, 109.12587 * zoomfactor, -25.768659 * zoomfactor);
        ctx9.save();
        ctx9.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx9.beginPath();
        ctx9.moveTo(-10000, -10000);
        ctx9.lineTo(20000, -10000);
        ctx9.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx9.lineTo(20000, 20000);
        ctx9.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx9.lineTo(-10000, 20000);
        ctx9.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx9.lineTo(-10000, -10000);
        ctx9.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx9.closePath();
        ctx9.fill();
        ctx9.stroke();
        ctx9.restore();
        ctx9.restore();
        ctx9.restore();
        var p = ctx9.createPattern(ctx9.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 2.38603 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.globalAlpha = 0.98062016 * zoomfactor;
        ctx.beginPath();
        ctx.moveTo(43.518382 * zoomfactor, 18.183835 * zoomfactor);
        ctx.bezierCurveTo(43.518382 * zoomfactor, 18.183835 * zoomfactor, 38.534130000000005 * zoomfactor, 39.388506 * zoomfactor, 19.747280000000003 * zoomfactor, 37.829325 * zoomfactor);
        ctx.bezierCurveTo(0.9604341600000019 * zoomfactor, 36.270171999999995 * zoomfactor, 20.514089000000002 * zoomfactor, 13.194498999999997 * zoomfactor, 20.514089000000002 * zoomfactor, 13.194498999999997 * zoomfactor);
        ctx.bezierCurveTo(20.514089000000002 * zoomfactor, 13.194498999999997 * zoomfactor, 34.316658000000004 * zoomfactor, -0.8380088300000033 * zoomfactor, 43.518382 * zoomfactor, 6.9578418999999965 * zoomfactor);
        ctx.bezierCurveTo(52.720093000000006 * zoomfactor, 14.753656999999997 * zoomfactor, 43.518382 * zoomfactor, 18.183834999999995 * zoomfactor, 43.518382 * zoomfactor, 18.183834999999995 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.943384 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(36.837702 * zoomfactor, 35.635007 * zoomfactor);
        ctx.bezierCurveTo(39.103968 * zoomfactor, 35.060778 * zoomfactor, 41.332118 * zoomfactor, 34.81967 * zoomfactor, 43.439373 * zoomfactor, 35.635007 * zoomfactor);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#4e0c0c";
        ctx.fillStyle = "rgba(78, 12, 12, 1)";
        ctx.strokeStyle = "#673e00";
        ctx.strokeStyle = "rgba(103, 62, 0, 1)";
        ctx.lineWidth = 0.566571 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(33.58457 * zoomfactor, 47.239851 * zoomfactor);
        ctx.bezierCurveTo(33.58457 * zoomfactor, 47.239851 * zoomfactor, 40.788056 * zoomfactor, 40.15258 * zoomfactor, 48.839011 * zoomfactor, 47.322261000000005 * zoomfactor);
        ctx.bezierCurveTo(56.889967999999996 * zoomfactor, 54.491939 * zoomfactor, 26.063281 * zoomfactor, 54.656760000000006 * zoomfactor, 33.58457 * zoomfactor, 47.239851 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.strokeStyle = "#ffffff";
        ctx.strokeStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.288559 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(34.819707 * zoomfactor, 46.802702 * zoomfactor);
        ctx.lineTo(47.055806 * zoomfactor, 46.396863 * zoomfactor);
        ctx.bezierCurveTo(46.035867 * zoomfactor, 45.535526 * zoomfactor, 40.3212 * zoomfactor, 42.223588 * zoomfactor, 34.819707 * zoomfactor, 46.802702 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(39.692448 * zoomfactor, 62.655937 * zoomfactor, 0, 39.692448 * zoomfactor, 62.655937 * zoomfactor, 3.5543562 * zoomfactor);
        g.addColorStop(0, "rgba(150, 43, 43, 0.49870801)");
        g.addColorStop(1, "rgba(175, 46, 44, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 3825;
        canvas.height = 2083;
        var ctx10 = canvas.getContext("2d");
        ctx10.fillStyle = g;
        ctx10.save();
        ctx10.strokeStyle = "rgba(0,0,0,0)";
        ctx10.miterLimit = 4;
        ctx10.font = "";
        ctx10.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx10.beginPath();
        ctx10.moveTo(0, 0);
        ctx10.lineTo(3825, 0);
        ctx10.lineTo(3825, 2083);
        ctx10.lineTo(0, 2083);
        ctx10.closePath();
        ctx10.clip();
        ctx10.save();
        ctx10.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx10.transform(0.84322089 * zoomfactor, 0.22696359 * zoomfactor, -0.08416647 * zoomfactor, 0.29480333 * zoomfactor, 13.443549 * zoomfactor, 24.034628 * zoomfactor);
        ctx10.save();
        ctx10.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx10.beginPath();
        ctx10.moveTo(-10000, -10000);
        ctx10.lineTo(20000, -10000);
        ctx10.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx10.lineTo(20000, 20000);
        ctx10.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx10.lineTo(-10000, 20000);
        ctx10.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx10.lineTo(-10000, -10000);
        ctx10.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx10.closePath();
        ctx10.fill();
        ctx10.stroke();
        ctx10.restore();
        ctx10.restore();
        ctx10.restore();
        var p = ctx10.createPattern(ctx10.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.288559 * zoomfactor;
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(37.967694 * zoomfactor, 52.222742 * zoomfactor);
        ctx.bezierCurveTo(37.967694 * zoomfactor, 52.222742 * zoomfactor, 36.962157000000005 * zoomfactor, 49.984641999999994 * zoomfactor, 39.381077000000005 * zoomfactor, 50.726333 * zoomfactor);
        ctx.bezierCurveTo(41.79999600000001 * zoomfactor, 51.468022999999995 * zoomfactor, 42.748175 * zoomfactor, 51.126313999999994 * zoomfactor, 42.748175 * zoomfactor, 51.126313999999994 * zoomfactor);
        ctx.bezierCurveTo(42.748175 * zoomfactor, 51.126313999999994 * zoomfactor, 46.335919000000004 * zoomfactor, 49.76752799999999 * zoomfactor, 44.636627000000004 * zoomfactor, 52.32126099999999 * zoomfactor);
        ctx.bezierCurveTo(42.744584 * zoomfactor, 52.48240599999999 * zoomfactor, 40.879164 * zoomfactor, 52.67072199999999 * zoomfactor, 37.967694 * zoomfactor, 52.22274099999999 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#af835c";
        ctx.fillStyle = "rgba(175, 131, 92, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.581996 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(26.0726279 * zoomfactor, 71.00956 * zoomfactor);
        ctx.bezierCurveTo(26.0726279 * zoomfactor, 73.04243246130888 * zoomfactor, 24.390326251664227 * zoomfactor, 74.6904012 * zoomfactor, 22.315102 * zoomfactor, 74.6904012 * zoomfactor);
        ctx.bezierCurveTo(20.239877748335772 * zoomfactor, 74.6904012 * zoomfactor, 18.5575761 * zoomfactor, 73.04243246130888 * zoomfactor, 18.5575761 * zoomfactor, 71.00956 * zoomfactor);
        ctx.bezierCurveTo(18.5575761 * zoomfactor, 68.97668753869111 * zoomfactor, 20.239877748335772 * zoomfactor, 67.32871879999999 * zoomfactor, 22.315102 * zoomfactor, 67.32871879999999 * zoomfactor);
        ctx.bezierCurveTo(24.390326251664227 * zoomfactor, 67.32871879999999 * zoomfactor, 26.0726279 * zoomfactor, 68.97668753869111 * zoomfactor, 26.0726279 * zoomfactor, 71.00956 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#af835c";
        ctx.fillStyle = "rgba(175, 131, 92, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.581996 * zoomfactor;
        ctx.miterLimit = "4";
        ctx.font = "   15px HelveticaNeue,Helvetica,Arial,sans-serif";
        ctx.beginPath();
        ctx.moveTo(62.650988899999994 * zoomfactor, 69.935982 * zoomfactor);
        ctx.bezierCurveTo(62.650988899999994 * zoomfactor, 71.96885446130888 * zoomfactor, 60.96868725166422 * zoomfactor, 73.6168232 * zoomfactor, 58.893463 * zoomfactor, 73.6168232 * zoomfactor);
        ctx.bezierCurveTo(56.81823874833577 * zoomfactor, 73.6168232 * zoomfactor, 55.1359371 * zoomfactor, 71.96885446130888 * zoomfactor, 55.1359371 * zoomfactor, 69.935982 * zoomfactor);
        ctx.bezierCurveTo(55.1359371 * zoomfactor, 67.90310953869111 * zoomfactor, 56.81823874833577 * zoomfactor, 66.25514079999999 * zoomfactor, 58.893463 * zoomfactor, 66.25514079999999 * zoomfactor);
        ctx.bezierCurveTo(60.96868725166422 * zoomfactor, 66.25514079999999 * zoomfactor, 62.650988899999994 * zoomfactor, 67.90310953869111 * zoomfactor, 62.650988899999994 * zoomfactor, 69.935982 * zoomfactor);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.restore();
        ctx.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    en_mueller: function() {
        const patternCanvas = document.createElement('canvas');
        const ctx = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        ctx.save();
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.miterLimit = 4;
        ctx.font = "15px / 21.4286px ''";
        ctx.font = "   15px ''";
        ctx.scale(0.2645833333333333, 0.2645833333333333);
        ctx.translate(2.842170943040401e-14, 0);
        ctx.scale(3.779527559055118, 3.779527559055118);
        ctx.save();
        ctx.restore();
        ctx.save();
        ctx.font = "   15px ''";
        ctx.save();
        var g = ctx.createLinearGradient(22.83931, 88.717171, 36.005447, 100.71696);
        g.addColorStop(0, "rgba(159, 116, 76, 0.99778801)");
        g.addColorStop(1, "rgba(199, 153, 24, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx1 = canvas.getContext("2d");
        ctx1.fillStyle = g;
        ctx1.save();
        ctx1.strokeStyle = "rgba(0,0,0,0)";
        ctx1.miterLimit = 4;
        ctx1.font = "";
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(0, 0);
        ctx1.lineTo(1864, 0);
        ctx1.lineTo(1864, 939);
        ctx1.lineTo(0, 939);
        ctx1.closePath();
        ctx1.clip();
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.transform(0.84832894, 0, 0, 0.95168092, 72.577748, -60.873619);
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(-10000, -10000);
        ctx1.lineTo(20000, -10000);
        ctx1.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx1.lineTo(20000, 20000);
        ctx1.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx1.lineTo(-10000, 20000);
        ctx1.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx1.lineTo(-10000, -10000);
        ctx1.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx1.closePath();
        ctx1.fill();
        ctx1.stroke();
        ctx1.restore();
        ctx1.restore();
        ctx1.restore();
        var p = ctx1.createPattern(ctx1.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "#894200";
        ctx.strokeStyle = "rgba(137, 66, 0, 1)";
        ctx.lineWidth = 0.49228;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.transform(0.52196496, 0.85296693, -0.94140093, 0.33728963, 0, 0);
        ctx.beginPath();
        ctx.moveTo(102.675667, 24.827497);
        ctx.bezierCurveTo(102.675667, 29.298038864320812, 100.08052942848872, 32.9221291, 96.879265, 32.9221291);
        ctx.bezierCurveTo(93.67800057151129, 32.9221291, 91.082863, 29.298038864320812, 91.082863, 24.827497);
        ctx.bezierCurveTo(91.082863, 20.35695513567919, 93.67800057151129, 16.732864900000003, 96.879265, 16.732864900000003);
        ctx.bezierCurveTo(100.08052942848872, 16.732864900000003, 102.675667, 20.35695513567919, 102.675667, 24.827497);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(37.909931, 90.378334, 49.265221, 92.363983);
        g.addColorStop(0, "rgba(176, 177, 116, 1)");
        g.addColorStop(1, "rgba(64, 65, 0, 0.88372093)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx2 = canvas.getContext("2d");
        ctx2.fillStyle = g;
        ctx2.save();
        ctx2.strokeStyle = "rgba(0,0,0,0)";
        ctx2.miterLimit = 4;
        ctx2.font = "";
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(0, 0);
        ctx2.lineTo(1864, 0);
        ctx2.lineTo(1864, 939);
        ctx2.lineTo(0, 939);
        ctx2.closePath();
        ctx2.clip();
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.transform(2.2808714, 0, 0, 1.7581252, -53.410919, -72.098349);
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(-10000, -10000);
        ctx2.lineTo(20000, -10000);
        ctx2.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx2.lineTo(20000, 20000);
        ctx2.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx2.lineTo(-10000, 20000);
        ctx2.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx2.lineTo(-10000, -10000);
        ctx2.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx2.closePath();
        ctx2.fill();
        ctx2.stroke();
        ctx2.restore();
        ctx2.restore();
        ctx2.restore();
        var p = ctx2.createPattern(ctx2.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.529831;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(42.486582, 87.390309);
        ctx.bezierCurveTo(52.589357, 91.822579, 60.394575, 89.22713, 60.394575, 89.22713);
        ctx.lineTo(51.635803, 100.96656);
        ctx.bezierCurveTo(51.635803, 100.96656, 50.115653, 96.284844, 40.569214, 89.271136);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(22.83931, 88.717171, 36.005447, 100.71696);
        g.addColorStop(0, "rgba(159, 116, 76, 0.99778801)");
        g.addColorStop(1, "rgba(199, 153, 24, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx3 = canvas.getContext("2d");
        ctx3.fillStyle = g;
        ctx3.save();
        ctx3.strokeStyle = "rgba(0,0,0,0)";
        ctx3.miterLimit = 4;
        ctx3.font = "";
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(0, 0);
        ctx3.lineTo(1864, 0);
        ctx3.lineTo(1864, 939);
        ctx3.lineTo(0, 939);
        ctx3.closePath();
        ctx3.clip();
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.transform(0.84832894, 0, 0, 0.95168092, 81.298692, -79.971876);
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(-10000, -10000);
        ctx3.lineTo(20000, -10000);
        ctx3.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx3.lineTo(20000, 20000);
        ctx3.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx3.lineTo(-10000, 20000);
        ctx3.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx3.lineTo(-10000, -10000);
        ctx3.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx3.closePath();
        ctx3.fill();
        ctx3.stroke();
        ctx3.restore();
        ctx3.restore();
        ctx3.restore();
        var p = ctx3.createPattern(ctx3.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "#894200";
        ctx.strokeStyle = "rgba(137, 66, 0, 1)";
        ctx.lineWidth = 0.49228;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.transform(0.52196496, 0.85296693, -0.94140093, 0.33728963, 0, 0);
        ctx.beginPath();
        ctx.moveTo(111.396612, 5.7292409);
        ctx.bezierCurveTo(111.396612, 10.199782764320812, 108.80147442848872, 13.823872999999999, 105.60021, 13.823872999999999);
        ctx.bezierCurveTo(102.39894557151129, 13.823872999999999, 99.803808, 10.199782764320812, 99.803808, 5.7292409);
        ctx.bezierCurveTo(99.803808, 1.2586990356791885, 102.39894557151129, -2.3653912000000004, 105.60021, -2.3653912000000004);
        ctx.bezierCurveTo(108.80147442848872, -2.3653912000000004, 111.396612, 1.2586990356791885, 111.396612, 5.7292409);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#6b4e33";
        ctx.fillStyle = "rgba(107, 78, 51, 0.997788)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.264502;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(22.112129, 73.31948);
        ctx.lineTo(54.178729000000004, 77.016577);
        ctx.lineTo(55.016559, 86.309067);
        ctx.bezierCurveTo(55.016559, 86.309067, 57.172924, 89.98532, 56.093137, 91.30142599999999);
        ctx.bezierCurveTo(54.059886999999996, 93.77966599999999, 48.458656, 93.670019, 46.477574, 91.14988199999999);
        ctx.bezierCurveTo(45.517357999999994, 89.92839, 47.506698, 86.60373799999999, 47.506698, 86.60373799999999);
        ctx.lineTo(48.35545, 80.131346);
        ctx.lineTo(31.409166999999997, 81.175311);
        ctx.lineTo(32.603970999999994, 87.07515099999999);
        ctx.bezierCurveTo(32.603970999999994, 87.07515099999999, 34.672777999999994, 89.530504, 33.66773799999999, 90.860052);
        ctx.bezierCurveTo(31.67361199999999, 93.49804499999999, 25.670013999999995, 93.250603, 23.751688999999992, 90.556985);
        ctx.bezierCurveTo(22.83795199999999, 89.27396, 25.070379999999993, 86.938608, 25.070379999999993, 86.938608);
        ctx.lineTo(27.823667999999994, 80.369659);
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(43.163258, 95.098, 26.125128, 40.071152);
        g.addColorStop(0, "rgba(112, 91, 74, 1)");
        g.addColorStop(1, "rgba(73, 132, 63, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx4 = canvas.getContext("2d");
        ctx4.fillStyle = g;
        ctx4.save();
        ctx4.strokeStyle = "rgba(0,0,0,0)";
        ctx4.miterLimit = 4;
        ctx4.font = "";
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(0, 0);
        ctx4.lineTo(1864, 0);
        ctx4.lineTo(1864, 939);
        ctx4.lineTo(0, 939);
        ctx4.closePath();
        ctx4.clip();
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.transform(1, 0, 0, 1.1414141, 0, -9.6117378);
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(-10000, -10000);
        ctx4.lineTo(20000, -10000);
        ctx4.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx4.lineTo(20000, 20000);
        ctx4.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx4.lineTo(-10000, 20000);
        ctx4.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx4.lineTo(-10000, -10000);
        ctx4.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx4.closePath();
        ctx4.fill();
        ctx4.stroke();
        ctx4.restore();
        ctx4.restore();
        ctx4.restore();
        var p = ctx4.createPattern(ctx4.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.282672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(35.716966, 38.070797);
        ctx.bezierCurveTo(35.716966, 38.070797, 23.924374999999998, 75.754693, 16.659504, 79.991095);
        ctx.bezierCurveTo(3.642567999999999, 87.581729, 80.528194, 85.729057, 65.123514, 80.85543200000001);
        ctx.bezierCurveTo(52.008839, 76.706303, 47.454343, 38.214855, 47.454343, 38.214855);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(54.116215, 52.650322, 57.625629, 61.931572);
        g.addColorStop(0, "rgba(169, 92, 177, 0.97647101)");
        g.addColorStop(1, "rgba(73, 132, 63, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx5 = canvas.getContext("2d");
        ctx5.fillStyle = g;
        ctx5.save();
        ctx5.strokeStyle = "rgba(0,0,0,0)";
        ctx5.miterLimit = 4;
        ctx5.font = "";
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(0, 0);
        ctx5.lineTo(1864, 0);
        ctx5.lineTo(1864, 939);
        ctx5.lineTo(0, 939);
        ctx5.closePath();
        ctx5.clip();
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.transform(1.1543338, -0.22505088, -0.26662354, -0.97434701, 5.586192, 125.7982);
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(-10000, -10000);
        ctx5.lineTo(20000, -10000);
        ctx5.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx5.lineTo(20000, 20000);
        ctx5.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx5.lineTo(-10000, 20000);
        ctx5.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx5.lineTo(-10000, -10000);
        ctx5.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx5.closePath();
        ctx5.fill();
        ctx5.stroke();
        ctx5.restore();
        ctx5.restore();
        ctx5.restore();
        var p = ctx5.createPattern(ctx5.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.287986;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(34.434352, 74.219436);
        ctx.bezierCurveTo(28.502925999999995, 73.53633500000001, 46.629726, 64.518895, 50.082108999999996, 57.353128);
        ctx.bezierCurveTo(52.126985999999995, 53.108781, 42.178653, 44.450390999999996, 47.16373599999999, 42.588665);
        ctx.bezierCurveTo(53.28626899999999, 40.302147, 58.620661999999996, 50.296535999999996, 57.69217199999999, 57.884105);
        ctx.bezierCurveTo(56.96186899999999, 63.852097, 39.88250799999999, 74.846881, 34.43435199999999, 74.219436);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(57.596684, 51.222439, 62.801712, 68.803268);
        g.addColorStop(0, "rgba(169, 92, 177, 0.97647101)");
        g.addColorStop(1, "rgba(73, 132, 63, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx6 = canvas.getContext("2d");
        ctx6.fillStyle = g;
        ctx6.save();
        ctx6.strokeStyle = "rgba(0,0,0,0)";
        ctx6.miterLimit = 4;
        ctx6.font = "";
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(0, 0);
        ctx6.lineTo(1864, 0);
        ctx6.lineTo(1864, 939);
        ctx6.lineTo(0, 939);
        ctx6.closePath();
        ctx6.clip();
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.transform(-1.0775699, 0, 0, -1, 89.280789, 114.36026);
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(-10000, -10000);
        ctx6.lineTo(20000, -10000);
        ctx6.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx6.lineTo(20000, 20000);
        ctx6.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx6.lineTo(-10000, 20000);
        ctx6.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx6.lineTo(-10000, -10000);
        ctx6.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx6.closePath();
        ctx6.fill();
        ctx6.stroke();
        ctx6.restore();
        ctx6.restore();
        ctx6.restore();
        var p = ctx6.createPattern(ctx6.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.274653;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(27.038439, 71.442032);
        ctx.bezierCurveTo(31.028717, 69.092203, 23.774349, 71.065518, 29.451821, 55.589962);
        ctx.bezierCurveTo(31.033848, 51.277699, 37.124328999999996, 42.050376, 32.254967, 41.183377);
        ctx.bezierCurveTo(26.274559, 40.118554, 18.633922, 54.530493, 21.296815000000002, 61.747042);
        ctx.bezierCurveTo(23.391309000000003, 67.423208, 22.815608, 73.928809, 27.038439000000004, 71.442032);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#bc9573";
        ctx.fillStyle = "rgba(188, 149, 115, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.682796;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(61.059889, 28.586264);
        ctx.bezierCurveTo(61.059889, 37.84125467200875, 51.94430621833892, 45.343907, 40.699665, 45.343907);
        ctx.bezierCurveTo(29.455023781661083, 45.343907, 20.339441000000004, 37.84125467200875, 20.339441000000004, 28.586264);
        ctx.bezierCurveTo(20.339441000000004, 19.331273327991248, 29.455023781661083, 11.828620999999998, 40.699665, 11.828620999999998);
        ctx.bezierCurveTo(51.94430621833892, 11.828620999999998, 61.059889, 19.331273327991248, 61.059889, 28.586264);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.04396;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(35.5747675, 30.495007);
        ctx.bezierCurveTo(35.5747675, 32.37038541331218, 33.752311457976354, 33.89068, 31.504198, 33.89068);
        ctx.bezierCurveTo(29.25608454202364, 33.89068, 27.433628499999998, 32.37038541331218, 27.433628499999998, 30.495007);
        ctx.bezierCurveTo(27.433628499999998, 28.61962858668782, 29.25608454202364, 27.099334000000002, 31.504198, 27.099334000000002);
        ctx.bezierCurveTo(33.752311457976354, 27.099334000000002, 35.5747675, 28.61962858668782, 35.5747675, 30.495007);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.00345;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(50.8982715, 30.2696);
        ctx.bezierCurveTo(50.8982715, 32.00228178584617, 49.07581545797636, 33.406897900000004, 46.827702, 33.406897900000004);
        ctx.bezierCurveTo(44.57958854202364, 33.406897900000004, 42.757132500000004, 32.00228178584617, 42.757132500000004, 30.2696);
        ctx.bezierCurveTo(42.757132500000004, 28.536918214153825, 44.57958854202364, 27.1323021, 46.827702, 27.1323021);
        ctx.bezierCurveTo(49.07581545797636, 27.1323021, 50.8982715, 28.536918214153825, 50.8982715, 30.2696);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883, 181.14001, 0, -63.142883, 181.14001, 5.2169404);
        g.addColorStop(0, "rgba(169, 92, 177, 0.97647101)");
        g.addColorStop(1, "rgba(73, 132, 63, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx7 = canvas.getContext("2d");
        ctx7.fillStyle = g;
        ctx7.save();
        ctx7.strokeStyle = "rgba(0,0,0,0)";
        ctx7.miterLimit = 4;
        ctx7.font = "";
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(0, 0);
        ctx7.lineTo(1864, 0);
        ctx7.lineTo(1864, 939);
        ctx7.lineTo(0, 939);
        ctx7.closePath();
        ctx7.clip();
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.transform(0.45002833, 2.0034692, -0.92148322, 0.20698773, 313.35834, 272.19747);
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(-10000, -10000);
        ctx7.lineTo(20000, -10000);
        ctx7.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx7.lineTo(20000, 20000);
        ctx7.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx7.lineTo(-10000, 20000);
        ctx7.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx7.lineTo(-10000, -10000);
        ctx7.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx7.closePath();
        ctx7.fill();
        ctx7.stroke();
        ctx7.restore();
        ctx7.restore();
        ctx7.restore();
        var p = ctx7.createPattern(ctx7.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.42328593, 0, 0, 0.39326515, -19.041726, -41.286554);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883, 181.14001, 0, -63.142883, 181.14001, 5.2169404);
        g.addColorStop(0, "rgba(169, 92, 177, 0.97647101)");
        g.addColorStop(1, "rgba(73, 132, 63, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx8 = canvas.getContext("2d");
        ctx8.fillStyle = g;
        ctx8.save();
        ctx8.strokeStyle = "rgba(0,0,0,0)";
        ctx8.miterLimit = 4;
        ctx8.font = "";
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(0, 0);
        ctx8.lineTo(1864, 0);
        ctx8.lineTo(1864, 939);
        ctx8.lineTo(0, 939);
        ctx8.closePath();
        ctx8.clip();
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.transform(0.45002833, 2.0034692, -0.92148322, 0.20698773, 313.35834, 272.19747);
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(-10000, -10000);
        ctx8.lineTo(20000, -10000);
        ctx8.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx8.lineTo(20000, 20000);
        ctx8.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx8.lineTo(-10000, 20000);
        ctx8.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx8.lineTo(-10000, -10000);
        ctx8.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx8.closePath();
        ctx8.fill();
        ctx8.stroke();
        ctx8.restore();
        ctx8.restore();
        ctx8.restore();
        var p = ctx8.createPattern(ctx8.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.42328593, 0, 0, 0.39326515, -3.6775783, -41.627731);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ca9e42";
        ctx.fillStyle = "rgba(202, 158, 66, 0)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 2.03722;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(16.119036, 30.484736);
        ctx.bezierCurveTo(16.119036, 30.484736, 53.270121, 17.684834000000002, 41.585516, 7.212189800000001);
        ctx.bezierCurveTo(29.900890999999998, -3.2604492999999994, 25.406816, 3.721309600000001, 25.406816, 3.721309600000001);
        ctx.bezierCurveTo(25.406816, 3.721309600000001, 17.317458, 9.5394433, 16.418649, 13.612138000000002);
        ctx.bezierCurveTo(15.519822999999999, 17.684834000000002, 12.224172999999999, 25.248411, 16.119035999999998, 30.484736);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.32436317, 0, 0, 0.30883872, 50.951575, -25.515315);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.32436317, 0, 0, 0.30883872, 66.117152, -25.754849);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#4e0c0c";
        ctx.fillStyle = "rgba(78, 12, 12, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.238992;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(35.716966, 38.070797);
        ctx.bezierCurveTo(37.70031, 38.809315999999995, 44.243854999999996, 37.725066, 46.838868, 37.956468);
        ctx.bezierCurveTo(55.059720999999996, 38.689538, 31.59086, 45.606076, 35.716966, 38.070797);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667114, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx9 = canvas.getContext("2d");
        ctx9.fillStyle = g;
        ctx9.save();
        ctx9.strokeStyle = "rgba(0,0,0,0)";
        ctx9.miterLimit = 4;
        ctx9.font = "";
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(0, 0);
        ctx9.lineTo(1864, 0);
        ctx9.lineTo(1864, 939);
        ctx9.lineTo(0, 939);
        ctx9.closePath();
        ctx9.clip();
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.transform(-1.0569043, 0.110427, -0.20515983, 0.77216543, 88.457868, -4.7368736);
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(-10000, -10000);
        ctx9.lineTo(20000, -10000);
        ctx9.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx9.lineTo(20000, 20000);
        ctx9.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx9.lineTo(-10000, 20000);
        ctx9.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx9.lineTo(-10000, -10000);
        ctx9.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx9.closePath();
        ctx9.fill();
        ctx9.stroke();
        ctx9.restore();
        ctx9.restore();
        ctx9.restore();
        var p = ctx9.createPattern(ctx9.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.979833;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(36.002565, 27.274983);
        ctx.bezierCurveTo(34.676533, 24.163373, 26.789412, 26.148029, 25.359686, 27.79764);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667114, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx10 = canvas.getContext("2d");
        ctx10.fillStyle = g;
        ctx10.save();
        ctx10.strokeStyle = "rgba(0,0,0,0)";
        ctx10.miterLimit = 4;
        ctx10.font = "";
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(0, 0);
        ctx10.lineTo(1864, 0);
        ctx10.lineTo(1864, 939);
        ctx10.lineTo(0, 939);
        ctx10.closePath();
        ctx10.clip();
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.transform(1.0569043, 0.110427, 0.20515983, 0.77216543, -10.729241, -5.0890019);
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(-10000, -10000);
        ctx10.lineTo(20000, -10000);
        ctx10.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx10.lineTo(20000, 20000);
        ctx10.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx10.lineTo(-10000, 20000);
        ctx10.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx10.lineTo(-10000, -10000);
        ctx10.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx10.closePath();
        ctx10.fill();
        ctx10.stroke();
        ctx10.restore();
        ctx10.restore();
        ctx10.restore();
        var p = ctx10.createPattern(ctx10.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.979833;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(41.72606, 26.922855);
        ctx.bezierCurveTo(43.052091999999995, 23.811245, 50.939212999999995, 25.795900999999997, 52.368939, 27.445511999999997);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(20.748323, 23.625956, 61.498765, 23.625956);
        g.addColorStop(0, "rgba(255, 48, 48, 1)");
        g.addColorStop(1, "rgba(102, 255, 48, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx11 = canvas.getContext("2d");
        ctx11.fillStyle = g;
        ctx11.save();
        ctx11.strokeStyle = "rgba(0,0,0,0)";
        ctx11.miterLimit = 4;
        ctx11.font = "";
        ctx11.font = "   15px ''";
        ctx11.beginPath();
        ctx11.moveTo(0, 0);
        ctx11.lineTo(1864, 0);
        ctx11.lineTo(1864, 939);
        ctx11.lineTo(0, 939);
        ctx11.closePath();
        ctx11.clip();
        ctx11.save();
        ctx11.font = "   15px ''";
        ctx11.translate(0, -2.1166667);
        ctx11.save();
        ctx11.font = "   15px ''";
        ctx11.beginPath();
        ctx11.moveTo(-10000, -10000);
        ctx11.lineTo(20000, -10000);
        ctx11.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx11.lineTo(20000, 20000);
        ctx11.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx11.lineTo(-10000, 20000);
        ctx11.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx11.lineTo(-10000, -10000);
        ctx11.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx11.closePath();
        ctx11.fill();
        ctx11.stroke();
        ctx11.restore();
        ctx11.restore();
        ctx11.restore();
        var p = ctx11.createPattern(ctx11.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.0760901;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(23.293353, 37.255342);
        ctx.bezierCurveTo(23.293353, 37.255342, 19.09135, 18.358794, 41.11598, 17.714907999999998);
        ctx.bezierCurveTo(58.663825, 17.2019, 59.145609, 38.470901999999995, 56.580377999999996, 38.52914199999999);
        ctx.bezierCurveTo(60.227121, 38.66265099999999, 64.17862199999999, 23.543801999999992, 59.041163999999995, 15.681870999999994);
        ctx.bezierCurveTo(54.313331, 8.4467959, 56.323962, 4.3685607, 45.886296, 4.4912479);
        ctx.bezierCurveTo(33.589549, 4.6357873, 36.421759, 7.2808287, 25.914708, 15.856205);
        ctx.bezierCurveTo(16.092913, 23.872308, 23.293353, 37.255342, 23.293353, 37.255342);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.264583;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-70.171849, -44.677761);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(20.204245, 20.647893, 66.369842, 20.647893);
        g.addColorStop(0, "rgba(46, 254, 0, 1)");
        g.addColorStop(1, "rgba(0, 42, 254, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx12 = canvas.getContext("2d");
        ctx12.fillStyle = g;
        ctx12.save();
        ctx12.strokeStyle = "rgba(0,0,0,0)";
        ctx12.miterLimit = 4;
        ctx12.font = "";
        ctx12.font = "   15px ''";
        ctx12.beginPath();
        ctx12.moveTo(0, 0);
        ctx12.lineTo(1864, 0);
        ctx12.lineTo(1864, 939);
        ctx12.lineTo(0, 939);
        ctx12.closePath();
        ctx12.clip();
        ctx12.save();
        ctx12.font = "   15px ''";
        ctx12.translate(0, -2.1166667);
        ctx12.save();
        ctx12.font = "   15px ''";
        ctx12.beginPath();
        ctx12.moveTo(-10000, -10000);
        ctx12.lineTo(20000, -10000);
        ctx12.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx12.lineTo(20000, 20000);
        ctx12.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx12.lineTo(-10000, 20000);
        ctx12.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx12.lineTo(-10000, -10000);
        ctx12.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx12.closePath();
        ctx12.fill();
        ctx12.stroke();
        ctx12.restore();
        ctx12.restore();
        ctx12.restore();
        var p = ctx12.createPattern(ctx12.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.264583;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(22.53249, 35.787893);
        ctx.bezierCurveTo(20.304805, 31.913771, 18.150064, 10.698073, 42.315624, 9.0648196);
        ctx.bezierCurveTo(57.533841, 8.0362812, 65.599968, 19.800338, 59.212591, 35.722275);
        ctx.lineTo(59.212591, 35.722275);
        ctx.bezierCurveTo(70.184993, 20.569161, 69.671696, 2.0394981, 49.708231, 1.2745591);
        ctx.bezierCurveTo(28.597647, 2.0213436, 14.390173, 26.999973, 22.53249, 35.787893);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(39.692448, 62.655937, 0, 39.692448, 62.655937, 3.5543561);
        g.addColorStop(0, "rgba(150, 43, 43, 0.49870801)");
        g.addColorStop(1, "rgba(175, 46, 44, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx13 = canvas.getContext("2d");
        ctx13.fillStyle = g;
        ctx13.save();
        ctx13.strokeStyle = "rgba(0,0,0,0)";
        ctx13.miterLimit = 4;
        ctx13.font = "";
        ctx13.font = "   15px ''";
        ctx13.beginPath();
        ctx13.moveTo(0, 0);
        ctx13.lineTo(1864, 0);
        ctx13.lineTo(1864, 939);
        ctx13.lineTo(0, 939);
        ctx13.closePath();
        ctx13.clip();
        ctx13.save();
        ctx13.font = "   15px ''";
        ctx13.transform(0.86200412, 0.13958091, -0.05359088, 0.30186258, 10.03731, 15.73);
        ctx13.save();
        ctx13.font = "   15px ''";
        ctx13.beginPath();
        ctx13.moveTo(-10000, -10000);
        ctx13.lineTo(20000, -10000);
        ctx13.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx13.lineTo(20000, 20000);
        ctx13.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx13.lineTo(-10000, 20000);
        ctx13.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx13.lineTo(-10000, -10000);
        ctx13.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx13.closePath();
        ctx13.fill();
        ctx13.stroke();
        ctx13.restore();
        ctx13.restore();
        ctx13.restore();
        var p = ctx13.createPattern(ctx13.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.288559;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(37.147046, 41.408629);
        ctx.bezierCurveTo(37.147046, 41.408629, 36.085328000000004, 39.140018, 38.567392000000005, 39.630562999999995);
        ctx.bezierCurveTo(41.049456000000006, 40.121106999999995, 41.957739000000004, 39.684262999999994, 41.957739000000004, 39.684262999999994);
        ctx.bezierCurveTo(41.957739000000004, 39.684262999999994, 45.37664, 38.12203099999999, 43.94729100000001, 40.836088999999994);
        ctx.bezierCurveTo(42.02383900000001, 41.349321999999994, 39.25402900000001, 41.90243399999999, 37.147046, 41.40862899999999);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(20.746331, 22.736883, 64.911015, 22.736883);
        g.addColorStop(0, "rgba(0, 69, 254, 1)");
        g.addColorStop(1, "rgba(254, 0, 239, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx14 = canvas.getContext("2d");
        ctx14.fillStyle = g;
        ctx14.save();
        ctx14.strokeStyle = "rgba(0,0,0,0)";
        ctx14.miterLimit = 4;
        ctx14.font = "";
        ctx14.font = "   15px ''";
        ctx14.beginPath();
        ctx14.moveTo(0, 0);
        ctx14.lineTo(1864, 0);
        ctx14.lineTo(1864, 939);
        ctx14.lineTo(0, 939);
        ctx14.closePath();
        ctx14.clip();
        ctx14.save();
        ctx14.font = "   15px ''";
        ctx14.translate(0, -2.1166667);
        ctx14.save();
        ctx14.font = "   15px ''";
        ctx14.beginPath();
        ctx14.moveTo(-10000, -10000);
        ctx14.lineTo(20000, -10000);
        ctx14.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx14.lineTo(20000, 20000);
        ctx14.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx14.lineTo(-10000, 20000);
        ctx14.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx14.lineTo(-10000, -10000);
        ctx14.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx14.closePath();
        ctx14.fill();
        ctx14.stroke();
        ctx14.restore();
        ctx14.restore();
        ctx14.restore();
        var p = ctx14.createPattern(ctx14.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.244393;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(22.53249, 35.787893);
        ctx.bezierCurveTo(20.304805, 32.482458, 18.150064, 14.381035, 42.315624, 12.987528);
        ctx.bezierCurveTo(57.533841, 12.10997, 65.599968, 22.147169, 59.212591, 35.731907);
        ctx.lineTo(59.212591, 35.731907);
        ctx.bezierCurveTo(66.625982, 21.858595, 65.885902, 6.1292314, 48.637318, 5.5613669);
        ctx.bezierCurveTo(28.607228, 3.674897, 15.861132, 26.819002, 22.53249, 35.787893);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(20.665094, 24.921884, 61.669638, 24.921884);
        g.addColorStop(0, "rgba(191, 0, 254, 1)");
        g.addColorStop(1, "rgba(254, 0, 0, 0.96124031)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx15 = canvas.getContext("2d");
        ctx15.fillStyle = g;
        ctx15.save();
        ctx15.strokeStyle = "rgba(0,0,0,0)";
        ctx15.miterLimit = 4;
        ctx15.font = "";
        ctx15.font = "   15px ''";
        ctx15.beginPath();
        ctx15.moveTo(0, 0);
        ctx15.lineTo(1864, 0);
        ctx15.lineTo(1864, 939);
        ctx15.lineTo(0, 939);
        ctx15.closePath();
        ctx15.clip();
        ctx15.save();
        ctx15.font = "   15px ''";
        ctx15.translate(0, -2.1166667);
        ctx15.save();
        ctx15.font = "   15px ''";
        ctx15.beginPath();
        ctx15.moveTo(-10000, -10000);
        ctx15.lineTo(20000, -10000);
        ctx15.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx15.lineTo(20000, 20000);
        ctx15.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx15.lineTo(-10000, 20000);
        ctx15.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx15.lineTo(-10000, -10000);
        ctx15.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx15.closePath();
        ctx15.fill();
        ctx15.stroke();
        ctx15.restore();
        ctx15.restore();
        ctx15.restore();
        var p = ctx15.createPattern(ctx15.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.230186;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(22.53249, 35.787893);
        ctx.bezierCurveTo(20.304804999999998, 32.855587, 19.282902, 14.213772999999996, 43.47578, 14.668883999999998);
        ctx.bezierCurveTo(54.886887, 14.883546999999998, 64.173905, 24.058996999999998, 59.212591, 35.738226999999995);
        ctx.lineTo(59.212591, 35.738226999999995);
        ctx.bezierCurveTo(65.618089, 23.546931, 58.692254, 10.966844, 47.74489, 9.9234663);
        ctx.bezierCurveTo(27.7148, 8.2499482, 15.861132, 27.831442, 22.53249, 35.787893);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 0.976471)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.326078;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.globalAlpha = 0.994186;
        ctx.beginPath();
        ctx.moveTo(30.227225800000003, 72.355988);
        ctx.bezierCurveTo(30.227225800000003, 74.13341346622457, 28.532063575874645, 75.57430149999999, 26.440975, 75.57430149999999);
        ctx.bezierCurveTo(24.34988642412536, 75.57430149999999, 22.6547242, 74.13341346622457, 22.6547242, 72.355988);
        ctx.bezierCurveTo(22.6547242, 70.57856253377543, 24.34988642412536, 69.1376745, 26.440975, 69.1376745);
        ctx.bezierCurveTo(28.532063575874645, 69.1376745, 30.227225800000003, 70.57856253377543, 30.227225800000003, 72.355988);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#76571e";
        ctx.strokeStyle = "rgba(118, 87, 30, 1)";
        ctx.lineWidth = 3.065;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(5.5614996, 44.624261);
        ctx.bezierCurveTo(25.016427, 72.646496, 41.944109, 88.554004, 41.944109, 88.554004);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 0.976471)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.326078;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.globalAlpha = 0.994186;
        ctx.beginPath();
        ctx.moveTo(35.3897188, 74.92469);
        ctx.bezierCurveTo(35.3897188, 76.70211546622457, 33.69455657587464, 78.14300349999999, 31.603468, 78.14300349999999);
        ctx.bezierCurveTo(29.512379424125356, 78.14300349999999, 27.817217199999998, 76.70211546622457, 27.817217199999998, 74.92469);
        ctx.bezierCurveTo(27.817217199999998, 73.14726453377543, 29.512379424125356, 71.7063765, 31.603468, 71.7063765);
        ctx.bezierCurveTo(33.69455657587464, 71.7063765, 35.3897188, 73.14726453377543, 35.3897188, 74.92469);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.restore();
        ctx.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    en_hilchenbach: function() {
        const patternCanvas = document.createElement('canvas');
        const ctx = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        ctx.save();
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.miterLimit = 4;
        ctx.font = "15px / 21.4286px ''";
        ctx.font = "   15px ''";
        ctx.scale(0.2645833333333333, 0.2645833333333333);
        ctx.translate(2.842170943040401e-14, 0);
        ctx.scale(3.779527559055118, 3.779527559055118);
        ctx.save();
        ctx.restore();
        ctx.save();
        ctx.font = "   15px ''";
        ctx.save();
        var g = ctx.createLinearGradient(13.963967, 49.253368, 12.878333, 92.000664);
        g.addColorStop(0, "rgba(9, 21, 157, 1)");
        g.addColorStop(1, "rgba(11, 26, 197, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx1 = canvas.getContext("2d");
        ctx1.fillStyle = g;
        ctx1.save();
        ctx1.strokeStyle = "rgba(0,0,0,0)";
        ctx1.miterLimit = 4;
        ctx1.font = "";
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(0, 0);
        ctx1.lineTo(1864, 0);
        ctx1.lineTo(1864, 939);
        ctx1.lineTo(0, 939);
        ctx1.closePath();
        ctx1.clip();
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.transform(0.9675665, 0, 0, 0.89275813, 2.0531165, 3.0247466);
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(-10000, -10000);
        ctx1.lineTo(20000, -10000);
        ctx1.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx1.lineTo(20000, 20000);
        ctx1.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx1.lineTo(-10000, 20000);
        ctx1.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx1.lineTo(-10000, -10000);
        ctx1.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx1.closePath();
        ctx1.fill();
        ctx1.stroke();
        ctx1.restore();
        ctx1.restore();
        ctx1.restore();
        var p = ctx1.createPattern(ctx1.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.276267;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(18.12359, 35.04724);
        ctx.lineTo(18.226738, 74.87938700000001);
        ctx.bezierCurveTo(18.226738, 74.87938700000001, 10.014130000000002, 63.12995900000001, 9.8673981, 56.12993900000001);
        ctx.bezierCurveTo(9.7091513, 48.580599, 18.12359, 35.04724, 18.12359, 35.04724);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(61.059708, 81.113625, 69.701538, 58.805149);
        g.addColorStop(0, "rgba(9, 21, 157, 1)");
        g.addColorStop(1, "rgba(11, 26, 197, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx2 = canvas.getContext("2d");
        ctx2.fillStyle = g;
        ctx2.save();
        ctx2.strokeStyle = "rgba(0,0,0,0)";
        ctx2.miterLimit = 4;
        ctx2.font = "";
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(0, 0);
        ctx2.lineTo(1864, 0);
        ctx2.lineTo(1864, 939);
        ctx2.lineTo(0, 939);
        ctx2.closePath();
        ctx2.clip();
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.transform(0.9675665, 0, 0, 0.83071831, 2.6657293, 7.0445579);
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(-10000, -10000);
        ctx2.lineTo(20000, -10000);
        ctx2.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx2.lineTo(20000, 20000);
        ctx2.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx2.lineTo(-10000, 20000);
        ctx2.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx2.lineTo(-10000, -10000);
        ctx2.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx2.closePath();
        ctx2.fill();
        ctx2.stroke();
        ctx2.restore();
        ctx2.restore();
        ctx2.restore();
        var p = ctx2.createPattern(ctx2.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.266495;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(61.848207, 37.363012);
        ctx.lineTo(61.745059000000005, 74.427131);
        ctx.bezierCurveTo(61.745059000000005, 74.427131, 69.95766800000001, 63.494197, 70.1044, 56.980626);
        ctx.bezierCurveTo(70.262647, 49.955905, 61.848207, 37.363012, 61.848207, 37.363012);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(26.210979, 91.199303, 0, 26.210979, 91.199303, 7.1066689);
        g.addColorStop(0, "rgba(4, 2, 1, 1)");
        g.addColorStop(1, "rgba(50, 50, 50, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx3 = canvas.getContext("2d");
        ctx3.fillStyle = g;
        ctx3.save();
        ctx3.strokeStyle = "rgba(0,0,0,0)";
        ctx3.miterLimit = 4;
        ctx3.font = "";
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(0, 0);
        ctx3.lineTo(1864, 0);
        ctx3.lineTo(1864, 939);
        ctx3.lineTo(0, 939);
        ctx3.closePath();
        ctx3.clip();
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.transform(1, 0, 0, 1.2353968, 0, -21.997188);
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(-10000, -10000);
        ctx3.lineTo(20000, -10000);
        ctx3.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx3.lineTo(20000, 20000);
        ctx3.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx3.lineTo(-10000, 20000);
        ctx3.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx3.lineTo(-10000, -10000);
        ctx3.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx3.closePath();
        ctx3.fill();
        ctx3.stroke();
        ctx3.restore();
        ctx3.restore();
        ctx3.restore();
        var p = ctx3.createPattern(ctx3.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "#ffffff";
        ctx.strokeStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.547879;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(33.0437083, 90.670135);
        ctx.bezierCurveTo(33.0437083, 95.36765711517374, 29.98459119211203, 99.17575120000001, 26.210979, 99.17575120000001);
        ctx.bezierCurveTo(22.437366807887965, 99.17575120000001, 19.378249699999998, 95.36765711517374, 19.378249699999998, 90.670135);
        ctx.bezierCurveTo(19.378249699999998, 85.97261288482626, 22.437366807887965, 82.1645188, 26.210979, 82.1645188);
        ctx.bezierCurveTo(29.98459119211203, 82.1645188, 33.0437083, 85.97261288482626, 33.0437083, 90.670135);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(52.625122, 91.171066, 0, 52.625122, 91.171066, 6.7245908);
        g.addColorStop(0, "rgba(4, 2, 1, 1)");
        g.addColorStop(1, "rgba(46, 40, 38, 0.89147287)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx4 = canvas.getContext("2d");
        ctx4.fillStyle = g;
        ctx4.save();
        ctx4.strokeStyle = "rgba(0,0,0,0)";
        ctx4.miterLimit = 4;
        ctx4.font = "";
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(0, 0);
        ctx4.lineTo(1864, 0);
        ctx4.lineTo(1864, 939);
        ctx4.lineTo(0, 939);
        ctx4.closePath();
        ctx4.clip();
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.transform(1, 0, 0, 1.3055895, 0, -28.39009);
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(-10000, -10000);
        ctx4.lineTo(20000, -10000);
        ctx4.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx4.lineTo(20000, 20000);
        ctx4.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx4.lineTo(-10000, 20000);
        ctx4.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx4.lineTo(-10000, -10000);
        ctx4.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx4.closePath();
        ctx4.fill();
        ctx4.stroke();
        ctx4.restore();
        ctx4.restore();
        ctx4.restore();
        var p = ctx4.createPattern(ctx4.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "#ffffff";
        ctx.strokeStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.532885;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(59.0832705, 90.641899);
        ctx.bezierCurveTo(59.0832705, 95.34356148348627, 56.19185892869261, 99.155012, 52.625122, 99.155012);
        ctx.bezierCurveTo(49.058385071307384, 99.155012, 46.1669735, 95.34356148348627, 46.1669735, 90.641899);
        ctx.bezierCurveTo(46.1669735, 85.94023651651372, 49.058385071307384, 82.12878599999999, 52.625122, 82.12878599999999);
        ctx.bezierCurveTo(56.19185892869261, 82.12878599999999, 59.0832705, 85.94023651651372, 59.0832705, 90.641899);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(179.80403, 431.61713, 151.93471, 321.1073);
        g.addColorStop(0, "rgba(168, 164, 164, 1)");
        g.addColorStop(1, "rgba(21, 131, 228, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx5 = canvas.getContext("2d");
        ctx5.fillStyle = g;
        ctx5.save();
        ctx5.strokeStyle = "rgba(0,0,0,0)";
        ctx5.miterLimit = 4;
        ctx5.font = "";
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(0, 0);
        ctx5.lineTo(1864, 0);
        ctx5.lineTo(1864, 939);
        ctx5.lineTo(0, 939);
        ctx5.closePath();
        ctx5.clip();
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.transform(0.27976256, 0, 0, 0.29567452, -1.9939885, -19.235309);
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(-10000, -10000);
        ctx5.lineTo(20000, -10000);
        ctx5.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx5.lineTo(20000, 20000);
        ctx5.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx5.lineTo(-10000, 20000);
        ctx5.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx5.lineTo(-10000, -10000);
        ctx5.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx5.closePath();
        ctx5.fill();
        ctx5.stroke();
        ctx5.restore();
        ctx5.restore();
        ctx5.restore();
        var p = ctx5.createPattern(ctx5.canvas, "no-repeat");
        ctx.fillStyle = p;
        var g = ctx.createLinearGradient(179.80403, 431.61713, 151.93471, 321.1073);
        g.addColorStop(0, "rgba(168, 164, 164, 1)");
        g.addColorStop(1, "rgba(21, 131, 228, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx6 = canvas.getContext("2d");
        ctx6.fillStyle = g;
        ctx6.save();
        ctx6.strokeStyle = "rgba(0,0,0,0)";
        ctx6.miterLimit = 4;
        ctx6.font = "";
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(0, 0);
        ctx6.lineTo(1864, 0);
        ctx6.lineTo(1864, 939);
        ctx6.lineTo(0, 939);
        ctx6.closePath();
        ctx6.clip();
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.transform(0.27976256, 0, 0, 0.29567452, -1.9939885, -19.235309);
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(-10000, -10000);
        ctx6.lineTo(20000, -10000);
        ctx6.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx6.lineTo(20000, 20000);
        ctx6.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx6.lineTo(-10000, 20000);
        ctx6.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx6.lineTo(-10000, -10000);
        ctx6.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx6.closePath();
        ctx6.fill();
        ctx6.stroke();
        ctx6.restore();
        ctx6.restore();
        ctx6.restore();
        var p = ctx6.createPattern(ctx6.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.287609;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(18.226743, 75.486537);
        ctx.lineTo(61.745057, 74.427126);
        ctx.lineTo(61.152164, 87.896804);
        ctx.lineTo(58.30628, 92.437145);
        ctx.lineTo(46.922744, 92.285799);
        ctx.lineTo(45.499802, 87.745457);
        ctx.lineTo(45.02549, 81.99436);
        ctx.lineTo(34.471999, 82.145704);
        ctx.lineTo(33.879108, 89.107556);
        ctx.lineTo(31.863271, 92.891181);
        ctx.lineTo(20.124, 92.588493);
        ctx.lineTo(18.938214, 88.350842);
        ctx.lineTo(18.226743, 75.486537);
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(71.412895, 261.66318, 214.23026, 281.35965);
        g.addColorStop(0, "rgba(9, 21, 157, 1)");
        g.addColorStop(1, "rgba(9, 21, 157, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx7 = canvas.getContext("2d");
        ctx7.fillStyle = g;
        ctx7.save();
        ctx7.strokeStyle = "rgba(0,0,0,0)";
        ctx7.miterLimit = 4;
        ctx7.font = "";
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(0, 0);
        ctx7.lineTo(1864, 0);
        ctx7.lineTo(1864, 939);
        ctx7.lineTo(0, 939);
        ctx7.closePath();
        ctx7.clip();
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.transform(0.27976256, 0, 0, 0.29567452, -1.9939895, -19.842458);
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(-10000, -10000);
        ctx7.lineTo(20000, -10000);
        ctx7.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx7.lineTo(20000, 20000);
        ctx7.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx7.lineTo(-10000, 20000);
        ctx7.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx7.lineTo(-10000, -10000);
        ctx7.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx7.closePath();
        ctx7.fill();
        ctx7.stroke();
        ctx7.restore();
        ctx7.restore();
        ctx7.restore();
        var p = ctx7.createPattern(ctx7.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.287609;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(16.329487, 36.437839);
        ctx.lineTo(25.104298, 45.064482999999996);
        ctx.lineTo(47.871373, 48.24449799999999);
        ctx.lineTo(44.759822, 74.477976);
        ctx.lineTo(18.226743, 75.486537);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#848484";
        ctx.strokeStyle = "rgba(132, 132, 132, 1)";
        ctx.lineWidth = 0.677297;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(33.754486, 61.799981);
        ctx.lineTo(32.459747, 63.1595);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(46.900146, 59.616196, 65.724899, 59.616196);
        g.addColorStop(0, "rgba(9, 21, 157, 1)");
        g.addColorStop(1, "rgba(11, 26, 197, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx8 = canvas.getContext("2d");
        ctx8.fillStyle = g;
        ctx8.save();
        ctx8.strokeStyle = "rgba(0,0,0,0)";
        ctx8.miterLimit = 4;
        ctx8.font = "";
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(0, 0);
        ctx8.lineTo(1864, 0);
        ctx8.lineTo(1864, 939);
        ctx8.lineTo(0, 939);
        ctx8.closePath();
        ctx8.clip();
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.transform(0.9675665, 0, 0, 0.9675665, 2.0531165, -2.996289);
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(-10000, -10000);
        ctx8.lineTo(20000, -10000);
        ctx8.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx8.lineTo(20000, 20000);
        ctx8.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx8.lineTo(-10000, 20000);
        ctx8.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx8.lineTo(-10000, -10000);
        ctx8.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx8.closePath();
        ctx8.fill();
        ctx8.stroke();
        ctx8.restore();
        ctx8.restore();
        ctx8.restore();
        var p = ctx8.createPattern(ctx8.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.339482;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(65.646329, 35.552713);
        ctx.bezierCurveTo(62.061055999999994, 39.164525999999995, 66.91584499999999, 41.668550999999994, 53.44456099999999, 46.577931);
        ctx.lineTo(47.871371999999994, 47.637343);
        ctx.bezierCurveTo(47.30161, 57.651238, 38.736454, 65.72967, 38.71513, 74.783263);
        ctx.lineTo(61.745059, 74.427131);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#848484";
        ctx.strokeStyle = "rgba(132, 132, 132, 1)";
        ctx.lineWidth = 0.677297;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(48.216398, 65.324613);
        ctx.lineTo(48.907669999999996, 66.684132);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#00026d";
        ctx.strokeStyle = "rgba(0, 2, 109, 1)";
        ctx.lineWidth = 0.933702;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(46.484, 49.268368);
        ctx.bezierCurveTo(46.335936000000004, 54.122504, 45.836218, 61.091962, 48.216398000000005, 65.324613);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#00026d";
        ctx.strokeStyle = "rgba(0, 2, 109, 1)";
        ctx.lineWidth = 0.933702;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(36.036401, 48.796612);
        ctx.bezierCurveTo(35.802087, 53.268370000000004, 37.394602, 58.21669300000001, 33.754484999999995, 61.799982);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.font = "   15px ''";
        ctx.transform(0.11146667, 0, 0, 0.11146667, 48.291415, 62.035908);
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(96.006938, -35.506394);
        ctx.bezierCurveTo(96.006938, -35.527764, 96.087198, -35.60882, 96.18530100000001, -35.686513);
        ctx.bezierCurveTo(96.34695500000001, -35.814538999999996, 96.35056000000002, -35.810897999999995, 96.22378100000002, -35.647653);
        ctx.bezierCurveTo(96.09063400000002, -35.476205, 96.00693700000002, -35.421682, 96.00693800000002, -35.506394);
        ctx.closePath();
        ctx.moveTo(96.924233, -36.329797);
        ctx.bezierCurveTo(96.924233, -36.351167, 97.004493, -36.432223, 97.102596, -36.509916);
        ctx.bezierCurveTo(97.26425, -36.637941999999995, 97.26785500000001, -36.634300999999994, 97.14107600000001, -36.471056);
        ctx.bezierCurveTo(97.007928, -36.299608, 96.924231, -36.245084999999996, 96.924231, -36.329797);
        ctx.closePath();
        ctx.moveTo(64.053675, -45.862995);
        ctx.lineTo(64.054491, -55.280666999999994);
        ctx.lineTo(66.500612, -55.28336699999999);
        ctx.lineTo(68.946734, -55.28606699999999);
        ctx.lineTo(66.52662600000001, -55.25576699999999);
        ctx.lineTo(64.10651800000001, -55.225466999999995);
        ctx.lineTo(64.07970800000001, -45.83535499999999);
        ctx.lineTo(64.05289800000001, -36.445243999999995);
        ctx.lineTo(64.05371400000001, -45.862916);
        ctx.closePath();
        ctx.moveTo(53.072409, -37.491281);
        ctx.bezierCurveTo(53.171419, -37.531621, 53.199811, -38.481772, 53.199811, -41.754557);
        ctx.bezierCurveTo(53.199811, -44.070807, 53.234210999999995, -45.965936, 53.276250999999995, -45.965955);
        ctx.bezierCurveTo(53.318290999999995, -45.965973, 53.34024099999999, -44.043842, 53.325010999999996, -41.694552);
        ctx.bezierCurveTo(53.299271, -37.722589, 53.284980999999995, -37.423685, 53.121167, -37.431241);
        ctx.bezierCurveTo(53.014771, -37.436141, 52.99546, -37.459931, 53.072407, -37.491281);
        ctx.closePath();
        ctx.moveTo(74.424414, -46.763592);
        ctx.lineTo(74.399534, -55.332129);
        ctx.lineTo(74.73078, -55.316709);
        ctx.bezierCurveTo(75.038232, -55.302399, 75.041934, -55.298209, 74.78233, -55.258469000000005);
        ctx.lineTo(74.502634, -55.215649000000006);
        ctx.lineTo(74.475964, -46.705353);
        ctx.lineTo(74.449304, -38.195059);
        ctx.closePath();
        ctx.moveTo(100.49149, -39.932185000000004);
        ctx.bezierCurveTo(100.49149, -39.953555, 100.57179, -40.034611000000005, 100.66986, -40.112304);
        ctx.bezierCurveTo(100.83151, -40.24033, 100.83512, -40.236689, 100.70836, -40.073444);
        ctx.bezierCurveTo(100.57521, -39.901997, 100.49151, -39.847474000000005, 100.49151, -39.932186);
        ctx.closePath();
        ctx.moveTo(41.415016, -43.753025);
        ctx.bezierCurveTo(41.41522, -44.375724, 41.432036000000004, -44.617194, 41.452316, -44.289626);
        ctx.bezierCurveTo(41.472606000000006, -43.962058, 41.472416, -43.452577, 41.451908, -43.157447);
        ctx.bezierCurveTo(41.431388000000005, -42.862316, 41.414788, -43.130327, 41.415018, -43.753025);
        ctx.closePath();
        ctx.moveTo(36.431749, -57.030398000000005);
        ctx.bezierCurveTo(36.431744, -62.691293, 36.444069000000006, -65.022221, 36.459139, -62.210238000000004);
        ctx.bezierCurveTo(36.474209, -59.398255000000006, 36.474209, -54.76661300000001, 36.459148, -51.917702000000006);
        ctx.bezierCurveTo(36.444088, -49.068789, 36.431748, -51.36950300000001, 36.431748, -57.030398000000005);
        ctx.closePath();
        ctx.moveTo(103.16694000000001, -48.612775000000006);
        ctx.bezierCurveTo(103.32110000000002, -48.63635500000001, 103.57335, -48.63635500000001, 103.72751000000001, -48.612775000000006);
        ctx.bezierCurveTo(103.88167000000001, -48.589195000000004, 103.75551000000002, -48.56989500000001, 103.44722000000002, -48.56989500000001);
        ctx.bezierCurveTo(103.13891000000001, -48.56989500000001, 103.01278000000002, -48.58918500000001, 103.16694000000001, -48.612775000000006);
        ctx.closePath();
        ctx.moveTo(101.79100000000001, -48.710145000000004);
        ctx.bezierCurveTo(101.86110000000001, -48.73869500000001, 101.97573000000001, -48.73869500000001, 102.04580000000001, -48.710145000000004);
        ctx.bezierCurveTo(102.11590000000001, -48.681595, 102.05850000000001, -48.658225, 101.91840000000002, -48.658225);
        ctx.bezierCurveTo(101.77826000000002, -48.658225, 101.72092000000002, -48.681585, 101.79100000000003, -48.710145000000004);
        ctx.closePath();
        ctx.moveTo(104.84865, -48.710145000000004);
        ctx.bezierCurveTo(104.91875, -48.73869500000001, 105.03338000000001, -48.73869500000001, 105.10345000000001, -48.710145000000004);
        ctx.bezierCurveTo(105.17355, -48.681595, 105.11615, -48.658225, 104.97605000000001, -48.658225);
        ctx.bezierCurveTo(104.83591000000001, -48.658225, 104.77858000000002, -48.681585, 104.84865000000002, -48.710145000000004);
        ctx.closePath();
        ctx.moveTo(101.08391, -48.815214000000005);
        ctx.bezierCurveTo(101.15751, -48.844944000000005, 101.2454, -48.841294000000005, 101.27926000000001, -48.807114000000006);
        ctx.bezierCurveTo(101.31316000000001, -48.77291400000001, 101.25296, -48.74858400000001, 101.14549000000001, -48.753054000000006);
        ctx.bezierCurveTo(101.02676000000001, -48.757954000000005, 101.00261, -48.78238400000001, 101.08389000000001, -48.815234000000004);
        ctx.closePath();
        ctx.moveTo(105.67039, -48.815214000000005);
        ctx.bezierCurveTo(105.74399, -48.844944000000005, 105.83187, -48.841294000000005, 105.86574, -48.807114000000006);
        ctx.bezierCurveTo(105.89964, -48.77291400000001, 105.83944, -48.74858400000001, 105.73197, -48.753054000000006);
        ctx.bezierCurveTo(105.61324, -48.757954000000005, 105.58909, -48.78238400000001, 105.67037, -48.815234000000004);
        ctx.closePath();
        ctx.moveTo(34.127447, -49.02795);
        ctx.bezierCurveTo(34.000668999999995, -49.191196, 34.004273999999995, -49.194837, 34.165926999999996, -49.06681);
        ctx.bezierCurveTo(34.264027, -48.98912, 34.344289999999994, -48.908063, 34.344289999999994, -48.886691);
        ctx.bezierCurveTo(34.344289999999994, -48.801981, 34.26058999999999, -48.856501, 34.12744599999999, -49.027949);
        ctx.closePath();
        ctx.moveTo(101.99484000000001, -50.459877);
        ctx.bezierCurveTo(102.06494, -50.488427, 102.17957000000001, -50.488427, 102.24964000000001, -50.459877);
        ctx.bezierCurveTo(102.31974000000001, -50.431326999999996, 102.26234000000001, -50.407956999999996, 102.12224000000002, -50.407956999999996);
        ctx.bezierCurveTo(101.98210000000002, -50.407956999999996, 101.92477000000002, -50.43131699999999, 101.99484000000002, -50.459877);
        ctx.closePath();
        ctx.moveTo(104.59578, -50.463077);
        ctx.bezierCurveTo(104.69498, -50.489177, 104.83254000000001, -50.487457, 104.90155, -50.459277);
        ctx.bezierCurveTo(104.97055, -50.431087, 104.88945, -50.409727, 104.72125, -50.411827);
        ctx.bezierCurveTo(104.55306999999999, -50.413927, 104.49662, -50.436997000000005, 104.59577999999999, -50.463087);
        ctx.closePath();
        ctx.moveTo(105.56847, -50.564985);
        ctx.bezierCurveTo(105.64207, -50.594715, 105.72995, -50.591065, 105.76382000000001, -50.556885);
        ctx.bezierCurveTo(105.79772000000001, -50.522685, 105.73752, -50.498355000000004, 105.63005000000001, -50.502825);
        ctx.bezierCurveTo(105.51131000000001, -50.507725, 105.48716000000002, -50.532155, 105.56845000000001, -50.565005);
        ctx.closePath();
        ctx.moveTo(85.69373300000001, -53.549821);
        ctx.bezierCurveTo(85.76730300000001, -53.579551, 85.85521500000002, -53.575901, 85.88908300000001, -53.541721);
        ctx.bezierCurveTo(85.922953, -53.507521000000004, 85.86275300000001, -53.483191000000005, 85.75531100000002, -53.487661);
        ctx.bezierCurveTo(85.63657700000002, -53.492561, 85.61242700000003, -53.516991000000004, 85.69373100000001, -53.549841);
        ctx.closePath();
        ctx.moveTo(88.44561900000001, -53.549821);
        ctx.bezierCurveTo(88.51919900000001, -53.579551, 88.60710200000001, -53.575901, 88.64097000000001, -53.541721);
        ctx.bezierCurveTo(88.67484, -53.507521000000004, 88.61464000000001, -53.483191000000005, 88.507197, -53.487661);
        ctx.bezierCurveTo(88.388464, -53.492561, 88.36431300000001, -53.516991000000004, 88.445617, -53.549841);
        ctx.closePath();
        ctx.moveTo(103.01406, -53.554921);
        ctx.bezierCurveTo(103.2523, -53.576591, 103.64215, -53.576591, 103.88039, -53.554921);
        ctx.bezierCurveTo(104.11863000000001, -53.533251, 103.92369000000001, -53.515521, 103.44722, -53.515521);
        ctx.bezierCurveTo(102.97074, -53.515521, 102.77581, -53.533251, 103.01406, -53.554921);
        ctx.closePath();
        ctx.moveTo(86.810327, -53.65699);
        ctx.bezierCurveTo(86.993516, -53.6799, 87.268705, -53.67943, 87.421857, -53.65599);
        ctx.bezierCurveTo(87.57501, -53.6325, 87.425157, -53.61376, 87.088786, -53.614340000000006);
        ctx.bezierCurveTo(86.752445, -53.61495800000001, 86.627138, -53.634130000000006, 86.810327, -53.65704000000001);
        ctx.closePath();
        ctx.moveTo(101.69544, -53.65269);
        ctx.bezierCurveTo(101.76904, -53.68242, 101.85693, -53.67877, 101.89079000000001, -53.64459);
        ctx.bezierCurveTo(101.92469000000001, -53.61039, 101.86449, -53.58606, 101.75702000000001, -53.59053);
        ctx.bezierCurveTo(101.63829000000001, -53.59543, 101.61414, -53.61986, 101.69542000000001, -53.65271);
        ctx.closePath();
        ctx.moveTo(105.05886000000001, -53.65269);
        ctx.bezierCurveTo(105.13246000000001, -53.68242, 105.22034000000001, -53.67877, 105.25421000000001, -53.64459);
        ctx.bezierCurveTo(105.28811000000002, -53.61039, 105.22791000000001, -53.58606, 105.12044000000002, -53.59053);
        ctx.bezierCurveTo(105.00171000000002, -53.59543, 104.97756000000001, -53.61986, 105.05884000000002, -53.65271);
        ctx.closePath();
        ctx.moveTo(105.77231, -53.755615999999996);
        ctx.bezierCurveTo(105.84591, -53.785346, 105.9338, -53.781696, 105.96766000000001, -53.747516);
        ctx.bezierCurveTo(106.00156000000001, -53.713316, 105.94136, -53.688986, 105.83389000000001, -53.693456);
        ctx.bezierCurveTo(105.71516000000001, -53.698356, 105.69101, -53.722786, 105.77229000000001, -53.755635999999996);
        ctx.closePath();
        ctx.moveTo(85.489889, -55.299496);
        ctx.bezierCurveTo(85.56345900000001, -55.329226, 85.65137200000001, -55.325576, 85.68523900000001, -55.291396);
        ctx.bezierCurveTo(85.719109, -55.257196, 85.65890900000001, -55.232866, 85.55146700000002, -55.237336);
        ctx.bezierCurveTo(85.43273300000001, -55.242236, 85.40858300000002, -55.266666, 85.48988700000001, -55.299516);
        ctx.closePath();
        ctx.moveTo(88.54754100000001, -55.299496);
        ctx.bezierCurveTo(88.62111100000001, -55.329226, 88.70902400000001, -55.325576, 88.74289100000001, -55.291396);
        ctx.bezierCurveTo(88.77676100000001, -55.257196, 88.71656100000001, -55.232866, 88.60911900000002, -55.237336);
        ctx.bezierCurveTo(88.49038500000002, -55.242236, 88.46623500000003, -55.266666, 88.54753900000001, -55.299516);
        ctx.closePath();
        ctx.moveTo(31.540073, -70.050457);
        ctx.bezierCurveTo(31.540073, -78.173841, 31.552153, -81.49704399999999, 31.566913, -77.435352);
        ctx.bezierCurveTo(31.581673, -73.37366, 31.581673, -66.72725399999999, 31.566913, -62.665561999999994);
        ctx.bezierCurveTo(31.552153, -58.603868999999996, 31.540073, -61.927071999999995, 31.540073, -70.050457);
        ctx.closePath();
        ctx.moveTo(86.658694, -55.407909999999994);
        ctx.bezierCurveTo(86.926656, -55.429179999999995, 87.339439, -55.42891999999999, 87.57598899999999, -55.407292999999996);
        ctx.bezierCurveTo(87.812541, -55.38570299999999, 87.59329899999999, -55.368303, 87.088786, -55.368612999999996);
        ctx.bezierCurveTo(86.584274, -55.368922, 86.390732, -55.386582999999995, 86.658694, -55.407863);
        ctx.closePath();
        ctx.moveTo(75.953837, -55.820691999999994);
        ctx.bezierCurveTo(76.612506, -55.838621999999994, 77.69032899999999, -55.838621999999994, 78.348998, -55.820691999999994);
        ctx.bezierCurveTo(79.007667, -55.802761999999994, 78.468756, -55.78809199999999, 77.15141799999999, -55.78809199999999);
        ctx.bezierCurveTo(75.83407899999999, -55.78809199999999, 75.29516799999999, -55.802761999999994, 75.953837, -55.820691999999994);
        ctx.closePath();
        ctx.moveTo(88.95522799999999, -58.38727399999999);
        ctx.bezierCurveTo(89.028798, -58.41700399999999, 89.116711, -58.41335399999999, 89.150578, -58.37917399999999);
        ctx.bezierCurveTo(89.18444799999999, -58.34497399999999, 89.124248, -58.320643999999994, 89.016806, -58.32511399999999);
        ctx.bezierCurveTo(88.898072, -58.33001399999999, 88.87392200000001, -58.354443999999994, 88.955226, -58.38729399999999);
        ctx.closePath();
        ctx.moveTo(85.795654, -58.4902);
        ctx.bezierCurveTo(85.869234, -58.51993, 85.957137, -58.51628, 85.991005, -58.4821);
        ctx.bezierCurveTo(86.024875, -58.447900000000004, 85.964675, -58.423570000000005, 85.857232, -58.42804);
        ctx.bezierCurveTo(85.73849899999999, -58.43294, 85.714348, -58.457370000000004, 85.79565199999999, -58.49022);
        ctx.closePath();
        ctx.moveTo(88.235406, -58.4881);
        ctx.bezierCurveTo(88.305476, -58.516650000000006, 88.42013899999999, -58.516650000000006, 88.49020999999999, -58.4881);
        ctx.bezierCurveTo(88.56027999999999, -58.45955, 88.50294999999998, -58.43618, 88.36280799999999, -58.43618);
        ctx.bezierCurveTo(88.22266499999999, -58.43618, 88.16533499999998, -58.45954, 88.23540599999998, -58.4881);
        ctx.closePath();
        ctx.moveTo(86.961384, -58.593809);
        ctx.bezierCurveTo(87.059484, -58.619699, 87.22001, -58.619699, 87.31810999999999, -58.593809);
        ctx.bezierCurveTo(87.41620999999999, -58.567919, 87.33595, -58.546739, 87.13974699999999, -58.546739);
        ctx.bezierCurveTo(86.94354799999999, -58.546739, 86.86328399999998, -58.567919, 86.96138399999998, -58.593809);
        ctx.closePath();
        ctx.moveTo(62.252354, -61.687735);
        ctx.bezierCurveTo(63.559521999999994, -61.704035000000005, 65.669302, -61.704015000000005, 66.940754, -61.687695000000005);
        ctx.bezierCurveTo(68.212205, -61.671375000000005, 67.142704, -61.658035000000005, 64.564084, -61.658055000000004);
        ctx.bezierCurveTo(61.98546399999999, -61.658077000000006, 60.94518599999999, -61.671435, 62.252354, -61.687735);
        ctx.closePath();
        ctx.moveTo(62.107676999999995, -65.093272);
        ctx.bezierCurveTo(62.161486999999994, -65.181192, 60.797642999999994, -65.21820699999999, 56.747052, -65.238753);
        ctx.lineTo(51.31425899999999, -65.266313);
        ctx.lineTo(56.79255199999999, -65.291123);
        ctx.bezierCurveTo(60.165144999999995, -65.306393, 62.270844999999994, -65.278703, 62.270844999999994, -65.219083);
        ctx.bezierCurveTo(62.270844999999994, -65.165813, 62.21789499999999, -65.089184, 62.153175, -65.04879199999999);
        ctx.bezierCurveTo(62.080594999999995, -65.003492, 62.063154999999995, -65.02053199999999, 62.107675, -65.09327199999998);
        ctx.closePath();
        ctx.moveTo(54.473833, -69.505871);
        ctx.bezierCurveTo(57.289179, -69.578501, 59.824918, -69.580521, 59.824825, -69.510171);
        ctx.bezierCurveTo(59.824768999999996, -69.467711, 58.368517, -69.442881, 56.588708999999994, -69.454981);
        ctx.bezierCurveTo(54.808899999999994, -69.46708100000001, 53.85720599999999, -69.490001, 54.47383299999999, -69.50590100000001);
        ctx.closePath();
        ctx.moveTo(36.429704, -80.188606);
        ctx.bezierCurveTo(36.429725, -82.79261699999999, 36.442944000000004, -83.84313999999999, 36.459094, -82.52309899999999);
        ctx.bezierCurveTo(36.475234, -81.20306, 36.475214, -79.07250399999998, 36.459055, -77.78853199999999);
        ctx.bezierCurveTo(36.442895, -76.504561, 36.429685, -77.584594, 36.429705, -80.188606);
        ctx.closePath();
        ctx.moveTo(50.855498, -83.04478499999999);
        ctx.bezierCurveTo(50.85556, -83.087245, 52.197156, -83.11221499999999, 53.836822, -83.100275);
        ctx.bezierCurveTo(56.824901, -83.078515, 56.485465999999995, -83.043095, 52.817492, -82.993907);
        ctx.bezierCurveTo(51.738333000000004, -82.97943699999999, 50.855436000000005, -83.00230699999999, 50.855498000000004, -83.044787);
        ctx.closePath();
        ctx.moveTo(43.564375999999996, -86.95594799999999);
        ctx.lineTo(43.058598999999994, -87.49630699999999);
        ctx.lineTo(43.59368799999999, -86.98554899999999);
        ctx.bezierCurveTo(44.09090199999999, -86.510943, 44.175518999999994, -86.41559, 44.09946599999999, -86.41559);
        ctx.bezierCurveTo(44.08334599999999, -86.41559, 43.842552999999995, -86.658751, 43.564375999999996, -86.95594799999999);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(58.703585, -23.682579);
        ctx.bezierCurveTo(58.835241999999994, -23.824101, 58.965892999999994, -23.939892, 58.993922, -23.939892);
        ctx.bezierCurveTo(59.021952, -23.939892, 58.937162, -23.824101, 58.805506, -23.682579);
        ctx.bezierCurveTo(58.673849000000004, -23.541056, 58.543197, -23.425265, 58.515169, -23.425265);
        ctx.bezierCurveTo(58.487139, -23.425265, 58.571929, -23.541056, 58.703585, -23.682579);
        ctx.closePath();
        ctx.moveTo(69.31149099999999, -23.588229000000002);
        ctx.bezierCurveTo(69.316391, -23.708132000000003, 69.34053099999998, -23.73252, 69.373071, -23.650409000000003);
        ctx.bezierCurveTo(69.40251099999999, -23.576109000000002, 69.39889099999999, -23.487337000000004, 69.365071, -23.453136000000004);
        ctx.bezierCurveTo(69.33120100000001, -23.418936000000006, 69.307111, -23.479726000000003, 69.311541, -23.588225000000005);
        ctx.closePath();
        ctx.moveTo(63.00416699999999, -24.094279);
        ctx.bezierCurveTo(63.00626699999999, -24.264106, 63.02908699999999, -24.32112, 63.054926999999985, -24.220977);
        ctx.bezierCurveTo(63.08076699999999, -24.120834000000002, 63.07906699999999, -23.981885000000002, 63.05112699999999, -23.912201);
        ctx.bezierCurveTo(63.023206999999985, -23.842520999999998, 63.00206699999999, -23.924451, 63.00414699999999, -24.094279);
        ctx.closePath();
        ctx.moveTo(67.28487899999999, -24.094279);
        ctx.bezierCurveTo(67.28697899999999, -24.264106, 67.30979899999998, -24.32112, 67.33563899999999, -24.220977);
        ctx.bezierCurveTo(67.36147899999999, -24.120834000000002, 67.35977899999999, -23.981885000000002, 67.33183899999999, -23.912201);
        ctx.bezierCurveTo(67.303919, -23.842520999999998, 67.28277899999999, -23.924451, 67.28485899999998, -24.094279);
        ctx.closePath();
        ctx.moveTo(52.84308499999999, -24.763294000000002);
        ctx.bezierCurveTo(52.944546999999986, -24.876512, 53.050493999999986, -24.969145, 53.078521999999985, -24.969145);
        ctx.bezierCurveTo(53.106551999999986, -24.969145, 53.04647199999999, -24.876515, 52.94500699999998, -24.763294000000002);
        ctx.bezierCurveTo(52.843544999999985, -24.650076000000002, 52.737597999999984, -24.557443000000003, 52.709569999999985, -24.557443000000003);
        ctx.bezierCurveTo(52.681539999999984, -24.557443000000003, 52.74161999999998, -24.650073000000003, 52.84308499999999, -24.763294000000002);
        ctx.closePath();
        ctx.moveTo(71.65569099999999, -25.13211);
        ctx.bezierCurveTo(71.660591, -25.252012, 71.68473099999999, -25.276401, 71.717271, -25.194290000000002);
        ctx.bezierCurveTo(71.74671099999999, -25.11999, 71.74309099999999, -25.031217, 71.709271, -24.997016000000002);
        ctx.bezierCurveTo(71.67540100000001, -24.962816000000004, 71.651311, -25.023606, 71.655741, -25.132106000000004);
        ctx.closePath();
        ctx.moveTo(51.569062999999986, -25.11093);
        ctx.bezierCurveTo(51.569062999999986, -25.1323, 51.64932299999999, -25.213356, 51.74742599999998, -25.291049);
        ctx.bezierCurveTo(51.90907999999998, -25.419075, 51.91268499999998, -25.415434, 51.78590599999998, -25.252189);
        ctx.bezierCurveTo(51.65275899999998, -25.080741, 51.569060999999984, -25.026218, 51.569060999999984, -25.11093);
        ctx.closePath();
        ctx.moveTo(68.394196, -25.337959);
        ctx.bezierCurveTo(68.399096, -25.457862000000002, 68.42323599999999, -25.48225, 68.455776, -25.400139000000003);
        ctx.bezierCurveTo(68.485216, -25.325839000000002, 68.481596, -25.237066000000002, 68.447776, -25.202865000000003);
        ctx.bezierCurveTo(68.41390600000001, -25.168665000000004, 68.38981600000001, -25.229455, 68.39424600000001, -25.337954000000003);
        ctx.closePath();
        ctx.moveTo(56.273554999999995, -25.586696);
        ctx.bezierCurveTo(56.273554999999995, -25.728218, 56.296685, -25.786114, 56.32496499999999, -25.715353);
        ctx.bezierCurveTo(56.35323499999999, -25.644593, 56.35323499999999, -25.5288, 56.32496499999999, -25.458039);
        ctx.bezierCurveTo(56.29669499999999, -25.387279, 56.273554999999995, -25.445169, 56.273554999999995, -25.586696);
        ctx.closePath();
        ctx.moveTo(71.280172, -26.873263);
        ctx.bezierCurveTo(71.28037499999999, -27.665788000000003, 71.29633199999999, -27.976398000000003, 71.315722, -27.563506);
        ctx.bezierCurveTo(71.335122, -27.150615000000002, 71.334992, -26.502185, 71.315416, -26.122551);
        ctx.bezierCurveTo(71.29587599999999, -25.742917000000002, 71.280006, -26.080741, 71.280166, -26.873263);
        ctx.closePath();
        ctx.moveTo(68.29227399999999, -26.161362);
        ctx.bezierCurveTo(68.297174, -26.281265, 68.32131399999999, -26.305653, 68.353854, -26.223542000000002);
        ctx.bezierCurveTo(68.38329399999999, -26.149242, 68.379674, -26.060469, 68.345854, -26.026268);
        ctx.bezierCurveTo(68.31198400000001, -25.992068000000003, 68.28789400000001, -26.052858, 68.29232400000001, -26.161357000000002);
        ctx.closePath();
        ctx.moveTo(54.940527, -26.47014);
        ctx.bezierCurveTo(54.945427, -26.590043, 54.969567000000005, -26.614431, 55.002107, -26.532320000000002);
        ctx.bezierCurveTo(55.031547, -26.45802, 55.027927000000005, -26.369247, 54.994107, -26.335046000000002);
        ctx.bezierCurveTo(54.960237, -26.300846000000003, 54.936147, -26.361636, 54.940577, -26.470135000000003);
        ctx.closePath();
        ctx.moveTo(56.277333000000006, -27.079116);
        ctx.bezierCurveTo(56.279433000000004, -27.248943, 56.30225300000001, -27.305957, 56.328093, -27.205814);
        ctx.bezierCurveTo(56.353933000000005, -27.105671, 56.352233000000005, -26.966721, 56.324293000000004, -26.897038);
        ctx.bezierCurveTo(56.296373, -26.827357999999997, 56.27523300000001, -26.909288, 56.27731300000001, -27.079116);
        ctx.closePath();
        ctx.moveTo(68.190352, -26.984766);
        ctx.bezierCurveTo(68.19525200000001, -27.104669, 68.219392, -27.129057, 68.25193200000001, -27.046946000000002);
        ctx.bezierCurveTo(68.281372, -26.972646, 68.277752, -26.883873, 68.24393200000002, -26.849672);
        ctx.bezierCurveTo(68.21006200000002, -26.815472000000003, 68.18597200000002, -26.876262, 68.19040200000002, -26.984761000000002);
        ctx.closePath();
        ctx.moveTo(52.514118, -27.74813);
        ctx.bezierCurveTo(52.514118, -28.00287, 52.533998000000004, -28.107082, 52.558288000000005, -27.979712);
        ctx.bezierCurveTo(52.582578000000005, -27.852342, 52.582578000000005, -27.643918, 52.558288000000005, -27.516548);
        ctx.bezierCurveTo(52.533998000000004, -27.389177, 52.514118, -27.493388, 52.514118, -27.74813);
        ctx.closePath();
        ctx.moveTo(63.372874, -27.509663);
        ctx.bezierCurveTo(63.446444, -27.539393, 63.534357, -27.535743, 63.568224, -27.501563);
        ctx.bezierCurveTo(63.602094, -27.467363000000002, 63.541894, -27.443033, 63.434452, -27.447503);
        ctx.bezierCurveTo(63.315718, -27.452403, 63.291568, -27.476833000000003, 63.372872, -27.509683000000003);
        ctx.closePath();
        ctx.moveTo(68.08038400000001, -27.74813);
        ctx.bezierCurveTo(68.08038400000001, -27.80474, 68.12895400000001, -27.851055, 68.18832100000002, -27.851055);
        ctx.bezierCurveTo(68.24768100000001, -27.851055, 68.26791100000001, -27.804734999999997, 68.23326100000001, -27.74813);
        ctx.bezierCurveTo(68.19862100000002, -27.69152, 68.15004100000002, -27.645204, 68.125324, -27.645204);
        ctx.bezierCurveTo(68.100604, -27.645204, 68.08038400000001, -27.691524, 68.08038400000001, -27.74813);
        ctx.closePath();
        ctx.moveTo(58.91547500000001, -27.911094);
        ctx.bezierCurveTo(58.92037500000001, -28.030997, 58.94451500000001, -28.055386, 58.97705500000001, -27.973274);
        ctx.bezierCurveTo(59.00649500000001, -27.898974, 59.00287500000001, -27.810201, 58.969055000000004, -27.776);
        ctx.bezierCurveTo(58.935185000000004, -27.7418, 58.911095, -27.80259, 58.915525, -27.911089);
        ctx.closePath();
        ctx.moveTo(60.34237900000001, -28.01402);
        ctx.bezierCurveTo(60.34727900000001, -28.133923, 60.37141900000001, -28.158310999999998, 60.40395900000001, -28.0762);
        ctx.bezierCurveTo(60.43339900000001, -28.0019, 60.42977900000001, -27.913127, 60.395959000000005, -27.878926);
        ctx.bezierCurveTo(60.362089000000005, -27.844726, 60.337999, -27.905516, 60.342429, -28.014016);
        ctx.closePath();
        ctx.moveTo(54.94857300000001, -28.262756999999997);
        ctx.bezierCurveTo(54.94857300000001, -28.404278999999995, 54.97170300000001, -28.462173999999997, 54.99998300000001, -28.391412999999996);
        ctx.bezierCurveTo(55.02825300000001, -28.320652999999997, 55.02825300000001, -28.204860999999998, 54.99998300000001, -28.134099999999997);
        ctx.bezierCurveTo(54.97171300000001, -28.063339999999997, 54.94857300000001, -28.121229999999997, 54.94857300000001, -28.262756999999997);
        ctx.closePath();
        ctx.moveTo(63.06710900000001, -28.127214999999996);
        ctx.bezierCurveTo(63.140679000000006, -28.156944999999997, 63.22859100000001, -28.153294999999996, 63.26245900000001, -28.119114999999997);
        ctx.bezierCurveTo(63.29632900000001, -28.084915, 63.236129000000005, -28.060584999999996, 63.128687000000006, -28.065054999999997);
        ctx.bezierCurveTo(63.009953, -28.069954999999997, 62.985803000000004, -28.094385, 63.06710700000001, -28.127235);
        ctx.closePath();
        ctx.moveTo(71.64764400000001, -29.394935999999998);
        ctx.bezierCurveTo(71.64764400000001, -30.036502999999996, 71.67651400000001, -30.532272, 71.71179400000001, -30.496643999999996);
        ctx.bezierCurveTo(71.78237400000002, -30.425363999999995, 71.76419400000002, -28.346146999999995, 71.69235400000001, -28.273599999999995);
        ctx.bezierCurveTo(71.667764, -28.248769999999993, 71.64764400000001, -28.753367999999995, 71.64764400000001, -29.394935999999994);
        ctx.closePath();
        ctx.moveTo(85.45803900000001, -28.571533);
        ctx.bezierCurveTo(85.55950100000001, -28.684751, 85.66544700000001, -28.777383, 85.69347600000002, -28.777383);
        ctx.bezierCurveTo(85.72150600000002, -28.777383, 85.66142600000002, -28.684753, 85.55996000000002, -28.571533);
        ctx.bezierCurveTo(85.45849800000002, -28.458315, 85.35255200000002, -28.365682, 85.32452300000001, -28.365682);
        ctx.bezierCurveTo(85.29649300000001, -28.365682, 85.35657300000001, -28.458312, 85.45803900000001, -28.571533);
        ctx.closePath();
        ctx.moveTo(39.936985000000014, -28.648723);
        ctx.bezierCurveTo(39.81020800000002, -28.811968, 39.81381300000002, -28.815609000000002, 39.975465000000014, -28.687583);
        ctx.bezierCurveTo(40.14524100000001, -28.553125, 40.199232000000016, -28.468603, 40.11534600000002, -28.468603);
        ctx.bezierCurveTo(40.094186000000015, -28.468603, 40.013919000000016, -28.549653000000003, 39.93698300000002, -28.648723);
        ctx.closePath();
        ctx.moveTo(67.98650900000001, -28.631573);
        ctx.bezierCurveTo(67.99140900000002, -28.751476, 68.01554900000001, -28.775864, 68.04808900000002, -28.693753);
        ctx.bezierCurveTo(68.07752900000001, -28.619453, 68.07390900000001, -28.530681, 68.04008900000002, -28.496480000000002);
        ctx.bezierCurveTo(68.00621900000003, -28.462280000000003, 67.98212900000003, -28.52307, 67.98655900000003, -28.631569000000002);
        ctx.closePath();
        ctx.moveTo(84.17101600000001, -28.854578);
        ctx.bezierCurveTo(84.044238, -29.017824, 84.04784300000001, -29.021465, 84.20949600000002, -28.893438);
        ctx.bezierCurveTo(84.30759600000002, -28.815748, 84.38785900000002, -28.734690999999998, 84.38785900000002, -28.713318);
        ctx.bezierCurveTo(84.38785900000002, -28.628608, 84.30415900000003, -28.683128, 84.17101500000003, -28.854577000000003);
        ctx.closePath();
        ctx.moveTo(59.017396000000005, -29.043275);
        ctx.bezierCurveTo(59.022296000000004, -29.163177, 59.04643600000001, -29.187566, 59.078976000000004, -29.105455000000003);
        ctx.bezierCurveTo(59.108416000000005, -29.031155000000002, 59.10479600000001, -28.942382000000002, 59.070976, -28.908181000000003);
        ctx.bezierCurveTo(59.037106, -28.873981000000004, 59.013016, -28.934771, 59.017446, -29.043271000000004);
        ctx.closePath();
        ctx.moveTo(61.696540000000006, -29.858101);
        ctx.bezierCurveTo(61.696845, -30.424190000000003, 61.71392000000001, -30.642641, 61.734570000000005, -30.343546);
        ctx.bezierCurveTo(61.75522000000001, -30.044451, 61.755010000000006, -29.581287, 61.73406000000001, -29.314292000000002);
        ctx.bezierCurveTo(61.71314000000001, -29.047298, 61.69624, -29.292012000000003, 61.69651, -29.858101);
        ctx.closePath();
        ctx.moveTo(65.234622, -29.866701000000003);
        ctx.bezierCurveTo(65.23952200000001, -29.986604000000003, 65.263662, -30.010992, 65.29620200000001, -29.928881000000004);
        ctx.bezierCurveTo(65.325642, -29.854581000000003, 65.322022, -29.765808000000003, 65.28820200000001, -29.731607000000004);
        ctx.bezierCurveTo(65.25433200000002, -29.697407000000005, 65.23024200000002, -29.758197000000003, 65.23467200000002, -29.866696000000005);
        ctx.closePath();
        ctx.moveTo(62.9196, -30.784429);
        ctx.bezierCurveTo(62.919906000000005, -31.350519, 62.936980000000005, -31.568969, 62.95763, -31.269873999999998);
        ctx.bezierCurveTo(62.978280000000005, -30.970779999999998, 62.97807, -30.507614999999998, 62.957121, -30.240620999999997);
        ctx.bezierCurveTo(62.936231, -29.973625999999996, 62.919331, -30.218341, 62.919601, -30.784428999999996);
        ctx.closePath();
        ctx.moveTo(70.142464, -30.218339999999998);
        ctx.bezierCurveTo(70.142464, -30.416470999999998, 70.163444, -30.497524999999996, 70.189074, -30.398459);
        ctx.bezierCurveTo(70.21470400000001, -30.299388999999998, 70.21470400000001, -30.137286, 70.189074, -30.03822);
        ctx.bezierCurveTo(70.16343400000001, -29.939149999999998, 70.142464, -30.02021, 70.142464, -30.218339999999998);
        ctx.closePath();
        ctx.moveTo(86.148289, -30.42419);
        ctx.bezierCurveTo(86.148289, -30.678931, 86.168169, -30.783141999999998, 86.192459, -30.655772);
        ctx.bezierCurveTo(86.216749, -30.528402, 86.216749, -30.319978, 86.192459, -30.192608);
        ctx.bezierCurveTo(86.168169, -30.065238, 86.148289, -30.169448, 86.148289, -30.42419);
        ctx.closePath();
        ctx.moveTo(65.24266800000001, -30.630041);
        ctx.bezierCurveTo(65.24266800000001, -30.771562999999997, 65.265798, -30.829459, 65.29407800000001, -30.758698);
        ctx.bezierCurveTo(65.32234800000002, -30.687938, 65.32234800000002, -30.572145, 65.29407800000001, -30.501383999999998);
        ctx.bezierCurveTo(65.265808, -30.430623999999998, 65.24266800000001, -30.488514, 65.24266800000001, -30.630041);
        ctx.closePath();
        ctx.moveTo(35.64379300000001, -31.418684);
        ctx.bezierCurveTo(35.71386300000001, -31.447233999999998, 35.82852600000001, -31.447233999999998, 35.89859800000001, -31.418684);
        ctx.bezierCurveTo(35.96866800000001, -31.390134, 35.91133800000001, -31.366774, 35.771195000000006, -31.366774);
        ctx.bezierCurveTo(35.63105300000001, -31.366774, 35.573722000000004, -31.390134, 35.64379300000001, -31.418684);
        ctx.closePath();
        ctx.moveTo(36.79041300000001, -31.904006);
        ctx.bezierCurveTo(36.79041300000001, -31.925376, 36.87067300000001, -32.006432, 36.968776000000005, -32.084125);
        ctx.bezierCurveTo(37.130430000000004, -32.212151, 37.134035000000004, -32.208511, 37.007256000000005, -32.045265);
        ctx.bezierCurveTo(36.874109000000004, -31.873817, 36.790412, -31.819294, 36.790412, -31.904006);
        ctx.closePath();
        ctx.moveTo(34.975691000000005, -32.225384);
        ctx.bezierCurveTo(34.977791, -32.395210999999996, 35.000611000000006, -32.452225999999996, 35.026451, -32.352081999999996);
        ctx.bezierCurveTo(35.052291000000004, -32.25193899999999, 35.050591000000004, -32.112989999999996, 35.022651, -32.043305999999994);
        ctx.bezierCurveTo(34.994731, -31.973625999999992, 34.973591000000006, -32.055555999999996, 34.975671000000006, -32.22538399999999);
        ctx.closePath();
        ctx.moveTo(63.48090500000001, -32.148194);
        ctx.bezierCurveTo(63.354127000000005, -32.31144, 63.357732000000006, -32.315079999999995, 63.51938500000001, -32.187053999999996);
        ctx.bezierCurveTo(63.61748500000001, -32.109364, 63.697748000000004, -32.028307, 63.697748000000004, -32.006933999999994);
        ctx.bezierCurveTo(63.697748000000004, -31.922223999999993, 63.614048000000004, -31.976743999999993, 63.480904, -32.14819299999999);
        ctx.closePath();
        ctx.moveTo(53.411701, -32.33689);
        ctx.bezierCurveTo(53.416601, -32.456793, 53.440741, -32.481181, 53.473281, -32.399069999999995);
        ctx.bezierCurveTo(53.502721, -32.324769999999994, 53.499101, -32.235997, 53.465281, -32.201795999999995);
        ctx.bezierCurveTo(53.431411, -32.167595999999996, 53.407320999999996, -32.22838599999999, 53.411750999999995, -32.336884999999995);
        ctx.closePath();
        ctx.moveTo(62.965187, -32.347159999999995);
        ctx.bezierCurveTo(63.038757, -32.376889999999996, 63.12667, -32.373239999999996, 63.160537, -32.339059999999996);
        ctx.bezierCurveTo(63.194407, -32.30486, 63.134206999999996, -32.28053, 63.026765, -32.285);
        ctx.bezierCurveTo(62.908030999999994, -32.289899999999996, 62.883880999999995, -32.31433, 62.965185, -32.347179999999994);
        ctx.closePath();
        ctx.moveTo(68.169304, -32.456967999999996);
        ctx.bezierCurveTo(68.04252699999999, -32.620214, 68.046132, -32.623855, 68.207784, -32.495827999999996);
        ctx.bezierCurveTo(68.305884, -32.418138, 68.38614700000001, -32.337081, 68.38614700000001, -32.315707999999994);
        ctx.bezierCurveTo(68.38614700000001, -32.23099799999999, 68.30244700000002, -32.285517999999996, 68.169302, -32.45696699999999);
        ctx.closePath();
        ctx.moveTo(56.614188999999996, -32.791475999999996);
        ctx.bezierCurveTo(56.715650999999994, -32.904694, 56.821597999999994, -32.997325999999994, 56.849625999999994, -32.997325999999994);
        ctx.bezierCurveTo(56.877655999999995, -32.997325999999994, 56.817575999999995, -32.904695999999994, 56.71611099999999, -32.791475999999996);
        ctx.bezierCurveTo(56.61464899999999, -32.67825799999999, 56.50870199999999, -32.58562499999999, 56.48067399999999, -32.58562499999999);
        ctx.bezierCurveTo(56.45264399999999, -32.58562499999999, 56.51272399999999, -32.67825499999999, 56.614188999999996, -32.791475999999996);
        ctx.closePath();
        ctx.moveTo(67.647216, -32.653789999999994);
        ctx.bezierCurveTo(67.717286, -32.682339999999996, 67.831949, -32.682339999999996, 67.902021, -32.653789999999994);
        ctx.bezierCurveTo(67.972091, -32.62523999999999, 67.914761, -32.601879999999994, 67.774618, -32.601879999999994);
        ctx.bezierCurveTo(67.634476, -32.601879999999994, 67.577145, -32.62523999999999, 67.647216, -32.653789999999994);
        ctx.closePath();
        ctx.moveTo(59.302114, -32.868669999999995);
        ctx.bezierCurveTo(59.175336, -33.031915999999995, 59.178941, -33.03555599999999, 59.340594, -32.907529999999994);
        ctx.bezierCurveTo(59.51037, -32.77307199999999, 59.564361000000005, -32.68854999999999, 59.480476, -32.68854999999999);
        ctx.bezierCurveTo(59.459316, -32.68854999999999, 59.379048000000004, -32.76959999999999, 59.302114, -32.868669999999995);
        ctx.closePath();
        ctx.moveTo(61.130596000000004, -32.96471);
        ctx.bezierCurveTo(61.204166, -32.99444, 61.292078000000004, -32.99079, 61.325946, -32.95661);
        ctx.bezierCurveTo(61.359816, -32.92241, 61.299616, -32.89808, 61.192174, -32.90255);
        ctx.bezierCurveTo(61.07344, -32.90745, 61.04929, -32.93188, 61.130594, -32.964729999999996);
        ctx.closePath();
        ctx.moveTo(31.569595000000003, -33.530089999999994);
        ctx.bezierCurveTo(31.661485000000003, -33.62288999999999, 31.660295000000005, -33.68896699999999, 31.564495000000004, -33.813134999999996);
        ctx.bezierCurveTo(31.454062000000004, -33.956267, 31.460421000000004, -33.958555999999994, 31.619135000000004, -33.83280499999999);
        ctx.bezierCurveTo(31.756974000000003, -33.723594999999996, 31.771852000000003, -33.657757, 31.683095000000005, -33.54975999999999);
        ctx.bezierCurveTo(31.619485000000005, -33.472359999999995, 31.540946000000005, -33.40902799999999, 31.508571000000003, -33.40902799999999);
        ctx.bezierCurveTo(31.476191000000004, -33.40902799999999, 31.503671000000004, -33.46350799999999, 31.569591000000003, -33.530089999999994);
        ctx.closePath();
        ctx.moveTo(74.182686, -34.000848999999995);
        ctx.bezierCurveTo(74.055909, -34.164094999999996, 74.05951400000001, -34.16773499999999, 74.22116600000001, -34.039708999999995);
        ctx.bezierCurveTo(74.31926600000001, -33.962019, 74.39952900000002, -33.880962, 74.39952900000002, -33.85959);
        ctx.bezierCurveTo(74.39952900000002, -33.774879999999996, 74.31582900000002, -33.8294, 74.18268400000001, -34.000848999999995);
        ctx.closePath();
        ctx.moveTo(46.320094, -34.64413);
        ctx.bezierCurveTo(46.354744, -34.700739999999996, 46.403313999999995, -34.74705599999999, 46.428031999999995, -34.74705599999999);
        ctx.bezierCurveTo(46.452752, -34.74705599999999, 46.47297199999999, -34.70073599999999, 46.47297199999999, -34.64413);
        ctx.bezierCurveTo(46.47297199999999, -34.58752, 46.42440199999999, -34.541205, 46.36503499999999, -34.541205);
        ctx.bezierCurveTo(46.305674999999994, -34.541205, 46.28544499999999, -34.587525, 46.32008499999999, -34.64413);
        ctx.closePath();
        ctx.moveTo(30.573186999999997, -35.506394);
        ctx.bezierCurveTo(30.573186999999997, -35.527764, 30.653446999999996, -35.60882, 30.751549999999998, -35.686513);
        ctx.bezierCurveTo(30.913203999999997, -35.814538999999996, 30.916808999999997, -35.810897999999995, 30.790029999999998, -35.647653);
        ctx.bezierCurveTo(30.656882, -35.476205, 30.573185, -35.421682, 30.573185, -35.506394);
        ctx.closePath();
        ctx.moveTo(83.763329, -36.059354);
        ctx.bezierCurveTo(83.636552, -36.2226, 83.640156, -36.22624, 83.801809, -36.098214);
        ctx.bezierCurveTo(83.971586, -35.963755, 84.02557700000001, -35.879234, 83.941691, -35.879234);
        ctx.bezierCurveTo(83.92053100000001, -35.879234, 83.840264, -35.960283999999994, 83.763328, -36.059352999999994);
        ctx.closePath();
        ctx.moveTo(83.206077, -36.625444);
        ctx.lineTo(83.011917, -36.857026000000005);
        ctx.lineTo(83.241241, -36.660954000000004);
        ctx.bezierCurveTo(83.456748, -36.47669500000001, 83.516964, -36.393862000000006, 83.435401, -36.393862000000006);
        ctx.bezierCurveTo(83.416061, -36.393862000000006, 83.312864, -36.498074, 83.206077, -36.62544400000001);
        ctx.closePath();
        ctx.moveTo(81.355689, -37.391139);
        ctx.bezierCurveTo(81.453789, -37.417029, 81.614315, -37.417029, 81.712415, -37.391139);
        ctx.bezierCurveTo(81.810515, -37.365249000000006, 81.730255, -37.344069000000005, 81.53405199999999, -37.344069000000005);
        ctx.bezierCurveTo(81.337853, -37.344069000000005, 81.25758899999998, -37.365249000000006, 81.35568899999998, -37.391139);
        ctx.closePath();
        ctx.moveTo(41.224008, -37.731891000000005);
        ctx.bezierCurveTo(41.325469999999996, -37.84510900000001, 41.431416999999996, -37.93774200000001, 41.459444999999995, -37.93774200000001);
        ctx.bezierCurveTo(41.487474999999996, -37.93774200000001, 41.427395, -37.84511200000001, 41.32592999999999, -37.731891000000005);
        ctx.bezierCurveTo(41.224467999999995, -37.618673, 41.118520999999994, -37.526041000000006, 41.09049199999999, -37.526041000000006);
        ctx.bezierCurveTo(41.06246199999999, -37.526041000000006, 41.12254199999999, -37.618671000000006, 41.22400799999999, -37.731891000000005);
        ctx.closePath();
        ctx.moveTo(28.840517999999996, -37.66783100000001);
        ctx.bezierCurveTo(28.840517999999996, -37.689201000000004, 28.920777999999995, -37.770258000000005, 29.018880999999997, -37.84795100000001);
        ctx.bezierCurveTo(29.180534999999995, -37.97597700000001, 29.184139999999996, -37.972336000000006, 29.057360999999997, -37.80909100000001);
        ctx.bezierCurveTo(28.924213999999996, -37.63764300000001, 28.840517, -37.58312100000001, 28.840517, -37.66783200000001);
        ctx.closePath();
        ctx.moveTo(30.471264999999995, -38.079533000000005);
        ctx.bezierCurveTo(30.471264999999995, -38.100903, 30.551524999999994, -38.181959000000006, 30.649627999999996, -38.259652);
        ctx.bezierCurveTo(30.811281999999995, -38.387678, 30.814886999999995, -38.384038000000004, 30.688107999999996, -38.220792);
        ctx.bezierCurveTo(30.554960999999995, -38.049344000000005, 30.471262999999997, -37.994821, 30.471262999999997, -38.079533000000005);
        ctx.closePath();
        ctx.moveTo(26.797823999999995, -39.404434);
        ctx.bezierCurveTo(27.047736999999994, -39.673326, 27.265594999999994, -39.893329, 27.281951999999993, -39.893329);
        ctx.bezierCurveTo(27.358481999999995, -39.893329, 27.277551999999993, -39.800919, 26.82756399999999, -39.374401);
        ctx.lineTo(26.343434999999992, -38.915538);
        ctx.closePath();
        ctx.moveTo(39.03269099999999, -39.211712);
        ctx.bezierCurveTo(39.03269099999999, -39.233081999999996, 39.112950999999995, -39.314138, 39.21105399999999, -39.391830999999996);
        ctx.bezierCurveTo(39.37270799999999, -39.519856999999995, 39.37631299999999, -39.516217, 39.24953399999999, -39.352971);
        ctx.bezierCurveTo(39.11638699999999, -39.181523, 39.03268999999999, -39.126999999999995, 39.03268999999999, -39.211712);
        ctx.closePath();
        ctx.moveTo(24.852568999999992, -39.455895999999996);
        ctx.bezierCurveTo(24.72579199999999, -39.619142, 24.72939699999999, -39.622783, 24.89104899999999, -39.494755999999995);
        ctx.bezierCurveTo(25.06082499999999, -39.360296999999996, 25.11481599999999, -39.27577599999999, 25.03092999999999, -39.27577599999999);
        ctx.bezierCurveTo(25.009769999999993, -39.27577599999999, 24.92950299999999, -39.35682599999999, 24.85256699999999, -39.45589499999999);
        ctx.closePath();
        ctx.moveTo(29.68365099999999, -39.687478);
        ctx.bezierCurveTo(29.68365099999999, -39.942219, 29.70353099999999, -40.046431, 29.72782099999999, -39.91906);
        ctx.bezierCurveTo(29.752110999999992, -39.79169, 29.752110999999992, -39.583266, 29.72782099999999, -39.455896);
        ctx.bezierCurveTo(29.70353099999999, -39.328526000000004, 29.68365099999999, -39.432736000000006, 29.68365099999999, -39.687478000000006);
        ctx.closePath();
        ctx.moveTo(24.19339499999999, -40.227837);
        ctx.lineTo(23.999235999999993, -40.459419000000004);
        ctx.lineTo(24.228558999999994, -40.263347);
        ctx.bezierCurveTo(24.354687999999992, -40.155508000000005, 24.457882999999992, -40.051296, 24.457882999999992, -40.031765);
        ctx.bezierCurveTo(24.457882999999992, -39.949395, 24.375862999999992, -40.010205, 24.19339499999999, -40.227837);
        ctx.closePath();
        ctx.moveTo(31.600450999999993, -40.570921);
        ctx.bezierCurveTo(31.60535099999999, -40.690824, 31.62949099999999, -40.715212, 31.662030999999992, -40.633100999999996);
        ctx.bezierCurveTo(31.691470999999993, -40.558800999999995, 31.68785099999999, -40.470028, 31.654030999999993, -40.435826999999996);
        ctx.bezierCurveTo(31.620160999999992, -40.401627, 31.59607099999999, -40.462416999999995, 31.600500999999994, -40.570916999999994);
        ctx.closePath();
        ctx.moveTo(37.796628999999996, -40.691001);
        ctx.bezierCurveTo(37.669850999999994, -40.854246, 37.673455999999995, -40.857887, 37.835108999999996, -40.729861);
        ctx.bezierCurveTo(38.004886, -40.595403, 38.058876999999995, -40.510881, 37.974990999999996, -40.510881);
        ctx.bezierCurveTo(37.953830999999994, -40.510881, 37.873563, -40.591930999999995, 37.796628999999996, -40.691001);
        ctx.closePath();
        ctx.moveTo(36.484646999999995, -40.87112);
        ctx.bezierCurveTo(36.616305, -41.012642, 36.746956, -41.128433, 36.774984999999994, -41.128433);
        ctx.bezierCurveTo(36.803014999999995, -41.128433, 36.718225, -41.012642, 36.586569, -40.87112);
        ctx.bezierCurveTo(36.454912, -40.729597999999996, 36.324259999999995, -40.613806999999994, 36.296231999999996, -40.613806999999994);
        ctx.bezierCurveTo(36.268201999999995, -40.613806999999994, 36.35299199999999, -40.729597999999996, 36.484646999999995, -40.87112);
        ctx.closePath();
        ctx.moveTo(23.949730999999993, -40.86232);
        ctx.bezierCurveTo(24.01574099999999, -40.928979999999996, 24.084655999999992, -40.928979999999996, 24.150661999999993, -40.86232);
        ctx.bezierCurveTo(24.216671999999992, -40.79566, 24.182211999999993, -40.760864999999995, 24.050195999999993, -40.760864999999995);
        ctx.bezierCurveTo(23.918182999999992, -40.760864999999995, 23.88372499999999, -40.79566499999999, 23.949730999999993, -40.86232);
        ctx.closePath();
        ctx.moveTo(24.763648999999994, -40.755613999999994);
        ctx.bezierCurveTo(24.763648999999994, -40.77698399999999, 24.843908999999993, -40.858039999999995, 24.942011999999995, -40.93573299999999);
        ctx.bezierCurveTo(25.103665999999993, -41.06375899999999, 25.107270999999994, -41.06011799999999, 24.980491999999995, -40.89687299999999);
        ctx.bezierCurveTo(24.847344999999994, -40.725424999999994, 24.763647999999996, -40.670902999999996, 24.763647999999996, -40.75561499999999);
        ctx.closePath();
        ctx.moveTo(29.663937999999995, -41.18849399999999);
        ctx.bezierCurveTo(29.668837999999994, -41.30839699999999, 29.692977999999993, -41.332784999999994, 29.725517999999994, -41.25067399999999);
        ctx.bezierCurveTo(29.754957999999995, -41.17637399999999, 29.751337999999993, -41.08760099999999, 29.717517999999995, -41.05339999999999);
        ctx.bezierCurveTo(29.683647999999994, -41.01919999999999, 29.659557999999993, -41.07998999999999, 29.663987999999996, -41.18848999999999);
        ctx.closePath();
        ctx.moveTo(33.52891699999999, -41.79746899999999);
        ctx.bezierCurveTo(33.719080999999996, -41.99560099999999, 33.89760199999999, -42.15770799999999, 33.92562999999999, -42.15770799999999);
        ctx.bezierCurveTo(33.95365999999999, -42.15770799999999, 33.82100299999999, -41.99560099999999, 33.630838999999995, -41.79746899999999);
        ctx.bezierCurveTo(33.440675999999996, -41.599337999999996, 33.26215499999999, -41.43723099999999, 33.234125999999996, -41.43723099999999);
        ctx.bezierCurveTo(33.206095999999995, -41.43723099999999, 33.338753999999994, -41.59933799999999, 33.52891699999999, -41.79746899999999);
        ctx.closePath();
        ctx.moveTo(31.623986999999993, -42.106244999999994);
        ctx.bezierCurveTo(31.62459799999999, -42.445899, 31.643586999999993, -42.57243999999999, 31.666266999999994, -42.387446999999995);
        ctx.bezierCurveTo(31.688946999999995, -42.202453999999996, 31.688486999999995, -41.924555, 31.665266999999993, -41.76989499999999);
        ctx.bezierCurveTo(31.642006999999992, -41.615233999999994, 31.62344699999999, -41.76659499999999, 31.624026999999995, -42.106244999999994);
        ctx.closePath();
        ctx.moveTo(22.814134999999993, -41.823201);
        ctx.bezierCurveTo(22.68735699999999, -41.986447, 22.690961999999992, -41.990086999999995, 22.852614999999993, -41.862061);
        ctx.bezierCurveTo(23.022390999999992, -41.727602999999995, 23.07638199999999, -41.643080999999995, 22.992496999999993, -41.643080999999995);
        ctx.bezierCurveTo(22.971336999999995, -41.643080999999995, 22.891068999999995, -41.72413099999999, 22.814133999999992, -41.823201);
        ctx.closePath();
        ctx.moveTo(35.677319999999995, -42.217748);
        ctx.bezierCurveTo(35.682219999999994, -42.337651, 35.70636, -42.362039, 35.738899999999994, -42.279928);
        ctx.bezierCurveTo(35.768339999999995, -42.205628, 35.76472, -42.116855, 35.73089999999999, -42.082654);
        ctx.bezierCurveTo(35.69702999999999, -42.048454, 35.67293999999999, -42.109244, 35.67736999999999, -42.217743999999996);
        ctx.closePath();
        ctx.moveTo(22.202603999999994, -42.543678);
        ctx.bezierCurveTo(22.075826999999993, -42.706924, 22.079431999999994, -42.710565, 22.241083999999994, -42.582538);
        ctx.bezierCurveTo(22.410859999999992, -42.448079, 22.464850999999992, -42.363558, 22.380964999999993, -42.363558);
        ctx.bezierCurveTo(22.359804999999994, -42.363558, 22.27953799999999, -42.444607999999995, 22.20260199999999, -42.543676999999995);
        ctx.closePath();
        ctx.moveTo(23.336743999999992, -42.723798);
        ctx.bezierCurveTo(23.468401999999994, -42.865320000000004, 23.59905299999999, -42.981111000000006, 23.62708199999999, -42.981111000000006);
        ctx.bezierCurveTo(23.655111999999992, -42.981111000000006, 23.57032199999999, -42.865320000000004, 23.43866599999999, -42.723798);
        ctx.bezierCurveTo(23.30700899999999, -42.582275, 23.176356999999992, -42.466484, 23.14832899999999, -42.466484);
        ctx.bezierCurveTo(23.12029899999999, -42.466484, 23.20508899999999, -42.582275, 23.33674399999999, -42.723798);
        ctx.closePath();
        ctx.moveTo(25.46409999999999, -43.058305000000004);
        ctx.bezierCurveTo(25.33732199999999, -43.221551000000005, 25.34092699999999, -43.225191, 25.50257999999999, -43.097165000000004);
        ctx.bezierCurveTo(25.60067999999999, -43.01947500000001, 25.680942999999992, -42.938418000000006, 25.680942999999992, -42.917045);
        ctx.bezierCurveTo(25.680942999999992, -42.832335, 25.59724299999999, -42.886855000000004, 25.464098999999994, -43.058304);
        ctx.closePath();
        ctx.moveTo(26.23182999999999, -43.109765);
        ctx.bezierCurveTo(26.037826999999993, -43.34116, 26.037840999999993, -43.341201000000005, 26.24978999999999, -43.161005);
        ctx.bezierCurveTo(26.366451999999992, -43.061815, 26.49993399999999, -43.0155, 26.54641499999999, -43.058080000000004);
        ctx.bezierCurveTo(26.592894999999988, -43.100660000000005, 26.59793499999999, -43.077600000000004, 26.557604999999988, -43.006840000000004);
        ctx.bezierCurveTo(26.46167499999999, -42.838508000000004, 26.45837499999999, -42.83955100000001, 26.231829999999988, -43.109765);
        ctx.closePath();
        ctx.moveTo(34.54813499999999, -42.910389);
        ctx.bezierCurveTo(34.54813499999999, -42.928099, 34.69719499999999, -43.078631, 34.87937999999999, -43.244897);
        ctx.lineTo(35.21062599999999, -43.547198);
        ctx.lineTo(34.911272999999994, -43.21269);
        ctx.bezierCurveTo(34.63223299999999, -42.900882, 34.548134999999995, -42.830873000000004, 34.548134999999995, -42.910389);
        ctx.closePath();
        ctx.moveTo(22.393967999999987, -43.049274000000004);
        ctx.bezierCurveTo(22.464037999999988, -43.07782400000001, 22.578701999999986, -43.07782400000001, 22.648772999999988, -43.049274000000004);
        ctx.bezierCurveTo(22.71884299999999, -43.020724, 22.66151299999999, -42.997354, 22.521370999999988, -42.997354);
        ctx.bezierCurveTo(22.38122799999999, -42.997354, 22.323896999999988, -43.020714, 22.393967999999987, -43.049274000000004);
        ctx.closePath();
        ctx.moveTo(30.929912999999985, -43.804511000000005);
        ctx.bezierCurveTo(31.148865999999984, -44.030947000000005, 31.350941999999986, -44.216213, 31.378969999999985, -44.216213);
        ctx.bezierCurveTo(31.406999999999986, -44.216213, 31.250786999999985, -44.030947000000005, 31.031834999999983, -43.804511000000005);
        ctx.bezierCurveTo(30.81288299999998, -43.578075000000005, 30.610805999999982, -43.392810000000004, 30.582777999999983, -43.392810000000004);
        ctx.bezierCurveTo(30.554747999999982, -43.392810000000004, 30.710960999999983, -43.578075000000005, 30.929912999999985, -43.804511000000005);
        ctx.closePath();
        ctx.moveTo(34.35233799999998, -43.6587);
        ctx.bezierCurveTo(34.35723799999998, -43.778603000000004, 34.381377999999984, -43.802991000000006, 34.41391799999998, -43.72088);
        ctx.bezierCurveTo(34.44335799999998, -43.64658, 34.439737999999984, -43.557807000000004, 34.40591799999998, -43.523606);
        ctx.bezierCurveTo(34.37204799999998, -43.489406, 34.34795799999998, -43.550196, 34.352387999999976, -43.658696);
        ctx.closePath();
        ctx.moveTo(25.58655299999998, -43.846810000000005);
        ctx.bezierCurveTo(25.49460299999998, -43.958699, 25.49758299999998, -44.00974000000001, 25.599552999999982, -44.069163);
        ctx.bezierCurveTo(25.672342999999984, -44.111583, 25.697902999999982, -44.10839300000001, 25.656342999999982, -44.062063);
        ctx.bezierCurveTo(25.61478299999998, -44.015743, 25.63187299999998, -43.915681, 25.694302999999984, -43.839711);
        ctx.bezierCurveTo(25.756732999999983, -43.763741, 25.784892999999983, -43.701585, 25.756862999999985, -43.701585);
        ctx.bezierCurveTo(25.728832999999984, -43.701585, 25.652193999999984, -43.766935000000004, 25.586550999999986, -43.846809);
        ctx.closePath();
        ctx.moveTo(20.38101399999998, -46.943735000000004);
        ctx.bezierCurveTo(20.51267099999998, -47.085257000000006, 20.643322999999977, -47.20104800000001, 20.67135099999998, -47.20104800000001);
        ctx.bezierCurveTo(20.69938099999998, -47.20104800000001, 20.61459099999998, -47.085257000000006, 20.48293599999998, -46.943735000000004);
        ctx.bezierCurveTo(20.35127899999998, -46.802212000000004, 20.220626999999983, -46.686421, 20.19259899999998, -46.686421);
        ctx.bezierCurveTo(20.16456899999998, -46.686421, 20.24935899999998, -46.802212000000004, 20.38101399999998, -46.943735000000004);
        ctx.closePath();
        ctx.moveTo(26.81012999999998, -52.510281000000006);
        ctx.bezierCurveTo(26.81502999999998, -52.63018400000001, 26.839169999999978, -52.65457200000001, 26.87170999999998, -52.572461000000004);
        ctx.bezierCurveTo(26.90114999999998, -52.498161, 26.89752999999998, -52.40938800000001, 26.86370999999998, -52.375187000000004);
        ctx.bezierCurveTo(26.82983999999998, -52.340987000000005, 26.80574999999998, -52.401777, 26.81017999999998, -52.510276000000005);
        ctx.closePath();
        ctx.moveTo(15.896458, -54.54761);
        ctx.bezierCurveTo(15.896458, -54.568979999999996, 15.976718000000002, -54.650036, 16.074821, -54.727729);
        ctx.bezierCurveTo(16.236475, -54.855754999999995, 16.24008, -54.852115, 16.113301, -54.688869);
        ctx.bezierCurveTo(15.980154, -54.517421, 15.896457, -54.462897999999996, 15.896457, -54.54761);
        ctx.closePath();
        ctx.moveTo(103.26885999999999, -57.66746);
        ctx.bezierCurveTo(103.36695999999999, -57.693349999999995, 103.52748999999999, -57.693349999999995, 103.62558999999999, -57.66746);
        ctx.bezierCurveTo(103.72368999999999, -57.64157, 103.64338999999998, -57.62039, 103.44721999999999, -57.62039);
        ctx.bezierCurveTo(103.25101999999998, -57.62039, 103.17075999999999, -57.64157, 103.26885999999999, -57.66746);
        ctx.closePath();
        ctx.moveTo(22.476961999999986, -57.832532);
        ctx.bezierCurveTo(22.515231999999987, -57.934039, 22.572231999999985, -57.991162, 22.603607999999987, -57.959473);
        ctx.bezierCurveTo(22.634987999999986, -57.927783000000005, 22.603672999999986, -57.844732, 22.534017999999985, -57.774914);
        ctx.bezierCurveTo(22.433357999999984, -57.674020000000006, 22.421650999999986, -57.685844, 22.476957999999986, -57.832534);
        ctx.closePath();
        ctx.moveTo(101.79736999999999, -57.769742);
        ctx.bezierCurveTo(101.87096999999999, -57.799472, 101.95884999999998, -57.795822, 101.99271999999999, -57.761642);
        ctx.bezierCurveTo(102.02662, -57.727442, 101.96641999999999, -57.703112000000004, 101.85893999999999, -57.707582);
        ctx.bezierCurveTo(101.74020999999999, -57.712482, 101.71605999999998, -57.736912000000004, 101.79733999999999, -57.769762);
        ctx.closePath();
        ctx.moveTo(104.95693999999999, -57.769742);
        ctx.bezierCurveTo(105.03053999999999, -57.799472, 105.11841999999999, -57.795822, 105.15229, -57.761642);
        ctx.bezierCurveTo(105.18619, -57.727442, 105.12598999999999, -57.703112000000004, 105.01852, -57.707582);
        ctx.bezierCurveTo(104.89977999999999, -57.712482, 104.87563, -57.736912000000004, 104.95692, -57.769762);
        ctx.closePath();
        ctx.moveTo(23.13290099999999, -58.664622);
        ctx.bezierCurveTo(23.13290099999999, -58.685992, 23.21316099999999, -58.767048, 23.31126399999999, -58.844741);
        ctx.bezierCurveTo(23.47291799999999, -58.972767, 23.47652299999999, -58.969125999999996, 23.34974399999999, -58.805881);
        ctx.bezierCurveTo(23.216595999999992, -58.634433, 23.13289899999999, -58.579911, 23.13289899999999, -58.664623);
        ctx.closePath();
        ctx.moveTo(75.75592799999998, -59.937817);
        ctx.bezierCurveTo(76.47391599999999, -59.955537, 77.62053599999999, -59.955487000000005, 78.30397099999999, -59.937714);
        ctx.bezierCurveTo(78.987405, -59.919934, 78.39996099999999, -59.905434, 76.99853499999999, -59.905504);
        ctx.bezierCurveTo(75.59711099999998, -59.905567, 75.037938, -59.920114, 75.75592799999998, -59.937834);
        ctx.closePath();
        ctx.moveTo(22.24302499999998, -60.446819000000005);
        ctx.bezierCurveTo(22.342194999999982, -60.47290900000001, 22.479785999999983, -60.471199000000006, 22.54879099999998, -60.44301900000001);
        ctx.bezierCurveTo(22.61779099999998, -60.414829000000005, 22.53666099999998, -60.393469, 22.36848799999998, -60.39556900000001);
        ctx.bezierCurveTo(22.20031699999998, -60.39766900000001, 22.14385899999998, -60.42073900000001, 22.24302499999998, -60.44682900000001);
        ctx.closePath();
        ctx.moveTo(18.87251299999998, -60.863753);
        ctx.bezierCurveTo(19.36017599999998, -60.882583000000004, 20.18574199999998, -60.882663, 20.70710499999998, -60.863959);
        ctx.bezierCurveTo(21.22846699999998, -60.845239, 20.82946999999998, -60.829839, 19.82044499999998, -60.829729);
        ctx.bezierCurveTo(18.81141999999998, -60.829626, 18.384849999999982, -60.844939000000004, 18.87251299999998, -60.863759);
        ctx.closePath();
        ctx.moveTo(86.91161199999998, -62.712645);
        ctx.bezierCurveTo(87.03839299999997, -62.737265, 87.22185199999997, -62.736335000000004, 87.31929899999997, -62.710545);
        ctx.bezierCurveTo(87.41674899999997, -62.684785000000005, 87.31299899999998, -62.664645, 87.08878599999997, -62.66578500000001);
        ctx.bezierCurveTo(86.86455799999997, -62.66688500000001, 86.78482999999997, -62.688005000000004, 86.91161199999998, -62.71262500000001);
        ctx.closePath();
        ctx.moveTo(12.37374699999998, -64.724089);
        ctx.lineTo(12.074392999999981, -65.058597);
        ctx.lineTo(12.405638999999981, -64.75629500000001);
        ctx.bezierCurveTo(12.71440599999998, -64.47450800000001, 12.783732999999982, -64.389582, 12.704991999999981, -64.389582);
        ctx.bezierCurveTo(12.68745199999998, -64.389582, 12.538390999999981, -64.54011, 12.37374699999998, -64.724089);
        ctx.closePath();
        ctx.moveTo(12.48280199999998, -65.726433);
        ctx.bezierCurveTo(12.44709199999998, -65.784773, 12.48800199999998, -65.802033, 12.57871199999998, -65.766883);
        ctx.bezierCurveTo(12.755282999999979, -65.698463, 12.78758899999998, -65.62468500000001, 12.64098199999998, -65.62468500000001);
        ctx.bezierCurveTo(12.58823199999998, -65.62468500000001, 12.51705399999998, -65.67047500000001, 12.48280599999998, -65.72643200000002);
        ctx.closePath();
        ctx.moveTo(12.13340099999998, -66.508128);
        ctx.bezierCurveTo(12.138300999999979, -66.628031, 12.16244099999998, -66.652419, 12.194980999999979, -66.570318);
        ctx.bezierCurveTo(12.224420999999978, -66.496018, 12.220800999999978, -66.407245, 12.18698099999998, -66.37304400000001);
        ctx.bezierCurveTo(12.15311099999998, -66.33884400000001, 12.12902099999998, -66.399634, 12.13345099999998, -66.508133);
        ctx.closePath();
        ctx.moveTo(12.12540099999998, -68.236681);
        ctx.bezierCurveTo(12.12540099999998, -68.25805100000001, 12.205660999999981, -68.339107, 12.30376399999998, -68.41680000000001);
        ctx.bezierCurveTo(12.46541799999998, -68.54482600000001, 12.46902299999998, -68.54118500000001, 12.34224399999998, -68.37794000000001);
        ctx.bezierCurveTo(12.20909699999998, -68.20649200000001, 12.12539999999998, -68.15196900000001, 12.12539999999998, -68.236681);
        ctx.closePath();
        ctx.moveTo(18.41906799999998, -68.889829);
        ctx.bezierCurveTo(18.601252999999982, -68.912659, 18.89937399999998, -68.912659, 19.08155899999998, -68.889829);
        ctx.bezierCurveTo(19.26374399999998, -68.866999, 19.11467899999998, -68.848319, 18.75031399999998, -68.848319);
        ctx.bezierCurveTo(18.385942999999983, -68.848319, 18.23688299999998, -68.866999, 18.41906799999998, -68.889829);
        ctx.closePath();
        ctx.moveTo(113.64748999999998, -69.390039);
        ctx.bezierCurveTo(113.65248999999997, -69.509942, 113.67648999999997, -69.53433, 113.70908999999997, -69.452219);
        ctx.bezierCurveTo(113.73848999999997, -69.377919, 113.73488999999998, -69.289146, 113.70108999999998, -69.254945);
        ctx.bezierCurveTo(113.66718999999998, -69.22074500000001, 113.64308999999997, -69.281535, 113.64758999999998, -69.39003500000001);
        ctx.closePath();
        ctx.moveTo(17.552732999999975, -70.224352);
        ctx.bezierCurveTo(17.650832999999974, -70.250242, 17.811359999999976, -70.250242, 17.909458999999973, -70.224352);
        ctx.bezierCurveTo(18.007558999999972, -70.19846199999999, 17.927298999999973, -70.17728199999999, 17.731095999999972, -70.17728199999999);
        ctx.bezierCurveTo(17.534896999999972, -70.17728199999999, 17.454633999999974, -70.19846199999999, 17.55273299999997, -70.224352);
        ctx.closePath();
        ctx.moveTo(113.74940999999997, -70.522218);
        ctx.bezierCurveTo(113.75440999999996, -70.64212099999999, 113.77840999999997, -70.66650899999999, 113.81100999999997, -70.584398);
        ctx.bezierCurveTo(113.84040999999996, -70.510098, 113.83680999999997, -70.421325, 113.80300999999997, -70.387124);
        ctx.bezierCurveTo(113.76910999999997, -70.352924, 113.74500999999997, -70.413714, 113.74950999999997, -70.522214);
        ctx.closePath();
        ctx.moveTo(113.86314999999998, -71.954596);
        ctx.bezierCurveTo(113.86514999999997, -72.124423, 113.88804999999998, -72.18143699999999, 113.91394999999997, -72.081294);
        ctx.bezierCurveTo(113.93974999999998, -71.981151, 113.93804999999998, -71.842202, 113.90994999999997, -71.772518);
        ctx.bezierCurveTo(113.88204999999996, -71.702838, 113.86094999999996, -71.784768, 113.86294999999997, -71.95459600000001);
        ctx.closePath();
        ctx.moveTo(68.79388299999997, -75.087606);
        ctx.lineTo(68.79388299999997, -76.52234899999999);
        ctx.lineTo(68.41167599999997, -76.56271899999999);
        ctx.lineTo(68.02946999999998, -76.60308899999998);
        ctx.lineTo(68.46263699999997, -76.62038899999999);
        ctx.lineTo(68.89580499999997, -76.637689);
        ctx.lineTo(68.89580499999997, -75.14527199999999);
        ctx.bezierCurveTo(68.89580499999997, -74.32444199999999, 68.87287499999996, -73.65285399999999, 68.84484499999996, -73.65285399999999);
        ctx.bezierCurveTo(68.81681499999996, -73.65285399999999, 68.79388499999996, -74.29848799999999, 68.79388499999996, -75.087595);
        ctx.closePath();
        ctx.moveTo(97.53581099999997, -75.087606);
        ctx.lineTo(97.53581099999997, -76.52234899999999);
        ctx.lineTo(97.15360399999997, -76.56271899999999);
        ctx.lineTo(96.77139799999998, -76.60308899999998);
        ctx.lineTo(97.20456499999997, -76.62038899999999);
        ctx.lineTo(97.63773199999997, -76.637689);
        ctx.lineTo(97.63773199999997, -75.14527199999999);
        ctx.bezierCurveTo(97.63773199999997, -74.32444199999999, 97.61480199999997, -73.65285399999999, 97.58677199999997, -73.65285399999999);
        ctx.bezierCurveTo(97.55874199999997, -73.65285399999999, 97.53581199999996, -74.29848799999999, 97.53581199999996, -75.087595);
        ctx.closePath();
        ctx.moveTo(95.67688, -76.60755);
        ctx.bezierCurveTo(95.803662, -76.63217, 95.987121, -76.63123, 96.08456699999999, -76.60545);
        ctx.bezierCurveTo(96.18201699999999, -76.57969, 96.078267, -76.55955, 95.85405499999999, -76.56069000000001);
        ctx.bezierCurveTo(95.62982699999999, -76.56179, 95.55009899999999, -76.58291000000001, 95.67687999999998, -76.60753000000001);
        ctx.closePath();
        ctx.moveTo(13.042649999999995, -81.205257);
        ctx.bezierCurveTo(13.042649999999995, -81.22662700000001, 13.122909999999994, -81.307683, 13.221012999999994, -81.38537600000001);
        ctx.bezierCurveTo(13.382665999999993, -81.51340200000001, 13.386270999999994, -81.50976200000001, 13.259492999999994, -81.34651600000001);
        ctx.bezierCurveTo(13.126344999999993, -81.17506800000001, 13.042648999999994, -81.120545, 13.042648999999994, -81.205257);
        ctx.closePath();
        ctx.moveTo(19.471764999999994, -81.638137);
        ctx.bezierCurveTo(19.476664999999993, -81.75804, 19.500804999999993, -81.782429, 19.533344999999994, -81.700317);
        ctx.bezierCurveTo(19.562784999999995, -81.626017, 19.559164999999993, -81.537244, 19.525344999999994, -81.503043);
        ctx.bezierCurveTo(19.491474999999994, -81.468843, 19.467384999999993, -81.529633, 19.471814999999996, -81.638132);
        ctx.closePath();
        ctx.moveTo(104.39945999999999, -83.688068);
        ctx.bezierCurveTo(104.39986999999999, -84.14094, 104.41775999999999, -84.313402, 104.43925999999999, -84.071318);
        ctx.bezierCurveTo(104.46076, -83.829233, 104.46045999999998, -83.458702, 104.43854999999999, -83.247915);
        ctx.bezierCurveTo(104.41664999999999, -83.03712800000001, 104.39904999999999, -83.235195, 104.39944999999999, -83.688068);
        ctx.closePath();
        ctx.moveTo(20.062247999999997, -83.199173);
        ctx.bezierCurveTo(19.935470999999996, -83.362418, 19.939075999999996, -83.366059, 20.100727999999997, -83.238033);
        ctx.bezierCurveTo(20.198827999999995, -83.160343, 20.279090999999998, -83.079286, 20.279090999999998, -83.057914);
        ctx.bezierCurveTo(20.279090999999998, -82.973204, 20.195390999999997, -83.02772399999999, 20.062247999999997, -83.199173);
        ctx.closePath();
        ctx.moveTo(22.133552999999996, -84.09977);
        ctx.bezierCurveTo(22.135652999999994, -84.269596, 22.158472999999997, -84.326611, 22.184312999999996, -84.22646800000001);
        ctx.bezierCurveTo(22.210152999999995, -84.12632400000001, 22.208452999999995, -83.98737500000001, 22.180512999999998, -83.917691);
        ctx.bezierCurveTo(22.152592999999996, -83.848011, 22.131452999999997, -83.929941, 22.133532999999996, -84.09977);
        ctx.closePath();
        ctx.moveTo(72.870705, -87.28362000000001);
        ctx.lineTo(72.870705, -90.10723100000001);
        ctx.lineTo(72.59042, -90.15011100000001);
        ctx.bezierCurveTo(72.329545, -90.19002100000002, 72.333075, -90.19405100000002, 72.64138, -90.20841100000001);
        ctx.lineTo(72.97262599999999, -90.22383100000002);
        ctx.lineTo(72.97262599999999, -87.34192100000001);
        ctx.bezierCurveTo(72.97262599999999, -85.75687000000002, 72.94969599999999, -84.46001000000001, 72.92166599999999, -84.46001000000001);
        ctx.bezierCurveTo(72.89363599999999, -84.46001000000001, 72.87070599999998, -85.730635, 72.87070599999998, -87.28362200000001);
        ctx.closePath();
        ctx.moveTo(81.024443, -87.28362000000001);
        ctx.lineTo(81.024443, -90.10723100000001);
        ctx.lineTo(80.74415900000001, -90.15011100000001);
        ctx.bezierCurveTo(80.48328400000001, -90.19002100000002, 80.48681300000001, -90.19405100000002, 80.79511900000001, -90.20841100000001);
        ctx.lineTo(81.126365, -90.22383100000002);
        ctx.lineTo(81.126365, -87.34192100000001);
        ctx.bezierCurveTo(81.126365, -85.75687000000002, 81.103435, -84.46001000000001, 81.075405, -84.46001000000001);
        ctx.bezierCurveTo(81.047375, -84.46001000000001, 81.024445, -85.730635, 81.024445, -87.28362200000001);
        ctx.closePath();
        ctx.moveTo(86.959704, -87.31619000000002);
        ctx.lineTo(86.93590400000001, -90.22383200000002);
        ctx.lineTo(87.267149, -90.20841200000001);
        ctx.bezierCurveTo(87.573122, -90.194162, 87.577132, -90.189732, 87.319709, -90.15027200000002);
        ctx.lineTo(87.041026, -90.10755200000001);
        ctx.lineTo(87.012266, -87.25805300000002);
        ctx.lineTo(86.98350599999999, -84.40855500000002);
        ctx.closePath();
        ctx.moveTo(104.78025, -85.44637900000002);
        ctx.bezierCurveTo(104.78524999999999, -85.56628200000002, 104.80924999999999, -85.59067000000002, 104.84185, -85.50855900000002);
        ctx.bezierCurveTo(104.87124999999999, -85.43425900000003, 104.86765, -85.34548600000002, 104.83385, -85.31128500000003);
        ctx.bezierCurveTo(104.79995, -85.27708500000003, 104.77584999999999, -85.33787500000003, 104.78035, -85.44637400000002);
        ctx.closePath();
        ctx.moveTo(17.552686, -86.79809);
        ctx.bezierCurveTo(17.706843000000003, -86.82167, 17.959099000000002, -86.82167, 18.113256, -86.79809);
        ctx.bezierCurveTo(18.267412, -86.77451, 18.141286, -86.75521, 17.832971, -86.75521);
        ctx.bezierCurveTo(17.524658000000002, -86.75521, 17.39853, -86.7745, 17.552686, -86.79809);
        ctx.closePath();
        ctx.moveTo(104.0668, -87.299036);
        ctx.bezierCurveTo(104.0718, -87.418939, 104.0958, -87.443327, 104.1284, -87.361216);
        ctx.bezierCurveTo(104.1578, -87.286916, 104.1542, -87.198143, 104.1204, -87.163942);
        ctx.bezierCurveTo(104.0865, -87.12974200000001, 104.0624, -87.190532, 104.0669, -87.29903200000001);
        ctx.closePath();
        ctx.moveTo(20.565747, -87.309306);
        ctx.bezierCurveTo(20.639317000000002, -87.33903600000001, 20.727230000000002, -87.335386, 20.761097000000003, -87.30120600000001);
        ctx.bezierCurveTo(20.794967000000003, -87.26700600000001, 20.734767, -87.242676, 20.627325000000003, -87.247146);
        ctx.bezierCurveTo(20.508592000000004, -87.252046, 20.484441000000004, -87.276476, 20.565745000000003, -87.309326);
        ctx.closePath();
        ctx.moveTo(23.250915000000003, -88.16532500000001);
        ctx.bezierCurveTo(23.250915000000003, -88.306847, 23.274045, -88.364742, 23.302325000000003, -88.29398100000002);
        ctx.bezierCurveTo(23.330595000000002, -88.22322100000001, 23.330595000000002, -88.10742900000001, 23.302325000000003, -88.03666800000002);
        ctx.bezierCurveTo(23.274055000000004, -87.96590800000001, 23.250915000000003, -88.02379800000001, 23.250915000000003, -88.16532500000002);
        ctx.closePath();
        ctx.moveTo(103.79427000000001, -89.42616000000001);
        ctx.lineTo(103.60011000000002, -89.65774200000001);
        ctx.lineTo(103.82943000000002, -89.46167100000001);
        ctx.bezierCurveTo(103.95556000000002, -89.35383200000001, 104.05875000000002, -89.24962000000001, 104.05875000000002, -89.230089);
        ctx.bezierCurveTo(104.05875000000002, -89.14771900000001, 103.97675000000002, -89.20852900000001, 103.79427000000001, -89.42616000000001);
        ctx.closePath();
        ctx.moveTo(13.952231000000012, -89.99225000000001);
        ctx.lineTo(13.705141000000012, -90.27529500000001);
        ctx.lineTo(13.985426000000011, -90.02577200000002);
        ctx.bezierCurveTo(14.24739400000001, -89.79255400000002, 14.312451000000012, -89.70920500000001, 14.232516000000011, -89.70920500000001);
        ctx.bezierCurveTo(14.214256000000011, -89.70920500000001, 14.088131000000011, -89.83657500000001, 13.952231000000012, -89.99225000000001);
        ctx.closePath();
        ctx.moveTo(102.42772000000001, -91.43807600000001);
        ctx.lineTo(102.47842000000001, -93.157205);
        ctx.lineTo(102.50682000000002, -91.51825000000001);
        ctx.bezierCurveTo(102.52252000000001, -90.616825, 102.49982000000001, -89.84321600000001, 102.45612000000001, -89.79912100000001);
        ctx.bezierCurveTo(102.41262000000002, -89.75502100000001, 102.39982000000002, -90.49255600000001, 102.42762000000002, -91.43807600000001);
        ctx.closePath();
        ctx.moveTo(79.013429, -90.19223300000002);
        ctx.bezierCurveTo(79.112599, -90.21833300000002, 79.25019, -90.21661300000001, 79.319194, -90.18843300000002);
        ctx.bezierCurveTo(79.388194, -90.16024300000002, 79.307064, -90.13888300000002, 79.138891, -90.14098300000002);
        ctx.bezierCurveTo(78.97072, -90.14308300000002, 78.91426200000001, -90.16615300000002, 79.013429, -90.19224300000002);
        ctx.closePath();
        ctx.moveTo(62.40951, -92.899888);
        ctx.bezierCurveTo(62.40951, -93.437674, 62.42669, -93.657677, 62.44768, -93.388784);
        ctx.bezierCurveTo(62.46868, -93.119891, 62.46868, -92.679886, 62.44768, -92.410993);
        ctx.bezierCurveTo(62.42668, -92.1421, 62.40951, -92.362103, 62.40951, -92.899888);
        ctx.closePath();
        ctx.moveTo(24.763649, -92.218271);
        ctx.bezierCurveTo(24.763649, -92.239641, 24.843909, -92.32069800000001, 24.942012000000002, -92.398391);
        ctx.bezierCurveTo(25.103666, -92.52641700000001, 25.107271, -92.52277600000001, 24.980492, -92.359531);
        ctx.bezierCurveTo(24.847345, -92.188083, 24.763648000000003, -92.133561, 24.763648000000003, -92.218272);
        ctx.closePath();
        ctx.moveTo(21.998761000000002, -92.668306);
        ctx.bezierCurveTo(21.871983, -92.831552, 21.875588, -92.835193, 22.037241, -92.707166);
        ctx.bezierCurveTo(22.135341, -92.629476, 22.215604000000003, -92.548419, 22.215604000000003, -92.527047);
        ctx.bezierCurveTo(22.215604000000003, -92.442337, 22.131904000000002, -92.49685699999999, 21.998760000000004, -92.66830499999999);
        ctx.closePath();
        ctx.moveTo(102.13029, -93.680406);
        ctx.bezierCurveTo(102.13529, -93.800308, 102.15929, -93.824697, 102.19189, -93.742586);
        ctx.bezierCurveTo(102.22129, -93.66828600000001, 102.21769, -93.579513, 102.18389, -93.54531200000001);
        ctx.bezierCurveTo(102.14999, -93.51111200000001, 102.12599, -93.57190200000001, 102.13039, -93.68040200000002);
        ctx.closePath();
        ctx.moveTo(23.284721000000005, -97.45433600000001);
        ctx.lineTo(21.451192000000006, -99.33272400000001);
        ctx.lineTo(23.311264000000005, -97.48114000000001);
        ctx.bezierCurveTo(24.334303000000006, -96.46276800000001, 25.171335000000006, -95.61749400000001, 25.171335000000006, -95.60275200000001);
        ctx.bezierCurveTo(25.171335000000006, -95.529442, 24.988230000000005, -95.70915000000001, 23.284721000000005, -97.45433600000001);
        ctx.closePath();
        ctx.moveTo(73.796047, -98.00327100000001);
        ctx.bezierCurveTo(73.80094700000001, -98.123174, 73.825087, -98.14756200000001, 73.85762700000001, -98.06545100000001);
        ctx.bezierCurveTo(73.887067, -97.99115100000002, 73.883447, -97.90238000000001, 73.84962700000001, -97.86817700000002);
        ctx.bezierCurveTo(73.81575700000002, -97.83397700000002, 73.79166700000002, -97.89476700000002, 73.79609700000002, -98.00326700000002);
        ctx.closePath();
        ctx.moveTo(22.334443, -98.90386800000002);
        ctx.bezierCurveTo(21.809471000000002, -99.43622400000001, 21.45821, -99.86450500000002, 21.546563, -99.86450500000002);
        ctx.bezierCurveTo(21.634252999999998, -99.86450500000002, 21.68161, -99.83987500000002, 21.651805, -99.80978500000002);
        ctx.bezierCurveTo(21.621995, -99.77968500000001, 21.999427, -99.34739900000002, 22.490534, -98.84914800000001);
        ctx.bezierCurveTo(22.981641, -98.35089600000002, 23.360574, -97.94323700000001, 23.332606000000002, -97.94323700000001);
        ctx.bezierCurveTo(23.304636000000002, -97.94323700000001, 22.855466000000003, -98.37552300000002, 22.334443, -98.903873);
        ctx.closePath();
        ctx.moveTo(81.949786, -98.20912200000002);
        ctx.bezierCurveTo(81.95468600000001, -98.32902500000002, 81.978826, -98.35341300000002, 82.01136600000001, -98.27130200000002);
        ctx.bezierCurveTo(82.040806, -98.19700200000003, 82.037186, -98.10823000000002, 82.00336600000001, -98.07402800000003);
        ctx.bezierCurveTo(81.96949600000002, -98.03982800000003, 81.94540600000002, -98.10061800000003, 81.94983600000002, -98.20911800000003);
        ctx.closePath();
        ctx.moveTo(85.72089, -100.16470000000002);
        ctx.bezierCurveTo(85.72579, -100.28461000000003, 85.74992999999999, -100.30899000000002, 85.78247, -100.22690000000003);
        ctx.bezierCurveTo(85.81191, -100.15260000000004, 85.80829, -100.06383000000002, 85.77447000000001, -100.02962000000002);
        ctx.bezierCurveTo(85.74060000000001, -99.99542000000002, 85.71651000000001, -100.05622000000002, 85.72094000000001, -100.16471000000003);
        ctx.closePath();
        ctx.moveTo(74.101812, -100.57641000000002);
        ctx.bezierCurveTo(74.106712, -100.69631000000003, 74.13085199999999, -100.72070000000002, 74.163392, -100.63861000000003);
        ctx.bezierCurveTo(74.192832, -100.56431000000003, 74.189212, -100.47554000000002, 74.155392, -100.44134000000003);
        ctx.bezierCurveTo(74.12152200000001, -100.40714000000003, 74.09743200000001, -100.46794000000003, 74.10186200000001, -100.57643000000003);
        ctx.closePath();
        ctx.moveTo(82.255551, -100.78226000000002);
        ctx.bezierCurveTo(82.260451, -100.90216000000002, 82.28459099999999, -100.92655000000002, 82.317131, -100.84446000000003);
        ctx.bezierCurveTo(82.346571, -100.77016000000003, 82.342951, -100.68139000000002, 82.30913100000001, -100.64719000000002);
        ctx.bezierCurveTo(82.27526100000001, -100.61299000000002, 82.25117100000001, -100.67379000000003, 82.25560100000001, -100.78228000000003);
        ctx.closePath();
        ctx.moveTo(27.808298999999998, -101.00526000000002);
        ctx.bezierCurveTo(27.681521999999998, -101.16851000000003, 27.685126999999998, -101.17215000000002, 27.846778999999998, -101.04416000000002);
        ctx.bezierCurveTo(27.944878999999997, -100.96646000000003, 28.025142, -100.88541000000002, 28.025142, -100.86404000000002);
        ctx.bezierCurveTo(28.025142, -100.77934000000002, 27.941442, -100.83384000000002, 27.808297, -101.00530000000002);
        ctx.closePath();
        ctx.moveTo(29.859734999999997, -100.86400000000002);
        ctx.bezierCurveTo(29.859734999999997, -100.88540000000002, 29.939994999999996, -100.96643000000002, 30.038097999999998, -101.04412000000002);
        ctx.bezierCurveTo(30.199751999999997, -101.17215000000002, 30.203356999999997, -101.16851000000003, 30.076577999999998, -101.00522000000002);
        ctx.bezierCurveTo(29.94343, -100.83377000000003, 29.859733, -100.77925000000002, 29.859733, -100.86396000000002);
        ctx.closePath();
        ctx.moveTo(27.196768999999996, -101.51989000000002);
        ctx.bezierCurveTo(27.069991999999996, -101.68313000000002, 27.073596999999996, -101.68677000000002, 27.235248999999996, -101.55879000000002);
        ctx.bezierCurveTo(27.333348999999995, -101.48109000000002, 27.413611999999997, -101.40004000000002, 27.413611999999997, -101.37867000000001);
        ctx.bezierCurveTo(27.413611999999997, -101.29397000000002, 27.329911999999997, -101.34847000000002, 27.196766999999998, -101.51993000000002);
        ctx.closePath();
        ctx.moveTo(26.585238999999998, -102.03451000000001);
        ctx.bezierCurveTo(26.458460999999996, -102.19776000000002, 26.462065999999997, -102.2014, 26.623718999999998, -102.07341000000001);
        ctx.bezierCurveTo(26.721818999999996, -101.99571000000002, 26.802082, -101.91466000000001, 26.802082, -101.89329000000001);
        ctx.bezierCurveTo(26.802082, -101.80859000000001, 26.718382, -101.86309000000001, 26.585238, -102.03454);
        ctx.closePath();
        ctx.moveTo(85.41512399999999, -102.73784);
        ctx.bezierCurveTo(85.420024, -102.85774, 85.44416399999999, -102.88213, 85.476704, -102.80004000000001);
        ctx.bezierCurveTo(85.50614399999999, -102.72574000000002, 85.502524, -102.63697, 85.468704, -102.60277);
        ctx.bezierCurveTo(85.43483400000001, -102.56857000000001, 85.41074400000001, -102.62937000000001, 85.41517400000001, -102.73786000000001);
        ctx.closePath();
        ctx.moveTo(74.40757799999999, -103.14954);
        ctx.bezierCurveTo(74.412478, -103.26944, 74.43661799999998, -103.29383, 74.469158, -103.21174);
        ctx.bezierCurveTo(74.49859799999999, -103.13744000000001, 74.49497799999999, -103.04867, 74.461158, -103.01447);
        ctx.bezierCurveTo(74.427288, -102.98027, 74.403198, -103.04107, 74.407628, -103.14956000000001);
        ctx.closePath();
        ctx.moveTo(26.45451399999999, -103.79976);
        ctx.bezierCurveTo(26.31488099999999, -103.95557000000001, 26.30647999999999, -104.01131000000001, 26.41323399999999, -104.07357);
        ctx.bezierCurveTo(26.48695399999999, -104.11657000000001, 26.51277399999999, -104.11337, 26.470613999999987, -104.06657);
        ctx.bezierCurveTo(26.428453999999988, -104.01967, 26.470002999999988, -103.89641, 26.562853999999987, -103.79276);
        ctx.bezierCurveTo(26.655743999999988, -103.6891, 26.708822999999988, -103.60428, 26.680793999999988, -103.60428);
        ctx.bezierCurveTo(26.652763999999987, -103.60428, 26.550939999999986, -103.69228, 26.45451399999999, -103.79992);
        ctx.closePath();
        ctx.moveTo(29.133281999999987, -103.78426);
        ctx.bezierCurveTo(29.006503999999985, -103.9475, 29.010108999999986, -103.95114000000001, 29.171761999999987, -103.82316);
        ctx.bezierCurveTo(29.341538999999987, -103.6887, 29.395529999999987, -103.60418, 29.311643999999987, -103.60418);
        ctx.bezierCurveTo(29.29048399999999, -103.60418, 29.21021599999999, -103.68528, 29.133280999999986, -103.7843);
        ctx.closePath();
        ctx.moveTo(31.796247999999988, -103.72536000000001);
        ctx.bezierCurveTo(31.796247999999988, -103.75806000000001, 31.858957999999987, -103.83736, 31.935607999999988, -103.90160000000002);
        ctx.bezierCurveTo(32.042551999999986, -103.99120000000002, 32.10774699999999, -103.97620000000002, 32.21589199999999, -103.83700000000002);
        ctx.bezierCurveTo(32.34041699999999, -103.67672000000002, 32.33814999999999, -103.67030000000001, 32.19641199999999, -103.78180000000002);
        ctx.bezierCurveTo(32.073455999999986, -103.87850000000002, 32.00801999999999, -103.87970000000001, 31.91612699999999, -103.78680000000001);
        ctx.bezierCurveTo(31.850186999999988, -103.72020000000002, 31.79624599999999, -103.69250000000001, 31.79624599999999, -103.72520000000002);
        ctx.closePath();
        ctx.moveTo(24.241038999999986, -103.99013000000001);
        ctx.bezierCurveTo(24.114260999999985, -104.15337000000001, 24.117865999999985, -104.15701000000001, 24.279518999999986, -104.02903);
        ctx.bezierCurveTo(24.377618999999985, -103.95133000000001, 24.457881999999987, -103.87028000000001, 24.457881999999987, -103.84891);
        ctx.bezierCurveTo(24.457881999999987, -103.76421, 24.374181999999987, -103.81871000000001, 24.24103799999999, -103.99017);
        ctx.closePath();
        ctx.moveTo(82.66323799999998, -104.17882);
        ctx.bezierCurveTo(82.66813799999998, -104.29873, 82.69227799999997, -104.32311, 82.72481799999998, -104.24102);
        ctx.bezierCurveTo(82.75425799999998, -104.16672000000001, 82.75063799999998, -104.07795, 82.71681799999999, -104.04374);
        ctx.bezierCurveTo(82.682948, -104.00954, 82.658858, -104.07034, 82.663288, -104.17883);
        ctx.closePath();
        ctx.moveTo(28.52175099999998, -104.2989);
        ctx.bezierCurveTo(28.39497399999998, -104.46215000000001, 28.39857899999998, -104.46579, 28.56023099999998, -104.3378);
        ctx.bezierCurveTo(28.65833099999998, -104.26010000000001, 28.73859399999998, -104.17906, 28.73859399999998, -104.15768);
        ctx.bezierCurveTo(28.73859399999998, -104.07298, 28.65489399999998, -104.12748, 28.521748999999982, -104.29894);
        ctx.closePath();
        ctx.moveTo(33.01930899999998, -104.47902);
        ctx.bezierCurveTo(33.150965999999976, -104.62054, 33.28161799999998, -104.73634000000001, 33.30964599999998, -104.73634000000001);
        ctx.bezierCurveTo(33.33767599999998, -104.73634000000001, 33.25288599999998, -104.62054000000002, 33.12122999999998, -104.47902000000002);
        ctx.bezierCurveTo(32.989572999999986, -104.33750000000002, 32.858921999999986, -104.22171000000002, 32.83089299999998, -104.22171000000002);
        ctx.bezierCurveTo(32.80286299999998, -104.22171000000002, 32.88765299999998, -104.33750000000002, 33.01930899999998, -104.47902000000002);
        ctx.closePath();
        ctx.moveTo(23.62950799999998, -104.50472);
        ctx.bezierCurveTo(23.50273099999998, -104.66797000000001, 23.50633599999998, -104.67161, 23.66798799999998, -104.54362);
        ctx.bezierCurveTo(23.76608799999998, -104.46592000000001, 23.84635099999998, -104.38488000000001, 23.84635099999998, -104.3635);
        ctx.bezierCurveTo(23.84635099999998, -104.2788, 23.76265099999998, -104.33330000000001, 23.62950599999998, -104.50476);
        ctx.closePath();
        ctx.moveTo(25.78286599999998, -104.46642);
        ctx.bezierCurveTo(25.78286599999998, -104.48782, 25.86312599999998, -104.56885, 25.96122899999998, -104.64654);
        ctx.bezierCurveTo(26.12288299999998, -104.77457, 26.12648799999998, -104.77092, 25.99970899999998, -104.60764);
        ctx.bezierCurveTo(25.86656199999998, -104.43619000000001, 25.782864999999983, -104.38167, 25.782864999999983, -104.46638);
        ctx.closePath();
        ctx.moveTo(26.70016099999998, -104.46642);
        ctx.bezierCurveTo(26.70016099999998, -104.48782, 26.78042099999998, -104.56885, 26.87852399999998, -104.64654);
        ctx.bezierCurveTo(27.04017799999998, -104.77457, 27.04378299999998, -104.77092, 26.91700399999998, -104.60764);
        ctx.bezierCurveTo(26.78385699999998, -104.43619000000001, 26.70015899999998, -104.38167, 26.70015899999998, -104.46638);
        ctx.closePath();
        ctx.moveTo(27.91022099999998, -104.81353);
        ctx.bezierCurveTo(27.783443999999978, -104.97678, 27.78704899999998, -104.98042, 27.94870099999998, -104.85243);
        ctx.bezierCurveTo(28.046800999999977, -104.77473, 28.12706399999998, -104.69368, 28.12706399999998, -104.67231);
        ctx.bezierCurveTo(28.12706399999998, -104.58761, 28.04336399999998, -104.64211, 27.91021899999998, -104.81357);
        ctx.closePath();
        ctx.moveTo(26.29247499999998, -105.08397);
        ctx.bezierCurveTo(26.29247499999998, -105.10537, 26.372734999999977, -105.18639999999999, 26.47083799999998, -105.26409);
        ctx.bezierCurveTo(26.632491999999978, -105.39211999999999, 26.636096999999978, -105.38848, 26.50931799999998, -105.22519);
        ctx.bezierCurveTo(26.376170999999978, -105.05374, 26.29247399999998, -104.99922, 26.29247399999998, -105.08393);
        ctx.closePath();
        ctx.moveTo(27.284511999999978, -105.16077);
        ctx.bezierCurveTo(27.35365199999998, -105.23107, 27.435890999999977, -105.26273, 27.46727099999998, -105.23107);
        ctx.bezierCurveTo(27.498650999999978, -105.19937, 27.44208099999998, -105.14187, 27.341567999999977, -105.10318000000001);
        ctx.bezierCurveTo(27.196308999999978, -105.04728000000001, 27.184602999999978, -105.05918000000001, 27.284507999999978, -105.16078);
        ctx.closePath();
        ctx.moveTo(85.10935899999998, -105.31096);
        ctx.bezierCurveTo(85.11425899999999, -105.43086, 85.13839899999998, -105.45524999999999, 85.17093899999999, -105.37316);
        ctx.bezierCurveTo(85.20037899999998, -105.29886, 85.19675899999999, -105.21008, 85.162939, -105.17587999999999);
        ctx.bezierCurveTo(85.129069, -105.14168, 85.104979, -105.20248, 85.109409, -105.31097);
        ctx.closePath();
        ctx.moveTo(34.191408999999986, -105.55969999999999);
        ctx.bezierCurveTo(34.292870999999984, -105.67291999999999, 34.39881699999999, -105.76554999999999, 34.42684599999998, -105.76554999999999);
        ctx.bezierCurveTo(34.454875999999985, -105.76554999999999, 34.394795999999985, -105.67294999999999, 34.29332999999998, -105.55969999999999);
        ctx.bezierCurveTo(34.191867999999985, -105.44648, 34.08592199999998, -105.35385, 34.057892999999986, -105.35385);
        ctx.bezierCurveTo(34.029862999999985, -105.35385, 34.089942999999984, -105.44645, 34.191408999999986, -105.55969999999999);
        ctx.closePath();
        ctx.moveTo(74.71334299999998, -105.72265999999999);
        ctx.bezierCurveTo(74.71824299999999, -105.84257, 74.74238299999998, -105.86694999999999, 74.77492299999999, -105.78486);
        ctx.bezierCurveTo(74.80436299999998, -105.71056, 74.80074299999998, -105.62178999999999, 74.76692299999999, -105.58757999999999);
        ctx.bezierCurveTo(74.733053, -105.55337999999999, 74.708963, -105.61417999999999, 74.713393, -105.72267);
        ctx.closePath();
        ctx.moveTo(31.53503199999998, -105.99712999999998);
        ctx.lineTo(31.23567799999998, -106.33163999999998);
        ctx.lineTo(31.56692399999998, -106.02933999999998);
        ctx.bezierCurveTo(31.87569199999998, -105.74754999999998, 31.94501799999998, -105.66261999999998, 31.86627699999998, -105.66261999999998);
        ctx.bezierCurveTo(31.84873699999998, -105.66261999999998, 31.69967599999998, -105.81314999999998, 31.53503199999998, -105.99712999999997);
        ctx.closePath();
        ctx.moveTo(28.41982999999998, -106.04862999999999);
        ctx.bezierCurveTo(28.293051999999978, -106.21188, 28.29665699999998, -106.21551999999998, 28.45830999999998, -106.08752999999999);
        ctx.bezierCurveTo(28.55640999999998, -106.00983, 28.63667299999998, -105.92878999999999, 28.63667299999998, -105.90741999999999);
        ctx.bezierCurveTo(28.63667299999998, -105.82271999999999, 28.55297299999998, -105.87722, 28.419828999999982, -106.04866999999999);
        ctx.closePath();
        ctx.moveTo(32.91738699999998, -106.33167999999999);
        ctx.bezierCurveTo(32.669815999999976, -106.58641999999999, 32.49018999999998, -106.79484, 32.518218999999974, -106.79484);
        ctx.bezierCurveTo(32.546248999999975, -106.79484, 32.77173799999997, -106.58641999999999, 33.01930899999997, -106.33167999999999);
        ctx.bezierCurveTo(33.26687999999997, -106.07694, 33.44650499999997, -105.86850999999999, 33.418476999999974, -105.86850999999999);
        ctx.bezierCurveTo(33.39044699999997, -105.86850999999999, 33.16495799999998, -106.07694, 32.91738699999998, -106.33167999999999);
        ctx.closePath();
        ctx.moveTo(85.00743799999998, -106.13440999999999);
        ctx.bezierCurveTo(85.01233799999999, -106.25430999999999, 85.03647799999997, -106.27869999999999, 85.06901799999999, -106.19660999999999);
        ctx.bezierCurveTo(85.09845799999998, -106.12231, 85.09483799999998, -106.03353999999999, 85.06101799999999, -105.99933999999999);
        ctx.bezierCurveTo(85.027148, -105.96513999999999, 85.003058, -106.02593999999999, 85.007488, -106.13443);
        ctx.closePath();
        ctx.moveTo(23.527586999999983, -106.25447999999999);
        ctx.bezierCurveTo(23.40080899999998, -106.41772999999999, 23.40441399999998, -106.42136999999998, 23.566066999999983, -106.29337999999998);
        ctx.bezierCurveTo(23.66416699999998, -106.21567999999999, 23.744429999999983, -106.13462999999999, 23.744429999999983, -106.11325999999998);
        ctx.bezierCurveTo(23.744429999999983, -106.02855999999998, 23.660729999999983, -106.08305999999999, 23.527585999999985, -106.25450999999998);
        ctx.closePath();
        ctx.moveTo(27.808298999999984, -106.56325999999999);
        ctx.bezierCurveTo(27.681521999999983, -106.72650999999999, 27.685126999999984, -106.73014999999998, 27.846778999999984, -106.60215999999998);
        ctx.bezierCurveTo(27.944878999999982, -106.52445999999999, 28.025141999999985, -106.44340999999999, 28.025141999999985, -106.42203999999998);
        ctx.bezierCurveTo(28.025141999999985, -106.33733999999998, 27.941441999999984, -106.39183999999999, 27.808296999999985, -106.56329999999998);
        ctx.closePath();
        ctx.moveTo(25.566020999999985, -106.76910999999998);
        ctx.bezierCurveTo(25.439243999999984, -106.93235999999999, 25.442848999999985, -106.93599999999998, 25.604500999999985, -106.80800999999998);
        ctx.bezierCurveTo(25.702600999999984, -106.73030999999999, 25.782863999999986, -106.64926999999999, 25.782863999999986, -106.62788999999998);
        ctx.bezierCurveTo(25.782863999999986, -106.54318999999998, 25.699163999999985, -106.59768999999999, 25.566018999999987, -106.76914999999998);
        ctx.closePath();
        ctx.moveTo(35.36350799999998, -106.62784999999998);
        ctx.bezierCurveTo(35.36350799999998, -106.64924999999998, 35.443767999999984, -106.73027999999998, 35.54187099999998, -106.80796999999998);
        ctx.bezierCurveTo(35.70352499999998, -106.93599999999998, 35.70712999999998, -106.93235999999999, 35.58035099999998, -106.76906999999999);
        ctx.bezierCurveTo(35.44720399999998, -106.59761999999999, 35.36350599999998, -106.54309999999998, 35.36350599999998, -106.62780999999998);
        ctx.closePath();
        ctx.moveTo(82.96900299999999, -106.75195999999998);
        ctx.bezierCurveTo(82.97390299999999, -106.87185999999998, 82.99804299999998, -106.89624999999998, 83.030583, -106.81415999999999);
        ctx.bezierCurveTo(83.06002299999999, -106.73986, 83.05640299999999, -106.65108999999998, 83.022583, -106.61688999999998);
        ctx.bezierCurveTo(82.988713, -106.58268999999999, 82.964623, -106.64348999999999, 82.969053, -106.75197999999999);
        ctx.closePath();
        ctx.moveTo(27.19676899999999, -107.07788999999998);
        ctx.bezierCurveTo(27.06999199999999, -107.24112999999998, 27.07359699999999, -107.24476999999999, 27.23524899999999, -107.11678999999998);
        ctx.bezierCurveTo(27.405024999999988, -106.98232999999998, 27.459015999999988, -106.89780999999998, 27.375129999999988, -106.89780999999998);
        ctx.bezierCurveTo(27.35396999999999, -106.89780999999998, 27.273702999999987, -106.97890999999998, 27.196766999999987, -107.07792999999998);
        ctx.closePath();
        ctx.moveTo(30.46355099999999, -107.18080999999998);
        ctx.lineTo(30.21646099999999, -107.46385999999998);
        ctx.lineTo(30.496745999999987, -107.21433999999998);
        ctx.bezierCurveTo(30.758713999999987, -106.98111999999998, 30.823770999999986, -106.89776999999998, 30.743835999999988, -106.89776999999998);
        ctx.bezierCurveTo(30.725575999999986, -106.89776999999998, 30.599450999999988, -107.02513999999998, 30.46355099999999, -107.18080999999998);
        ctx.closePath();
        ctx.moveTo(24.95449099999999, -107.28373999999998);
        ctx.bezierCurveTo(24.82771399999999, -107.44697999999998, 24.83131799999999, -107.45061999999999, 24.99297099999999, -107.32263999999998);
        ctx.bezierCurveTo(25.09107099999999, -107.24493999999999, 25.17133399999999, -107.16388999999998, 25.17133399999999, -107.14251999999998);
        ctx.bezierCurveTo(25.17133399999999, -107.05781999999998, 25.08763399999999, -107.11231999999998, 24.954489999999993, -107.28377999999998);
        ctx.closePath();
        ctx.moveTo(31.58468999999999, -107.79836999999998);
        ctx.lineTo(31.33759999999999, -108.08140999999998);
        ctx.lineTo(31.61788499999999, -107.83188999999997);
        ctx.bezierCurveTo(31.87985299999999, -107.59866999999997, 31.94490999999999, -107.51531999999997, 31.86497499999999, -107.51531999999997);
        ctx.bezierCurveTo(31.84671499999999, -107.51531999999997, 31.72058999999999, -107.64268999999997, 31.58468999999999, -107.79836999999998);
        ctx.closePath();
        ctx.moveTo(22.82713599999999, -107.72116999999997);
        ctx.bezierCurveTo(22.73527599999999, -107.78116999999997, 22.72270399999999, -107.82156999999997, 22.795635999999988, -107.82251999999997);
        ctx.bezierCurveTo(22.862395999999986, -107.82333999999997, 22.94536899999999, -107.77781999999996, 22.980013999999986, -107.72116999999997);
        ctx.bezierCurveTo(23.058223999999985, -107.59338999999997, 23.022933999999985, -107.59338999999997, 22.827131999999985, -107.72116999999997);
        ctx.closePath();
        ctx.moveTo(23.141393999999988, -107.85321999999998);
        ctx.bezierCurveTo(23.164753999999988, -107.86921999999998, 23.275590999999988, -107.95031999999998, 23.387704999999986, -108.03333999999998);
        ctx.bezierCurveTo(23.576260999999985, -108.17300999999998, 23.581057999999985, -108.17082999999998, 23.451664999999988, -108.00423999999998);
        ctx.bezierCurveTo(23.374734999999987, -107.90513999999997, 23.26388999999999, -107.82411999999998, 23.20535399999999, -107.82411999999998);
        ctx.bezierCurveTo(23.14681399999999, -107.82411999999998, 23.11803399999999, -107.83721999999997, 23.141393999999988, -107.85321999999998);
        ctx.closePath();
        ctx.moveTo(29.34241199999999, -108.41591999999999);
        ctx.lineTo(29.09532199999999, -108.69895999999999);
        ctx.lineTo(29.375606999999988, -108.44943999999998);
        ctx.bezierCurveTo(29.637574999999988, -108.21621999999998, 29.702631999999987, -108.13286999999998, 29.622696999999988, -108.13286999999998);
        ctx.bezierCurveTo(29.604436999999987, -108.13286999999998, 29.47831199999999, -108.26023999999998, 29.34241199999999, -108.41591999999999);
        ctx.closePath();
        ctx.moveTo(75.01910799999999, -108.29583999999998);
        ctx.bezierCurveTo(75.024008, -108.41573999999999, 75.04814799999998, -108.44012999999998, 75.080688, -108.35803999999999);
        ctx.bezierCurveTo(75.11012799999999, -108.28374, 75.10650799999999, -108.19496999999998, 75.072688, -108.16076999999999);
        ctx.bezierCurveTo(75.038818, -108.12656999999999, 75.014728, -108.18736999999999, 75.019158, -108.29585999999999);
        ctx.closePath();
        ctx.moveTo(23.13290099999999, -108.27463999999999);
        ctx.bezierCurveTo(23.13290099999999, -108.29603999999999, 23.21316099999999, -108.37705999999999, 23.31126399999999, -108.45476);
        ctx.bezierCurveTo(23.47291799999999, -108.58278, 23.47652299999999, -108.57914, 23.34974399999999, -108.41586);
        ctx.bezierCurveTo(23.216595999999992, -108.24441, 23.13289899999999, -108.18988999999999, 23.13289899999999, -108.27459999999999);
        ctx.closePath();
        ctx.moveTo(84.70167199999999, -108.70751999999999);
        ctx.bezierCurveTo(84.706572, -108.82741999999999, 84.73071199999998, -108.85180999999999, 84.763252, -108.76971999999999);
        ctx.bezierCurveTo(84.79269199999999, -108.69542, 84.78907199999999, -108.60664999999999, 84.755252, -108.57244999999999);
        ctx.bezierCurveTo(84.721382, -108.53824999999999, 84.697292, -108.59904999999999, 84.701722, -108.70754);
        ctx.closePath();
        ctx.moveTo(23.642509999999987, -108.89218999999999);
        ctx.bezierCurveTo(23.642509999999987, -108.91358999999999, 23.722769999999986, -108.99461999999998, 23.820872999999988, -109.07230999999999);
        ctx.bezierCurveTo(23.982526999999987, -109.20033999999998, 23.986131999999987, -109.19669999999999, 23.859352999999988, -109.03340999999999);
        ctx.bezierCurveTo(23.726205999999987, -108.86196, 23.64250899999999, -108.80743999999999, 23.64250899999999, -108.89214999999999);
        ctx.closePath();
        ctx.moveTo(30.573186999999987, -109.09803999999998);
        ctx.bezierCurveTo(30.573186999999987, -109.11943999999998, 30.653446999999986, -109.20046999999998, 30.751549999999988, -109.27815999999999);
        ctx.bezierCurveTo(30.913203999999986, -109.40618999999998, 30.916808999999986, -109.40254999999999, 30.790029999999987, -109.23925999999999);
        ctx.bezierCurveTo(30.65688199999999, -109.06781, 30.573184999999988, -109.01328999999998, 30.573184999999988, -109.09799999999998);
        ctx.closePath();
        ctx.moveTo(83.27476799999998, -109.32506999999998);
        ctx.bezierCurveTo(83.27966799999999, -109.44496999999998, 83.30380799999998, -109.46935999999998, 83.33634799999999, -109.38726999999999);
        ctx.bezierCurveTo(83.36578799999998, -109.31296999999999, 83.36216799999998, -109.22419, 83.32834799999999, -109.18998999999998);
        ctx.bezierCurveTo(83.294478, -109.15578999999998, 83.270388, -109.21658999999998, 83.274818, -109.32507999999999);
        ctx.closePath();
        ctx.moveTo(28.323194999999977, -109.54807999999998);
        ctx.lineTo(28.076104999999977, -109.83111999999998);
        ctx.lineTo(28.356389999999976, -109.58159999999998);
        ctx.bezierCurveTo(28.618357999999976, -109.34837999999998, 28.683414999999975, -109.26502999999998, 28.603478999999975, -109.26502999999998);
        ctx.bezierCurveTo(28.585218999999974, -109.26502999999998, 28.459094999999976, -109.39239999999998, 28.323194999999977, -109.54807999999998);
        ctx.closePath();
        ctx.moveTo(24.807328999999978, -109.88257999999999);
        ctx.bezierCurveTo(24.807328999999978, -110.01589999999999, 24.841788999999977, -110.05069999999999, 24.90779499999998, -109.98404);
        ctx.bezierCurveTo(24.973804999999977, -109.91734, 24.973804999999977, -109.84778999999999, 24.90779499999998, -109.78112999999999);
        ctx.bezierCurveTo(24.84178499999998, -109.71443, 24.807328999999978, -109.74923, 24.807328999999978, -109.88257999999999);
        ctx.closePath();
        ctx.moveTo(38.67596499999998, -109.98550999999999);
        ctx.bezierCurveTo(38.777426999999975, -110.09872999999999, 38.88337299999998, -110.19135999999999, 38.911401999999974, -110.19135999999999);
        ctx.bezierCurveTo(38.939431999999975, -110.19135999999999, 38.879351999999976, -110.09875999999998, 38.777885999999974, -109.98550999999999);
        ctx.bezierCurveTo(38.676423999999976, -109.87228999999999, 38.57047799999997, -109.77965999999999, 38.542448999999976, -109.77965999999999);
        ctx.bezierCurveTo(38.514418999999975, -109.77965999999999, 38.574498999999975, -109.87226, 38.67596499999998, -109.98550999999999);
        ctx.closePath();
        ctx.moveTo(29.444333999999976, -110.16563);
        ctx.lineTo(29.197243999999976, -110.44866999999999);
        ctx.lineTo(29.477528999999976, -110.19914999999999);
        ctx.bezierCurveTo(29.631684999999976, -110.06190999999998, 29.757812999999977, -109.93453999999998, 29.757812999999977, -109.91610999999999);
        ctx.bezierCurveTo(29.757812999999977, -109.83541, 29.675272999999976, -109.90110999999999, 29.444333999999976, -110.16563);
        ctx.closePath();
        ctx.moveTo(83.37668999999997, -110.14842999999999);
        ctx.bezierCurveTo(83.38158999999997, -110.26834, 83.40572999999996, -110.29272999999999, 83.43826999999997, -110.21063);
        ctx.bezierCurveTo(83.46770999999997, -110.13633, 83.46408999999997, -110.04755999999999, 83.43026999999998, -110.01334999999999);
        ctx.bezierCurveTo(83.39639999999999, -109.97914999999999, 83.37230999999998, -110.03994999999999, 83.37673999999998, -110.14844);
        ctx.closePath();
        ctx.moveTo(27.152396999999965, -110.8346);
        ctx.lineTo(26.853043999999965, -111.16910999999999);
        ctx.lineTo(27.184289999999965, -110.86680999999999);
        ctx.bezierCurveTo(27.493056999999965, -110.58501999999999, 27.562383999999966, -110.50009999999999, 27.483642999999965, -110.50009999999999);
        ctx.bezierCurveTo(27.466102999999965, -110.50009999999999, 27.317041999999965, -110.65061999999999, 27.152396999999965, -110.8346);
        ctx.closePath();
        ctx.moveTo(39.056336999999964, -110.9118);
        ctx.bezierCurveTo(39.056336999999964, -111.10993, 39.07730699999996, -111.19098, 39.102946999999965, -111.09192);
        ctx.bezierCurveTo(39.12858699999997, -110.99282, 39.12858699999997, -110.83074, 39.102946999999965, -110.73168);
        ctx.bezierCurveTo(39.07730699999996, -110.63257999999999, 39.056336999999964, -110.71368, 39.056336999999964, -110.9118);
        ctx.closePath();
        ctx.moveTo(75.32487299999997, -110.8689);
        ctx.bezierCurveTo(75.32977299999997, -110.9888, 75.35391299999996, -111.01319, 75.38645299999997, -110.9311);
        ctx.bezierCurveTo(75.41589299999997, -110.8568, 75.41227299999997, -110.76802, 75.37845299999998, -110.73382);
        ctx.bezierCurveTo(75.34458299999999, -110.69962, 75.32049299999998, -110.76042, 75.32492299999998, -110.86891);
        ctx.closePath();
        ctx.moveTo(28.425115999999967, -111.29776);
        ctx.lineTo(28.178026999999968, -111.5808);
        ctx.lineTo(28.458310999999966, -111.33127999999999);
        ctx.bezierCurveTo(28.612467999999968, -111.19403999999999, 28.738595999999966, -111.06666999999999, 28.738595999999966, -111.04822999999999);
        ctx.bezierCurveTo(28.738595999999966, -110.96753, 28.656055999999964, -111.03322999999999, 28.425115999999967, -111.29775999999998);
        ctx.closePath();
        ctx.moveTo(84.39590699999997, -111.28056);
        ctx.bezierCurveTo(84.40080699999997, -111.40047, 84.42494699999996, -111.42484999999999, 84.45748699999997, -111.34276);
        ctx.bezierCurveTo(84.48692699999997, -111.26846, 84.48330699999997, -111.17969, 84.44948699999998, -111.14547999999999);
        ctx.bezierCurveTo(84.41561699999998, -111.11128, 84.39152699999998, -111.17208, 84.39595699999998, -111.28057);
        ctx.closePath();
        ctx.moveTo(26.47720799999997, -111.29086);
        ctx.bezierCurveTo(26.55077799999997, -111.32056, 26.638688999999967, -111.31696, 26.67255799999997, -111.28286);
        ctx.bezierCurveTo(26.70642799999997, -111.24866, 26.64622799999997, -111.22436, 26.53878599999997, -111.22876);
        ctx.bezierCurveTo(26.42005199999997, -111.23375999999999, 26.39590199999997, -111.25806, 26.47720599999997, -111.29096);
        ctx.closePath();
        ctx.moveTo(26.088630999999967, -111.58079);
        ctx.bezierCurveTo(26.220287999999968, -111.72232, 26.350939999999966, -111.83811, 26.37896799999997, -111.83811);
        ctx.bezierCurveTo(26.40699799999997, -111.83811, 26.322207999999968, -111.72232, 26.19055299999997, -111.58079000000001);
        ctx.bezierCurveTo(26.058894999999968, -111.43927000000001, 25.92824399999997, -111.32348, 25.90021499999997, -111.32348);
        ctx.bezierCurveTo(25.87218499999997, -111.32348, 25.95697499999997, -111.43927000000001, 26.08863099999997, -111.58079000000001);
        ctx.closePath();
        ctx.moveTo(27.209769999999967, -112.61004999999999);
        ctx.bezierCurveTo(27.341426999999968, -112.75156999999999, 27.472078999999965, -112.86735999999999, 27.500106999999968, -112.86735999999999);
        ctx.bezierCurveTo(27.52813699999997, -112.86735999999999, 27.443346999999967, -112.75156999999999, 27.31169199999997, -112.61004999999999);
        ctx.bezierCurveTo(27.180033999999967, -112.46851999999998, 27.04938299999997, -112.35272999999998, 27.021354999999968, -112.35272999999998);
        ctx.bezierCurveTo(26.993324999999967, -112.35272999999998, 27.07811499999997, -112.46851999999998, 27.209769999999967, -112.61004999999997);
        ctx.closePath();
        ctx.moveTo(76.44601199999997, -112.72155);
        ctx.bezierCurveTo(76.45091199999997, -112.84145, 76.47505199999996, -112.86583999999999, 76.50759199999997, -112.78375);
        ctx.bezierCurveTo(76.53703199999997, -112.70945, 76.53341199999997, -112.62068, 76.49959199999998, -112.58648);
        ctx.bezierCurveTo(76.46572199999999, -112.55228, 76.44163199999998, -112.61308, 76.44606199999998, -112.72157);
        ctx.closePath();
        ctx.moveTo(30.560185999999966, -112.94454999999999);
        ctx.bezierCurveTo(30.433408999999966, -113.1078, 30.437013999999966, -113.11143999999999, 30.598665999999966, -112.98344999999999);
        ctx.bezierCurveTo(30.768441999999965, -112.84899999999999, 30.822432999999965, -112.76446999999999, 30.738546999999965, -112.76446999999999);
        ctx.bezierCurveTo(30.717386999999967, -112.76446999999999, 30.637119999999964, -112.84557, 30.560183999999964, -112.94458999999999);
        ctx.closePath();
        ctx.moveTo(35.95592899999997, -112.93754999999999);
        ctx.bezierCurveTo(36.029498999999966, -112.96724999999999, 36.11740999999997, -112.96364999999999, 36.15127899999997, -112.92954999999999);
        ctx.bezierCurveTo(36.18514899999997, -112.89535, 36.124948999999965, -112.87105, 36.017506999999966, -112.87544999999999);
        ctx.bezierCurveTo(35.89877299999996, -112.88044999999998, 35.87462199999997, -112.90474999999999, 35.95592699999997, -112.93764999999999);
        ctx.closePath();
        ctx.moveTo(84.37485899999997, -113.15027999999998);
        ctx.bezierCurveTo(84.24808199999997, -113.31352999999999, 84.25168699999998, -113.31716999999998, 84.41333899999998, -113.18917999999998);
        ctx.bezierCurveTo(84.51143899999998, -113.11147999999999, 84.59170199999998, -113.03043999999998, 84.59170199999998, -113.00906999999998);
        ctx.bezierCurveTo(84.59170199999998, -112.92436999999998, 84.50800199999999, -112.97886999999999, 84.37485699999998, -113.15031999999998);
        ctx.closePath();
        ctx.moveTo(35.159664999999976, -113.31938999999998);
        ctx.bezierCurveTo(35.159664999999976, -113.34158999999998, 35.230844999999974, -113.38738999999998, 35.31784099999997, -113.42113999999998);
        ctx.bezierCurveTo(35.40854099999997, -113.45633999999998, 35.44945499999997, -113.43903999999998, 35.413750999999976, -113.38063999999999);
        ctx.bezierCurveTo(35.35390099999998, -113.28283999999998, 35.159667999999975, -113.23597999999998, 35.159667999999975, -113.31933999999998);
        ctx.closePath();
        ctx.moveTo(34.013045999999974, -117.15534999999998);
        ctx.bezierCurveTo(34.083115999999976, -117.18394999999998, 34.197778999999976, -117.18394999999998, 34.267849999999974, -117.15534999999998);
        ctx.bezierCurveTo(34.337919999999976, -117.12674999999999, 34.280589999999975, -117.10344999999998, 34.14044799999998, -117.10344999999998);
        ctx.bezierCurveTo(34.000304999999976, -117.10344999999998, 33.94297399999998, -117.12684999999998, 34.01304599999998, -117.15534999999998);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(96.312703, -35.81517);
        ctx.bezierCurveTo(96.312703, -35.83654, 96.392963, -35.917596, 96.491066, -35.995289);
        ctx.bezierCurveTo(96.65272, -36.123315, 96.65632500000001, -36.119675, 96.52954600000001, -35.956429);
        ctx.bezierCurveTo(96.39639900000002, -35.784981, 96.31270200000002, -35.730458, 96.31270300000001, -35.81517);
        ctx.closePath();
        ctx.moveTo(61.791376, -36.367526000000005);
        ctx.bezierCurveTo(62.228378, -36.386866000000005, 62.91635, -36.386746, 63.320202, -36.367217000000004);
        ctx.bezierCurveTo(63.724052, -36.347737, 63.366502000000004, -36.331907, 62.525649, -36.332057000000006);
        ctx.bezierCurveTo(61.684795, -36.33216000000001, 61.354372, -36.348147000000004, 61.791376, -36.367487000000004);
        ctx.closePath();
        ctx.moveTo(97.229998, -36.631919);
        ctx.bezierCurveTo(97.229998, -36.649629000000004, 97.379059, -36.800160000000005, 97.56124399999999, -36.966426000000006);
        ctx.lineTo(97.89248999999998, -37.268727000000005);
        ctx.lineTo(97.59313599999999, -36.93422);
        ctx.bezierCurveTo(97.31409699999999, -36.62241100000001, 97.22999799999998, -36.552403000000005, 97.22999799999998, -36.631919);
        ctx.closePath();
        ctx.moveTo(69.046488, -46.06884600000001);
        ctx.bezierCurveTo(69.046488, -51.13534700000001, 69.058908, -53.20800700000001, 69.07409799999999, -50.67475600000001);
        ctx.bezierCurveTo(69.089278, -48.14150600000001, 69.089278, -43.996187000000006, 69.07409799999999, -41.46293600000001);
        ctx.bezierCurveTo(69.05891799999999, -38.92968500000001, 69.046488, -41.00234500000001, 69.046488, -46.068846000000015);
        ctx.closePath();
        ctx.moveTo(48.740241999999995, -49.297866000000006);
        ctx.bezierCurveTo(48.71805199999999, -58.608315000000005, 48.732341999999996, -59.768769000000006, 48.868137999999995, -59.65499500000001);
        ctx.bezierCurveTo(49.039705, -59.511205000000004, 49.075745, -59.402840000000005, 48.919588, -59.500302000000005);
        ctx.bezierCurveTo(48.852618, -59.54210200000001, 48.809165, -56.038813000000005, 48.791692, -49.188109000000004);
        ctx.lineTo(48.765232, -38.812608000000004);
        ctx.closePath();
        ctx.moveTo(100.08381, -39.53308500000001);
        ctx.bezierCurveTo(100.27397, -39.73121700000001, 100.45249, -39.89332400000001, 100.48052, -39.89332400000001);
        ctx.bezierCurveTo(100.50852, -39.89332400000001, 100.37589, -39.73121700000001, 100.18572999999999, -39.53308500000001);
        ctx.bezierCurveTo(99.995565, -39.33495400000001, 99.817044, -39.172847000000004, 99.78901499999999, -39.172847000000004);
        ctx.bezierCurveTo(99.76098499999999, -39.172847000000004, 99.893643, -39.334954, 100.08380999999999, -39.53308500000001);
        ctx.closePath();
        ctx.moveTo(101.0011, -40.54973700000001);
        ctx.bezierCurveTo(101.0011, -40.571107000000005, 101.08139999999999, -40.65216300000001, 101.17947, -40.729856000000005);
        ctx.bezierCurveTo(101.34111999999999, -40.857882000000004, 101.34472, -40.854241, 101.21797, -40.690996000000005);
        ctx.bezierCurveTo(101.08482, -40.51954800000001, 101.00112, -40.465025000000004, 101.00112, -40.54973700000001);
        ctx.closePath();
        ctx.moveTo(101.61263, -41.27021400000001);
        ctx.bezierCurveTo(101.61263, -41.29158400000001, 101.69292999999999, -41.37264100000001, 101.791, -41.45033400000001);
        ctx.bezierCurveTo(101.95264999999999, -41.57836000000001, 101.95625, -41.57471900000001, 101.8295, -41.41147400000001);
        ctx.bezierCurveTo(101.69635, -41.240026000000015, 101.61265, -41.185504000000016, 101.61265, -41.270215000000015);
        ctx.closePath();
        ctx.moveTo(37.490864, -45.73433900000001);
        ctx.bezierCurveTo(37.364086, -45.897585000000014, 37.367691, -45.90122500000001, 37.529344, -45.77319900000001);
        ctx.bezierCurveTo(37.627444000000004, -45.695509000000015, 37.707707, -45.614452000000014, 37.707707, -45.593080000000015);
        ctx.bezierCurveTo(37.707707, -45.50837000000001, 37.624007, -45.56289000000002, 37.490863, -45.73433900000001);
        ctx.closePath();
        ctx.moveTo(34.64457, -48.51332400000001);
        ctx.lineTo(34.293330000000005, -48.89929400000001);
        ctx.lineTo(34.675537000000006, -48.544595000000015);
        ctx.bezierCurveTo(34.88575000000001, -48.34951200000002, 35.057743, -48.17582500000002, 35.057743, -48.158625000000015);
        ctx.bezierCurveTo(35.057743, -48.08002500000001, 34.971493, -48.154125000000015, 34.64457, -48.51332400000001);
        ctx.closePath();
        ctx.moveTo(102.55735, -48.61038400000001);
        ctx.bezierCurveTo(102.65655, -48.63648400000001, 102.79411, -48.63476400000001, 102.86311, -48.60658400000001);
        ctx.bezierCurveTo(102.93211000000001, -48.578384000000014, 102.85101, -48.55703400000001, 102.68281, -48.559134000000014);
        ctx.bezierCurveTo(102.51464, -48.56123400000001, 102.45818, -48.58430400000002, 102.55735, -48.610394000000014);
        ctx.closePath();
        ctx.moveTo(104.08617, -48.61038400000001);
        ctx.bezierCurveTo(104.18536999999999, -48.63648400000001, 104.32294, -48.63476400000001, 104.39193999999999, -48.60658400000001);
        ctx.bezierCurveTo(104.46094, -48.578384000000014, 104.37983999999999, -48.55703400000001, 104.21163999999999, -48.559134000000014);
        ctx.bezierCurveTo(104.04346999999999, -48.56123400000001, 103.98700999999998, -48.58430400000002, 104.08616999999998, -48.610394000000014);
        ctx.closePath();
        ctx.moveTo(33.71976, -49.54258);
        ctx.bezierCurveTo(33.592982, -49.705826, 33.596587, -49.709467000000004, 33.75824, -49.58144);
        ctx.bezierCurveTo(33.928016, -49.446981, 33.982007, -49.36246, 33.898122, -49.36246);
        ctx.bezierCurveTo(33.876962, -49.36246, 33.796694, -49.443509999999996, 33.719759, -49.542578999999996);
        ctx.closePath();
        ctx.moveTo(102.40253000000001, -50.45988);
        ctx.bezierCurveTo(102.47263000000001, -50.48843, 102.58726000000001, -50.48843, 102.65733000000002, -50.45988);
        ctx.bezierCurveTo(102.72743000000001, -50.431329999999996, 102.67003000000001, -50.407959999999996, 102.52993000000002, -50.407959999999996);
        ctx.bezierCurveTo(102.38979000000002, -50.407959999999996, 102.33245000000002, -50.43131999999999, 102.40253000000003, -50.45988);
        ctx.closePath();
        ctx.moveTo(104.13520000000001, -50.45988);
        ctx.bezierCurveTo(104.20530000000001, -50.48843, 104.31993000000001, -50.48843, 104.39000000000001, -50.45988);
        ctx.bezierCurveTo(104.46010000000001, -50.431329999999996, 104.40270000000001, -50.407959999999996, 104.26260000000002, -50.407959999999996);
        ctx.bezierCurveTo(104.12246000000002, -50.407959999999996, 104.06512000000002, -50.43131999999999, 104.13520000000003, -50.45988);
        ctx.closePath();
        ctx.moveTo(88.13985400000001, -53.549785);
        ctx.bezierCurveTo(88.21342400000002, -53.579515, 88.30133700000002, -53.575865, 88.33520400000002, -53.541685);
        ctx.bezierCurveTo(88.36907400000001, -53.507485, 88.30887400000002, -53.483155000000004, 88.20143200000003, -53.487625);
        ctx.bezierCurveTo(88.08269800000002, -53.492525, 88.05854800000003, -53.516955, 88.13985200000002, -53.549805);
        ctx.closePath();
        ctx.moveTo(102.30060000000002, -53.547685);
        ctx.bezierCurveTo(102.37070000000001, -53.576235000000004, 102.48534000000002, -53.576235000000004, 102.55541000000002, -53.547685);
        ctx.bezierCurveTo(102.62551000000002, -53.519135, 102.56811000000002, -53.495775, 102.42801000000003, -53.495775);
        ctx.bezierCurveTo(102.28786000000002, -53.495775, 102.23053000000003, -53.519135, 102.30060000000003, -53.547685);
        ctx.closePath();
        ctx.moveTo(104.34541000000002, -53.549785);
        ctx.bezierCurveTo(104.41901000000001, -53.579515, 104.50689000000001, -53.575865, 104.54076000000002, -53.541685);
        ctx.bezierCurveTo(104.57466000000002, -53.507485, 104.51446000000001, -53.483155000000004, 104.40699000000002, -53.487625);
        ctx.bezierCurveTo(104.28825000000002, -53.492525, 104.26410000000003, -53.516955, 104.34539000000002, -53.549805);
        ctx.closePath();
        ctx.moveTo(88.03793200000001, -55.402442);
        ctx.bezierCurveTo(88.11151200000002, -55.432172, 88.19941500000002, -55.428522, 88.23328300000001, -55.394342);
        ctx.bezierCurveTo(88.26715300000001, -55.360142, 88.20695300000001, -55.335812000000004, 88.09951000000001, -55.340282);
        ctx.bezierCurveTo(87.980777, -55.345182, 87.95662600000001, -55.369612000000004, 88.03793, -55.402462);
        ctx.closePath();
        ctx.moveTo(86.101419, -58.4902);
        ctx.bezierCurveTo(86.17498900000001, -58.51993, 86.26290200000001, -58.51628, 86.29677000000001, -58.4821);
        ctx.bezierCurveTo(86.33064, -58.447900000000004, 86.27044000000001, -58.423570000000005, 86.16299800000002, -58.42804);
        ctx.bezierCurveTo(86.04426400000001, -58.43294, 86.02011300000001, -58.457370000000004, 86.10141800000001, -58.49022);
        ctx.closePath();
        ctx.moveTo(61.386515, -59.938005000000004);
        ctx.bezierCurveTo(63.394668, -59.953615000000006, 66.651067, -59.953605, 68.622958, -59.937988000000004);
        ctx.bezierCurveTo(70.594849, -59.922368000000006, 68.951814, -59.909598, 64.97177099999999, -59.909608000000006);
        ctx.bezierCurveTo(60.99172699999999, -59.909619000000006, 59.37836199999999, -59.92239800000001, 61.38651499999999, -59.938008);
        ctx.closePath();
        ctx.moveTo(36.47164600000001, -67.24574100000001);
        ctx.bezierCurveTo(36.34486900000001, -67.40898600000001, 36.34847400000001, -67.41262700000001, 36.51012600000001, -67.28460100000001);
        ctx.bezierCurveTo(36.60822600000001, -67.206911, 36.688489000000004, -67.125854, 36.688489000000004, -67.104482);
        ctx.bezierCurveTo(36.688489000000004, -67.019772, 36.604789000000004, -67.074292, 36.471644000000005, -67.24574100000001);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(61.790387, -24.505982);
        ctx.bezierCurveTo(61.791202000000006, -24.789026, 61.810947000000006, -24.892601, 61.834377, -24.736148);
        ctx.bezierCurveTo(61.857807, -24.579696, 61.857177, -24.348114, 61.83297700000001, -24.221522);
        ctx.bezierCurveTo(61.80878700000001, -24.09493, 61.78961700000001, -24.222922, 61.79037700000001, -24.505982);
        ctx.closePath();
        ctx.moveTo(67.27305700000001, -24.514582);
        ctx.bezierCurveTo(67.27795700000001, -24.634485, 67.302097, -24.658873, 67.33463700000001, -24.576762000000002);
        ctx.bezierCurveTo(67.36407700000001, -24.502462, 67.36045700000001, -24.413689, 67.32663700000002, -24.379488000000002);
        ctx.bezierCurveTo(67.29276700000003, -24.345288000000004, 67.26867700000003, -24.406078, 67.27310700000002, -24.514577000000003);
        ctx.closePath();
        ctx.moveTo(71.259827, -25.226483);
        ctx.bezierCurveTo(71.261927, -25.396310000000003, 71.284747, -25.453324000000002, 71.310587, -25.353181000000003);
        ctx.bezierCurveTo(71.336427, -25.253038000000004, 71.334727, -25.114089000000003, 71.306787, -25.044405);
        ctx.bezierCurveTo(71.278867, -24.974725, 71.257727, -25.056655000000003, 71.259797, -25.226483);
        ctx.closePath();
        ctx.moveTo(50.66786, -25.380847);
        ctx.bezierCurveTo(50.66786, -25.52237, 50.690999999999995, -25.580265, 50.719269999999995, -25.509504);
        ctx.bezierCurveTo(50.747539999999994, -25.438744, 50.747539999999994, -25.322952, 50.719269999999995, -25.252191);
        ctx.bezierCurveTo(50.690999999999995, -25.181431, 50.66786, -25.239321, 50.66786, -25.380847);
        ctx.closePath();
        ctx.moveTo(54.948572999999996, -26.821801999999998);
        ctx.bezierCurveTo(54.948572999999996, -26.963324999999998, 54.971703, -27.02122, 54.99998299999999, -26.950459);
        ctx.bezierCurveTo(55.02825299999999, -26.879699, 55.02825299999999, -26.763907, 54.99998299999999, -26.693146);
        ctx.bezierCurveTo(54.971712999999994, -26.622386, 54.948572999999996, -26.680276, 54.948572999999996, -26.821801999999998);
        ctx.closePath();
        ctx.moveTo(44.442589, -26.881842);
        ctx.bezierCurveTo(44.447489, -27.001745, 44.471629, -27.026132999999998, 44.504169, -26.944022);
        ctx.bezierCurveTo(44.533609, -26.869722, 44.529989, -26.780949, 44.496168999999995, -26.746748);
        ctx.bezierCurveTo(44.462298999999994, -26.712548, 44.43820899999999, -26.773338, 44.44263899999999, -26.881838000000002);
        ctx.closePath();
        ctx.moveTo(53.837044, -27.387891999999997);
        ctx.bezierCurveTo(53.838144, -27.614327999999997, 53.859044, -27.694840999999997, 53.883424, -27.566810999999998);
        ctx.bezierCurveTo(53.907804, -27.438781, 53.906873999999995, -27.253515999999998, 53.881324, -27.155109999999997);
        ctx.bezierCurveTo(53.855814, -27.056699999999996, 53.835864, -27.161509999999996, 53.836994, -27.387891999999997);
        ctx.closePath();
        ctx.moveTo(56.26551, -27.499394);
        ctx.bezierCurveTo(56.27041, -27.619297, 56.29455, -27.643684999999998, 56.32709, -27.561574);
        ctx.bezierCurveTo(56.35653, -27.487274, 56.35291, -27.398502, 56.319089999999996, -27.3643);
        ctx.bezierCurveTo(56.285219999999995, -27.3301, 56.261129999999994, -27.39089, 56.265559999999994, -27.499390000000002);
        ctx.closePath();
        ctx.moveTo(63.067109, -27.509663999999997);
        ctx.bezierCurveTo(63.140679, -27.539393999999998, 63.228591, -27.535743999999998, 63.262459, -27.501564);
        ctx.bezierCurveTo(63.296329, -27.467364, 63.236129, -27.443033999999997, 63.128687, -27.447504);
        ctx.bezierCurveTo(63.009952999999996, -27.452403999999998, 62.985803, -27.476834, 63.067107, -27.509684);
        ctx.closePath();
        ctx.moveTo(54.948573, -27.851053999999998);
        ctx.bezierCurveTo(54.948573, -27.992575999999996, 54.971703000000005, -28.050472, 54.999983, -27.979710999999998);
        ctx.bezierCurveTo(55.028253, -27.908951, 55.028253, -27.793159, 54.999983, -27.722396999999997);
        ctx.bezierCurveTo(54.971713, -27.651636999999997, 54.948573, -27.709536999999997, 54.948573, -27.851053999999998);
        ctx.closePath();
        ctx.moveTo(83.070925, -27.911094);
        ctx.bezierCurveTo(83.07582500000001, -28.030997, 83.099965, -28.055386, 83.13250500000001, -27.973274);
        ctx.bezierCurveTo(83.161945, -27.898974, 83.158325, -27.810201, 83.12450500000001, -27.776);
        ctx.bezierCurveTo(83.09063500000002, -27.7418, 83.06654500000002, -27.80259, 83.07097500000002, -27.911089);
        ctx.closePath();
        ctx.moveTo(62.918554, -28.931770999999998);
        ctx.bezierCurveTo(62.918248, -29.441252, 62.935474, -29.662653, 62.956854, -29.423771999999996);
        ctx.bezierCurveTo(62.978224, -29.184892999999995, 62.978484, -28.768044999999997, 62.957465, -28.497443999999994);
        ctx.bezierCurveTo(62.936405, -28.226843999999993, 62.918915, -28.422293999999994, 62.918605, -28.931770999999994);
        ctx.closePath();
        ctx.moveTo(59.017396, -28.734496999999998);
        ctx.bezierCurveTo(59.022296, -28.8544, 59.046436, -28.878788999999998, 59.078976, -28.796687);
        ctx.bezierCurveTo(59.108416, -28.722386999999998, 59.104796, -28.633613999999998, 59.070975999999995, -28.599413);
        ctx.bezierCurveTo(59.037105999999994, -28.565213, 59.01301599999999, -28.626002999999997, 59.01744599999999, -28.734502);
        ctx.closePath();
        ctx.moveTo(85.12495799999999, -29.703711999999996);
        ctx.bezierCurveTo(85.12495799999999, -29.901842999999996, 85.14593799999999, -29.982896999999994, 85.171568, -29.883830999999997);
        ctx.bezierCurveTo(85.19720799999999, -29.784760999999996, 85.19720799999999, -29.622657999999998, 85.171568, -29.523591999999997);
        ctx.bezierCurveTo(85.145928, -29.424521999999996, 85.12495799999999, -29.505581999999997, 85.12495799999999, -29.703711999999996);
        ctx.closePath();
        ctx.moveTo(53.86230199999999, -29.806636999999995);
        ctx.bezierCurveTo(53.96376399999999, -29.919854999999995, 54.06971099999999, -30.012487999999994, 54.097739999999995, -30.012487999999994);
        ctx.bezierCurveTo(54.125769999999996, -30.012487999999994, 54.06569, -29.919857999999994, 53.964223999999994, -29.806636999999995);
        ctx.bezierCurveTo(53.862762, -29.693418999999995, 53.756814999999996, -29.600785999999996, 53.728787, -29.600785999999996);
        ctx.bezierCurveTo(53.700756999999996, -29.600785999999996, 53.760836999999995, -29.693415999999996, 53.862302, -29.806636999999995);
        ctx.closePath();
        ctx.moveTo(51.95763999999999, -29.774016999999994);
        ctx.bezierCurveTo(52.03120999999999, -29.803746999999994, 52.11912299999999, -29.800096999999994, 52.15298999999999, -29.765916999999995);
        ctx.bezierCurveTo(52.18685999999999, -29.731716999999996, 52.12665999999999, -29.707386999999994, 52.01921799999999, -29.711856999999995);
        ctx.bezierCurveTo(51.900483999999985, -29.716756999999994, 51.876333999999986, -29.741186999999996, 51.95763799999999, -29.774036999999996);
        ctx.closePath();
        ctx.moveTo(65.242668, -30.218334999999993);
        ctx.bezierCurveTo(65.242668, -30.35985699999999, 65.26579799999999, -30.417751999999993, 65.294078, -30.346990999999992);
        ctx.bezierCurveTo(65.322348, -30.276230999999992, 65.322348, -30.160438999999993, 65.294078, -30.089677999999992);
        ctx.bezierCurveTo(65.26580799999999, -30.018917999999992, 65.242668, -30.076807999999993, 65.242668, -30.218334999999993);
        ctx.closePath();
        ctx.moveTo(35.344398, -30.80327099999999);
        ctx.bezierCurveTo(35.417967999999995, -30.833000999999992, 35.50588, -30.829350999999992, 35.539747999999996, -30.795170999999993);
        ctx.bezierCurveTo(35.573617999999996, -30.760970999999994, 35.513417999999994, -30.73664099999999, 35.405975999999995, -30.741110999999993);
        ctx.bezierCurveTo(35.28724199999999, -30.746010999999992, 35.26309199999999, -30.770440999999995, 35.344395999999996, -30.803290999999994);
        ctx.closePath();
        ctx.moveTo(61.689857, -31.350513999999993);
        ctx.bezierCurveTo(61.689857, -31.661862999999993, 61.708967, -31.789232999999992, 61.732317, -31.633557999999994);
        ctx.bezierCurveTo(61.755667, -31.477883999999992, 61.755667, -31.223142999999993, 61.732317, -31.067468999999992);
        ctx.bezierCurveTo(61.708967, -30.911793999999993, 61.689857, -31.03916899999999, 61.689857, -31.350513999999993);
        ctx.closePath();
        ctx.moveTo(34.22936800000001, -31.324783999999994);
        ctx.bezierCurveTo(34.10259100000001, -31.488029999999995, 34.10619600000001, -31.491669999999996, 34.26784800000001, -31.363643999999994);
        ctx.bezierCurveTo(34.43762400000001, -31.229184999999994, 34.49161500000001, -31.144663999999995, 34.40772900000001, -31.144663999999995);
        ctx.bezierCurveTo(34.38656900000001, -31.144663999999995, 34.30630200000001, -31.225713999999996, 34.22936600000001, -31.324782999999996);
        ctx.closePath();
        ctx.moveTo(77.88096200000001, -31.556365999999993);
        ctx.bezierCurveTo(77.88096200000001, -31.697888999999993, 77.904092, -31.755783999999995, 77.93237200000002, -31.685022999999994);
        ctx.bezierCurveTo(77.96064200000002, -31.614262999999994, 77.96064200000002, -31.498470999999995, 77.93237200000002, -31.427709999999994);
        ctx.bezierCurveTo(77.90410200000001, -31.356949999999994, 77.88096200000001, -31.414839999999995, 77.88096200000001, -31.556365999999993);
        ctx.closePath();
        ctx.moveTo(54.63476200000001, -31.719330999999993);
        ctx.bezierCurveTo(54.63966200000001, -31.839233999999994, 54.66380200000001, -31.863621999999992, 54.69634200000001, -31.781510999999995);
        ctx.bezierCurveTo(54.72578200000001, -31.707210999999994, 54.72216200000001, -31.618437999999994, 54.688342000000006, -31.584236999999995);
        ctx.bezierCurveTo(54.654472000000005, -31.550036999999996, 54.630382000000004, -31.610826999999993, 54.634812000000004, -31.719325999999995);
        ctx.closePath();
        ctx.moveTo(53.41170100000001, -32.02810699999999);
        ctx.bezierCurveTo(53.41660100000001, -32.14800999999999, 53.44074100000001, -32.172397999999994, 53.47328100000001, -32.09028699999999);
        ctx.bezierCurveTo(53.50272100000001, -32.01598699999999, 53.49910100000001, -31.92721399999999, 53.465281000000004, -31.89301299999999);
        ctx.bezierCurveTo(53.431411000000004, -31.85881299999999, 53.407321, -31.919602999999988, 53.411751, -32.02810199999999);
        ctx.closePath();
        ctx.moveTo(33.85455200000001, -32.431231999999994);
        ctx.bezierCurveTo(33.85665200000001, -32.60105899999999, 33.879472000000014, -32.658072999999995, 33.90531200000001, -32.55792999999999);
        ctx.bezierCurveTo(33.93115200000001, -32.45778699999999, 33.92945200000001, -32.318836999999995, 33.90151200000001, -32.24915399999999);
        ctx.bezierCurveTo(33.87359200000001, -32.17947399999999, 33.852452000000014, -32.26140399999999, 33.85452200000001, -32.43123199999999);
        ctx.closePath();
        ctx.moveTo(54.63476200000001, -32.336881999999996);
        ctx.bezierCurveTo(54.63966200000001, -32.456784999999996, 54.66380200000001, -32.481173, 54.69634200000001, -32.399061999999994);
        ctx.bezierCurveTo(54.72578200000001, -32.32476199999999, 54.72216200000001, -32.235989, 54.688342000000006, -32.20178799999999);
        ctx.bezierCurveTo(54.654472000000005, -32.167587999999995, 54.630382000000004, -32.22837799999999, 54.634812000000004, -32.336876999999994);
        ctx.closePath();
        ctx.moveTo(60.99263200000001, -32.695392);
        ctx.bezierCurveTo(60.95568200000001, -32.755772, 60.94731200000001, -32.827239, 60.974022000000005, -32.854219);
        ctx.bezierCurveTo(61.000742, -32.881199, 61.049752000000005, -32.831799000000004, 61.082950000000004, -32.744446);
        ctx.bezierCurveTo(61.15187, -32.56308000000001, 61.09313, -32.531179, 60.992630000000005, -32.695396);
        ctx.closePath();
        ctx.moveTo(61.888639000000005, -32.970456);
        ctx.bezierCurveTo(62.210966000000006, -32.990876, 62.738411000000006, -32.990876, 63.06073800000001, -32.970456);
        ctx.bezierCurveTo(63.38306600000001, -32.950026, 63.11934800000001, -32.933316, 62.474689000000005, -32.933316);
        ctx.bezierCurveTo(61.830034000000005, -32.933316, 61.566311000000006, -32.950026, 61.888639000000005, -32.970456);
        ctx.closePath();
        ctx.moveTo(57.8691, -33.37641);
        ctx.bezierCurveTo(57.94267, -33.40614, 58.030583, -33.40249, 58.064451000000005, -33.36831);
        ctx.bezierCurveTo(58.098321000000006, -33.33411, 58.038121000000004, -33.30978, 57.93067800000001, -33.31425);
        ctx.bezierCurveTo(57.81194500000001, -33.31915, 57.787794000000005, -33.34358, 57.86909800000001, -33.37643);
        ctx.closePath();
        ctx.moveTo(48.288458000000006, -35.023216);
        ctx.bezierCurveTo(48.362028, -35.052946, 48.449941, -35.049296, 48.483808, -35.015116);
        ctx.bezierCurveTo(48.517678000000004, -34.980916, 48.457478, -34.956586, 48.350036, -34.961056);
        ctx.bezierCurveTo(48.231302, -34.965956, 48.207152, -34.990386, 48.288456000000004, -35.023236);
        ctx.closePath();
        ctx.moveTo(82.13258100000002, -36.059354);
        ctx.bezierCurveTo(82.00580400000001, -36.2226, 82.00940900000002, -36.22624, 82.17106100000002, -36.098214);
        ctx.bezierCurveTo(82.26916100000003, -36.020524, 82.34942400000003, -35.939467, 82.34942400000003, -35.918093999999996);
        ctx.bezierCurveTo(82.34942400000003, -35.833383999999995, 82.26572400000003, -35.887904, 82.13257900000002, -36.059352999999994);
        ctx.closePath();
        ctx.moveTo(30.216461000000017, -37.834817);
        ctx.bezierCurveTo(30.317923000000018, -37.948035000000004, 30.423870000000015, -38.040667, 30.451898000000018, -38.040667);
        ctx.bezierCurveTo(30.47992800000002, -38.040667, 30.419848000000016, -37.948037, 30.31838300000002, -37.834817);
        ctx.bezierCurveTo(30.216921000000017, -37.721599, 30.11097400000002, -37.628966, 30.082946000000018, -37.628966);
        ctx.bezierCurveTo(30.054916000000016, -37.628966, 30.11499600000002, -37.721596, 30.216461000000017, -37.834817);
        ctx.closePath();
        ctx.moveTo(25.782866000000016, -38.240444000000004);
        ctx.bezierCurveTo(25.782866000000016, -38.293714, 25.828206000000016, -38.365593000000004, 25.883621000000016, -38.400178000000004);
        ctx.bezierCurveTo(25.941391000000017, -38.436238, 25.958481000000017, -38.394878000000006, 25.923681000000016, -38.303328);
        ctx.bezierCurveTo(25.855921000000016, -38.125018, 25.782870000000017, -38.092394, 25.782870000000017, -38.240448);
        ctx.closePath();
        ctx.moveTo(27.515535000000018, -40.150637);
        ctx.bezierCurveTo(27.64719300000002, -40.29216, 27.777844000000016, -40.407951000000004, 27.805873000000016, -40.407951000000004);
        ctx.bezierCurveTo(27.833903000000017, -40.407951000000004, 27.749113000000015, -40.29216, 27.617457000000016, -40.150637);
        ctx.bezierCurveTo(27.485800000000015, -40.009115, 27.355148000000018, -39.893324, 27.327120000000015, -39.893324);
        ctx.bezierCurveTo(27.299090000000014, -39.893324, 27.383880000000016, -40.009115, 27.515535000000014, -40.150637);
        ctx.closePath();
        ctx.moveTo(29.685042000000017, -40.562339);
        ctx.bezierCurveTo(29.685858000000017, -40.845384, 29.705602000000017, -40.948959, 29.729032000000018, -40.792506);
        ctx.bezierCurveTo(29.75246200000002, -40.636053000000004, 29.751832000000018, -40.404471, 29.727632000000018, -40.277879000000006);
        ctx.bezierCurveTo(29.703442000000017, -40.151287, 29.684272000000018, -40.279279, 29.685042000000017, -40.56233900000001);
        ctx.closePath();
        ctx.moveTo(38.02956600000002, -40.305026);
        ctx.bezierCurveTo(38.02956600000002, -40.446548, 38.05269600000002, -40.504442999999995, 38.080976000000014, -40.433682);
        ctx.bezierCurveTo(38.10924600000001, -40.362922, 38.10924600000001, -40.24713, 38.080976000000014, -40.176368999999994);
        ctx.bezierCurveTo(38.052706000000015, -40.105608999999994, 38.02956600000002, -40.163498999999995, 38.02956600000002, -40.30502599999999);
        ctx.closePath();
        ctx.moveTo(31.620164000000017, -41.128428);
        ctx.bezierCurveTo(31.620164000000017, -41.383169, 31.640044000000017, -41.487381, 31.664334000000018, -41.360011);
        ctx.bezierCurveTo(31.68862400000002, -41.23264, 31.68862400000002, -41.024217, 31.664334000000018, -40.896846000000004);
        ctx.bezierCurveTo(31.640044000000017, -40.769476000000004, 31.620164000000017, -40.873686000000006, 31.620164000000017, -41.12842800000001);
        ctx.closePath();
        ctx.moveTo(32.91738700000002, -41.167288);
        ctx.bezierCurveTo(32.91738700000002, -41.188658, 32.99764700000002, -41.269714, 33.09575000000002, -41.347407);
        ctx.bezierCurveTo(33.257404000000015, -41.475432999999995, 33.261009000000016, -41.471793, 33.13423000000002, -41.308547);
        ctx.bezierCurveTo(33.00108200000002, -41.137099, 32.91738500000002, -41.082575999999996, 32.91738500000002, -41.167288);
        ctx.closePath();
        ctx.moveTo(34.24236900000002, -42.608243);
        ctx.bezierCurveTo(34.24236900000002, -42.629613, 34.32262900000002, -42.710669, 34.420732000000015, -42.788363000000004);
        ctx.bezierCurveTo(34.582386000000014, -42.916388000000005, 34.585991000000014, -42.912748, 34.459212000000015, -42.749503000000004);
        ctx.bezierCurveTo(34.326065000000014, -42.578055000000006, 34.242367000000016, -42.523532, 34.242367000000016, -42.608244000000006);
        ctx.closePath();
        ctx.moveTo(34.39597400000002, -43.391607);
        ctx.bezierCurveTo(34.360264000000015, -43.449947, 34.40117400000002, -43.467207, 34.49188400000002, -43.432057);
        ctx.bezierCurveTo(34.66845500000002, -43.363637, 34.70076100000002, -43.289859, 34.55415400000002, -43.289859);
        ctx.bezierCurveTo(34.501404000000015, -43.289859, 34.43022500000002, -43.335649, 34.39597800000002, -43.391606);
        ctx.closePath();
        ctx.moveTo(33.84272900000002, -43.658676);
        ctx.bezierCurveTo(33.84762900000002, -43.778579, 33.87176900000002, -43.802967, 33.90430900000002, -43.720856);
        ctx.bezierCurveTo(33.93374900000002, -43.646556, 33.93012900000002, -43.557783, 33.89630900000002, -43.523582);
        ctx.bezierCurveTo(33.862439000000016, -43.489382, 33.838349000000015, -43.550171999999996, 33.842779000000014, -43.658671999999996);
        ctx.closePath();
        ctx.moveTo(19.64845200000002, -47.168408);
        ctx.bezierCurveTo(19.72203200000002, -47.198138, 19.80993400000002, -47.194488, 19.84380200000002, -47.160308);
        ctx.bezierCurveTo(19.87767200000002, -47.126108, 19.81747200000002, -47.101778, 19.71003000000002, -47.106248);
        ctx.bezierCurveTo(19.591297000000022, -47.111148, 19.56714500000002, -47.135578, 19.64845000000002, -47.168428);
        ctx.closePath();
        ctx.moveTo(17.40617400000002, -51.182498);
        ctx.bezierCurveTo(17.47974400000002, -51.212228, 17.56765600000002, -51.208578, 17.601524000000023, -51.174398000000004);
        ctx.bezierCurveTo(17.635394000000023, -51.140198000000005, 17.57519400000002, -51.115868000000006, 17.46775100000002, -51.120338000000004);
        ctx.bezierCurveTo(17.349018000000022, -51.125238, 17.324867000000022, -51.149668000000005, 17.406171000000022, -51.182518);
        ctx.closePath();
        ctx.moveTo(19.526206000000023, -53.807081000000004);
        ctx.bezierCurveTo(19.555646000000024, -53.855181, 19.622426000000022, -53.867881000000004, 19.674605000000025, -53.835311000000004);
        ctx.bezierCurveTo(19.807957000000023, -53.752081000000004, 19.792942000000025, -53.719627, 19.621085000000026, -53.719627);
        ctx.bezierCurveTo(19.539465000000025, -53.719627, 19.496770000000026, -53.758977, 19.526205000000026, -53.807077);
        ctx.closePath();
        ctx.moveTo(24.559805000000022, -54.611651);
        ctx.bezierCurveTo(24.559805000000022, -54.668261, 24.608375000000024, -54.714576, 24.667742000000022, -54.714576);
        ctx.bezierCurveTo(24.727112000000023, -54.714576, 24.74733200000002, -54.668256, 24.712692000000022, -54.611651);
        ctx.bezierCurveTo(24.678042000000023, -54.555041, 24.62947200000002, -54.508725000000005, 24.604755000000022, -54.508725000000005);
        ctx.bezierCurveTo(24.580035000000024, -54.508725000000005, 24.559805000000022, -54.55504500000001, 24.559805000000022, -54.611651);
        ctx.closePath();
        ctx.moveTo(15.571583000000022, -55.093661000000004);
        ctx.bezierCurveTo(15.645153000000022, -55.123391000000005, 15.733065000000021, -55.119741000000005, 15.766933000000021, -55.085561000000006);
        ctx.bezierCurveTo(15.800803000000021, -55.05136100000001, 15.740603000000021, -55.02703100000001, 15.633160000000021, -55.031501000000006);
        ctx.bezierCurveTo(15.51442700000002, -55.036401000000005, 15.490276000000021, -55.06083100000001, 15.571580000000022, -55.093681000000004);
        ctx.closePath();
        ctx.moveTo(72.79426400000003, -59.936905);
        ctx.bezierCurveTo(73.11659100000003, -59.957335, 73.64403600000003, -59.957335, 73.96636400000003, -59.936905);
        ctx.bezierCurveTo(74.28869100000003, -59.916475000000005, 74.02497400000003, -59.899765, 73.38031400000003, -59.899765);
        ctx.bezierCurveTo(72.73565900000003, -59.899765, 72.47193600000003, -59.916475000000005, 72.79426400000003, -59.936905);
        ctx.closePath();
        ctx.moveTo(13.736991000000025, -60.754557000000005);
        ctx.bezierCurveTo(13.810561000000025, -60.784287000000006, 13.898474000000025, -60.780637000000006, 13.932341000000024, -60.74645700000001);
        ctx.bezierCurveTo(13.966211000000024, -60.71225700000001, 13.906011000000024, -60.68792700000001, 13.798569000000024, -60.69239700000001);
        ctx.bezierCurveTo(13.679836000000023, -60.697297000000006, 13.655685000000023, -60.72172700000001, 13.736989000000024, -60.754577000000005);
        ctx.closePath();
        ctx.moveTo(21.680516000000026, -60.855338);
        ctx.bezierCurveTo(21.750586000000027, -60.883888000000006, 21.865249000000027, -60.883888000000006, 21.935321000000027, -60.855338);
        ctx.bezierCurveTo(22.005391000000028, -60.826788, 21.948061000000028, -60.803428000000004, 21.807918000000026, -60.803428000000004);
        ctx.bezierCurveTo(21.667776000000025, -60.803428000000004, 21.610445000000027, -60.826788, 21.680516000000026, -60.855338);
        ctx.closePath();
        ctx.moveTo(86.40081500000002, -62.707995000000004);
        ctx.bezierCurveTo(86.47088500000002, -62.73654500000001, 86.58554800000002, -62.73654500000001, 86.65561900000002, -62.707995000000004);
        ctx.bezierCurveTo(86.72568900000002, -62.679445, 86.66835900000001, -62.656075, 86.52821700000001, -62.656075);
        ctx.bezierCurveTo(86.38807400000002, -62.656075, 86.33074300000001, -62.679435, 86.40081500000001, -62.707995000000004);
        ctx.closePath();
        ctx.moveTo(87.52195400000002, -62.707995000000004);
        ctx.bezierCurveTo(87.59202400000002, -62.73654500000001, 87.70668700000002, -62.73654500000001, 87.77675800000002, -62.707995000000004);
        ctx.bezierCurveTo(87.84682800000002, -62.679445, 87.78949800000001, -62.656075, 87.64935600000001, -62.656075);
        ctx.bezierCurveTo(87.50921300000002, -62.656075, 87.45188200000001, -62.679435, 87.52195400000001, -62.707995000000004);
        ctx.closePath();
        ctx.moveTo(17.807491000000027, -68.883517);
        ctx.bezierCurveTo(17.87756100000003, -68.912067, 17.99222400000003, -68.912067, 18.062295000000027, -68.883517);
        ctx.bezierCurveTo(18.13236500000003, -68.854967, 18.075035000000028, -68.83160699999999, 17.934893000000027, -68.83160699999999);
        ctx.bezierCurveTo(17.79475000000003, -68.83160699999999, 17.737419000000028, -68.85496699999999, 17.807491000000027, -68.883517);
        ctx.closePath();
        ctx.moveTo(19.444608000000027, -68.885617);
        ctx.bezierCurveTo(19.518188000000027, -68.915347, 19.606091000000028, -68.91169699999999, 19.63995800000003, -68.877517);
        ctx.bezierCurveTo(19.67382800000003, -68.843317, 19.613628000000027, -68.81898699999999, 19.506186000000028, -68.82345699999999);
        ctx.bezierCurveTo(19.38745300000003, -68.828357, 19.36330200000003, -68.85278699999999, 19.44460600000003, -68.88563699999999);
        ctx.closePath();
        ctx.moveTo(113.74936000000002, -70.830929);
        ctx.bezierCurveTo(113.75436000000002, -70.95083199999999, 113.77836000000002, -70.97522, 113.81096000000002, -70.893109);
        ctx.bezierCurveTo(113.84036000000002, -70.818809, 113.83676000000003, -70.730036, 113.80296000000003, -70.695835);
        ctx.bezierCurveTo(113.76906000000002, -70.661635, 113.74496000000002, -70.722425, 113.74946000000003, -70.83092500000001);
        ctx.closePath();
        ctx.moveTo(113.86310000000003, -72.469158);
        ctx.bezierCurveTo(113.86510000000003, -72.63898499999999, 113.88800000000003, -72.69599899999999, 113.91390000000003, -72.595856);
        ctx.bezierCurveTo(113.93970000000003, -72.495713, 113.93800000000003, -72.356763, 113.90990000000002, -72.28708);
        ctx.bezierCurveTo(113.88200000000002, -72.2174, 113.86090000000002, -72.29933, 113.86290000000002, -72.46915800000001);
        ctx.closePath();
        ctx.moveTo(67.62037200000003, -79.05638099999999);
        ctx.lineTo(67.62177200000004, -84.40850099999999);
        ctx.lineTo(68.25879700000003, -84.45996099999999);
        ctx.bezierCurveTo(68.60916100000003, -84.488271, 68.89581600000002, -84.47669099999999, 68.89580800000003, -84.434231);
        ctx.bezierCurveTo(68.89580000000004, -84.39177099999999, 68.62101400000003, -84.357041, 68.28517200000003, -84.357041);
        ctx.lineTo(67.67455100000004, -84.357041);
        ctx.lineTo(67.64680100000004, -79.030653);
        ctx.lineTo(67.61905100000004, -73.704265);
        ctx.lineTo(67.62045100000005, -79.05638400000001);
        ctx.closePath();
        ctx.moveTo(95.43617000000003, -75.14521699999999);
        ctx.bezierCurveTo(95.43627200000003, -75.99435199999999, 95.45210000000003, -76.32802899999999, 95.47125000000003, -75.88672199999999);
        ctx.bezierCurveTo(95.49040000000002, -75.445416, 95.49029000000003, -74.75066999999999, 95.47094400000003, -74.34284099999999);
        ctx.bezierCurveTo(95.45165400000003, -73.935014, 95.43598400000003, -74.29608099999999, 95.43612400000004, -75.14521699999999);
        ctx.closePath();
        ctx.moveTo(20.865142000000034, -82.88132599999999);
        ctx.bezierCurveTo(20.935212000000035, -82.90987599999998, 21.049876000000033, -82.90987599999998, 21.119947000000035, -82.88132599999999);
        ctx.bezierCurveTo(21.190017000000037, -82.85277599999999, 21.132687000000036, -82.82941599999998, 20.992545000000035, -82.82941599999998);
        ctx.bezierCurveTo(20.852402000000037, -82.82941599999998, 20.795071000000036, -82.85277599999998, 20.865142000000034, -82.88132599999999);
        ctx.closePath();
        ctx.moveTo(57.45504300000003, -84.431497);
        ctx.bezierCurveTo(57.63722800000003, -84.45432699999999, 57.935350000000035, -84.45432699999999, 58.11753500000003, -84.431497);
        ctx.bezierCurveTo(58.29972000000003, -84.408667, 58.15065500000003, -84.38998699999999, 57.78628900000003, -84.38998699999999);
        ctx.bezierCurveTo(57.42191900000003, -84.38998699999999, 57.272858000000035, -84.408667, 57.45504300000003, -84.431497);
        ctx.closePath();
        ctx.moveTo(78.82706400000004, -87.341877);
        ctx.bezierCurveTo(78.82706400000004, -88.955232, 78.84115400000003, -89.615241, 78.85837400000004, -88.80856299999999);
        ctx.bezierCurveTo(78.87559400000004, -88.001886, 78.87559400000004, -86.681868, 78.85837400000004, -85.87518999999999);
        ctx.bezierCurveTo(78.84115400000005, -85.068513, 78.82706400000004, -85.72852099999999, 78.82706400000004, -87.34187699999998);
        ctx.closePath();
        ctx.moveTo(21.44150900000004, -85.412026);
        ctx.lineTo(21.24734900000004, -85.643608);
        ctx.lineTo(21.476673000000037, -85.447536);
        ctx.bezierCurveTo(21.692180000000036, -85.263277, 21.752396000000036, -85.180444, 21.670833000000037, -85.180444);
        ctx.bezierCurveTo(21.651493000000038, -85.180444, 21.548296000000036, -85.284656, 21.44150900000004, -85.412026);
        ctx.closePath();
        ctx.moveTo(19.23558300000004, -85.767866);
        ctx.bezierCurveTo(19.36236500000004, -85.792486, 19.545824000000042, -85.791546, 19.64327000000004, -85.765766);
        ctx.bezierCurveTo(19.74072000000004, -85.740006, 19.63697000000004, -85.719866, 19.41275800000004, -85.721006);
        ctx.bezierCurveTo(19.18853000000004, -85.722106, 19.10880100000004, -85.743226, 19.23558300000004, -85.767846);
        ctx.closePath();
        ctx.moveTo(22.19012500000004, -87.924669);
        ctx.bezierCurveTo(22.260195000000042, -87.95321899999999, 22.374858000000042, -87.95321899999999, 22.44492900000004, -87.924669);
        ctx.bezierCurveTo(22.514999000000042, -87.896119, 22.457669000000042, -87.872749, 22.31752700000004, -87.872749);
        ctx.bezierCurveTo(22.17738500000004, -87.872749, 22.120054000000042, -87.896109, 22.19012500000004, -87.924669);
        ctx.closePath();
        ctx.moveTo(104.27869000000004, -88.268205);
        ctx.bezierCurveTo(104.27869000000004, -88.40972699999999, 104.30179000000004, -88.46762299999999, 104.33009000000004, -88.396862);
        ctx.bezierCurveTo(104.35839000000004, -88.32610199999999, 104.35839000000004, -88.210309, 104.33009000000004, -88.139548);
        ctx.bezierCurveTo(104.30179000000004, -88.068788, 104.27869000000004, -88.126678, 104.27869000000004, -88.26820500000001);
        ctx.closePath();
        ctx.moveTo(24.546804000000037, -94.41799599999999);
        ctx.bezierCurveTo(24.420027000000037, -94.58124099999999, 24.423632000000037, -94.584882, 24.585284000000037, -94.45685599999999);
        ctx.bezierCurveTo(24.683384000000036, -94.37916599999998, 24.763647000000038, -94.29810899999998, 24.763647000000038, -94.27673699999998);
        ctx.bezierCurveTo(24.763647000000038, -94.19202699999998, 24.679947000000038, -94.24654699999998, 24.54680200000004, -94.41799599999999);
        ctx.closePath();
        ctx.moveTo(26.213606000000038, -96.04717199999999);
        ctx.bezierCurveTo(26.310376000000037, -96.14919499999999, 26.411481000000038, -96.21051299999999, 26.43829500000004, -96.18343499999999);
        ctx.bezierCurveTo(26.46510500000004, -96.15635499999999, 26.38593500000004, -96.07288499999999, 26.26235900000004, -95.99793999999999);
        ctx.bezierCurveTo(26.04768000000004, -95.86774799999999, 26.04550800000004, -95.86994099999998, 26.21360900000004, -96.04716999999998);
        ctx.closePath();
        ctx.moveTo(24.357442000000038, -96.860931);
        ctx.bezierCurveTo(24.16809100000004, -97.05821499999999, 24.03296700000004, -97.23546099999999, 24.05716300000004, -97.254813);
        ctx.bezierCurveTo(24.08136300000004, -97.274163, 24.25553700000004, -97.112752, 24.44422500000004, -96.89611599999999);
        ctx.bezierCurveTo(24.872977000000038, -96.40385799999999, 24.81766000000004, -96.38143099999999, 24.357445000000038, -96.860936);
        ctx.closePath();
        ctx.moveTo(23.425665000000038, -97.814533);
        ctx.bezierCurveTo(23.29627400000004, -97.981144, 23.30107100000004, -97.983328, 23.48962500000004, -97.843653);
        ctx.bezierCurveTo(23.601739000000038, -97.760603, 23.71257900000004, -97.679551, 23.735936000000038, -97.663533);
        ctx.bezierCurveTo(23.759296000000038, -97.647513, 23.730536000000036, -97.634413, 23.671976000000036, -97.634413);
        ctx.bezierCurveTo(23.613436000000036, -97.634413, 23.502601000000038, -97.715463, 23.425665000000038, -97.814533);
        ctx.closePath();
        ctx.moveTo(20.633427000000037, -100.13036);
        ctx.lineTo(19.820445000000035, -100.97949);
        ctx.lineTo(20.661299000000035, -100.1585);
        ctx.bezierCurveTo(21.442259000000035, -99.39599, 21.548618000000037, -99.28121900000001, 21.474282000000034, -99.28121900000001);
        ctx.bezierCurveTo(21.458952000000036, -99.28121900000001, 21.080568000000035, -99.66333, 20.633427000000033, -100.13036000000001);
        ctx.closePath();
        ctx.moveTo(28.31790800000004, -100.59352);
        ctx.bezierCurveTo(28.191131000000038, -100.75677, 28.194736000000038, -100.76041, 28.356388000000038, -100.63242);
        ctx.bezierCurveTo(28.454488000000037, -100.55472, 28.53475100000004, -100.47367, 28.53475100000004, -100.4523);
        ctx.bezierCurveTo(28.53475100000004, -100.3676, 28.45105100000004, -100.4221, 28.31790600000004, -100.59356);
        ctx.closePath();
        ctx.moveTo(31.471372000000038, -103.67439999999999);
        ctx.bezierCurveTo(31.544952000000038, -103.7041, 31.632854000000037, -103.70049999999999, 31.666723000000037, -103.6664);
        ctx.bezierCurveTo(31.700593000000037, -103.6322, 31.640393000000035, -103.6079, 31.532950000000035, -103.61229999999999);
        ctx.bezierCurveTo(31.414217000000036, -103.61729999999999, 31.390066000000036, -103.6416, 31.471370000000036, -103.6745);
        ctx.closePath();
        ctx.moveTo(33.325074000000036, -104.77512999999999);
        ctx.bezierCurveTo(33.325074000000036, -104.79652999999999, 33.40533400000004, -104.87754999999999, 33.503437000000034, -104.95524999999999);
        ctx.bezierCurveTo(33.66509100000003, -105.08327, 33.66869600000003, -105.07963, 33.54191700000003, -104.91635);
        ctx.bezierCurveTo(33.40877000000003, -104.7449, 33.32507300000003, -104.69036999999999, 33.32507300000003, -104.77508999999999);
        ctx.closePath();
        ctx.moveTo(30.865951000000038, -106.76903999999999);
        ctx.bezierCurveTo(30.739174000000038, -106.93229, 30.742779000000038, -106.93592999999998, 30.904431000000038, -106.80793999999999);
        ctx.bezierCurveTo(31.002531000000037, -106.73024, 31.08279400000004, -106.6492, 31.08279400000004, -106.62781999999999);
        ctx.bezierCurveTo(31.08279400000004, -106.54311999999999, 30.99909400000004, -106.59761999999999, 30.86594900000004, -106.76907999999999);
        ctx.closePath();
        ctx.moveTo(32.29285500000004, -106.97488999999999);
        ctx.bezierCurveTo(32.16607800000004, -107.13813999999999, 32.16968300000004, -107.14177999999998, 32.33133500000004, -107.01378999999999);
        ctx.bezierCurveTo(32.50111100000004, -106.87932999999998, 32.55510200000004, -106.79480999999998, 32.47121600000004, -106.79480999999998);
        ctx.bezierCurveTo(32.45005600000004, -106.79480999999998, 32.36978900000004, -106.87590999999999, 32.29285300000004, -106.97492999999999);
        ctx.closePath();
        ctx.moveTo(35.66927400000004, -106.93658999999998);
        ctx.bezierCurveTo(35.66927400000004, -106.95798999999998, 35.74953400000004, -107.03901999999998, 35.847637000000034, -107.11670999999998);
        ctx.bezierCurveTo(36.00929100000003, -107.24472999999999, 36.01289600000003, -107.24108999999999, 35.886117000000034, -107.07780999999999);
        ctx.bezierCurveTo(35.75297000000003, -106.90635999999999, 35.66927300000003, -106.85183999999998, 35.66927300000003, -106.93654999999998);
        ctx.closePath();
        ctx.moveTo(29.74481200000004, -108.00417999999998);
        ctx.bezierCurveTo(29.618035000000038, -108.16741999999998, 29.62164000000004, -108.17105999999998, 29.78329200000004, -108.04307999999997);
        ctx.bezierCurveTo(29.881392000000037, -107.96537999999998, 29.96165500000004, -107.88432999999998, 29.96165500000004, -107.86295999999997);
        ctx.bezierCurveTo(29.96165500000004, -107.77825999999997, 29.87795500000004, -107.83275999999998, 29.74481000000004, -108.00421999999998);
        ctx.closePath();
        ctx.moveTo(28.725595000000038, -109.13635999999998);
        ctx.bezierCurveTo(28.598818000000037, -109.29959999999998, 28.602422000000036, -109.30323999999999, 28.764075000000037, -109.17525999999998);
        ctx.bezierCurveTo(28.933852000000037, -109.04079999999998, 28.987843000000037, -108.95627999999998, 28.903957000000037, -108.95627999999998);
        ctx.bezierCurveTo(28.88279700000004, -108.95627999999998, 28.802530000000036, -109.03737999999998, 28.725594000000036, -109.13639999999998);
        ctx.closePath();
        ctx.moveTo(30.152499000000038, -109.34220999999998);
        ctx.bezierCurveTo(30.025722000000037, -109.50544999999998, 30.029327000000038, -109.50908999999999, 30.190979000000038, -109.38110999999998);
        ctx.bezierCurveTo(30.360755000000037, -109.24664999999997, 30.414746000000036, -109.16212999999998, 30.330860000000037, -109.16212999999998);
        ctx.bezierCurveTo(30.30970000000004, -109.16212999999998, 30.229433000000036, -109.24322999999998, 30.152497000000036, -109.34224999999998);
        ctx.closePath();
        ctx.moveTo(27.604456000000038, -110.37145999999998);
        ctx.bezierCurveTo(27.477678000000036, -110.53470999999999, 27.481283000000037, -110.53834999999998, 27.642936000000038, -110.41035999999998);
        ctx.bezierCurveTo(27.812713000000038, -110.27589999999998, 27.866704000000038, -110.19137999999998, 27.782818000000038, -110.19137999999998);
        ctx.bezierCurveTo(27.76165800000004, -110.19137999999998, 27.68139000000004, -110.27247999999999, 27.604455000000037, -110.37149999999998);
        ctx.closePath();
        ctx.moveTo(29.03136000000004, -110.57730999999998);
        ctx.bezierCurveTo(28.904583000000038, -110.74055999999999, 28.908188000000038, -110.74419999999998, 29.06984000000004, -110.61620999999998);
        ctx.bezierCurveTo(29.239616000000037, -110.48174999999998, 29.293607000000037, -110.39722999999998, 29.209721000000037, -110.39722999999998);
        ctx.bezierCurveTo(29.18856100000004, -110.39722999999998, 29.108294000000036, -110.47832999999999, 29.031358000000036, -110.57734999999998);
        ctx.closePath();
        ctx.moveTo(28.012143000000037, -111.70948999999999);
        ctx.bezierCurveTo(27.885365000000036, -111.87272999999999, 27.888970000000036, -111.87637999999998, 28.050623000000037, -111.74838999999999);
        ctx.bezierCurveTo(28.220399000000036, -111.61392999999998, 28.274390000000036, -111.52940999999998, 28.190505000000037, -111.52940999999998);
        ctx.bezierCurveTo(28.16934500000004, -111.52940999999998, 28.08907700000004, -111.61040999999999, 28.012142000000036, -111.70952999999999);
        ctx.closePath();
        ctx.moveTo(29.901012000000037, -111.86388);
        ctx.lineTo(29.706852000000037, -112.09545999999999);
        ctx.lineTo(29.936176000000035, -111.89938999999998);
        ctx.bezierCurveTo(30.151684000000035, -111.71512999999999, 30.211899000000034, -111.63229999999999, 30.130336000000035, -111.63229999999999);
        ctx.bezierCurveTo(30.110996000000036, -111.63229999999999, 30.007800000000035, -111.73650999999998, 29.901012000000037, -111.86387999999998);
        ctx.closePath();
        ctx.moveTo(26.700161000000037, -112.08286);
        ctx.bezierCurveTo(26.700161000000037, -112.10426, 26.780421000000036, -112.18527999999999, 26.878524000000038, -112.26298);
        ctx.bezierCurveTo(27.040178000000036, -112.391, 27.043783000000037, -112.38736, 26.917004000000038, -112.22408);
        ctx.bezierCurveTo(26.783857000000037, -112.05263000000001, 26.70015900000004, -111.99811, 26.70015900000004, -112.08282);
        ctx.closePath();
        ctx.moveTo(36.98125500000003, -112.32704);
        ctx.bezierCurveTo(36.854478000000036, -112.49029, 36.858083000000036, -112.49392999999999, 37.01973500000003, -112.36594);
        ctx.bezierCurveTo(37.117835000000035, -112.28824, 37.19809800000003, -112.2072, 37.19809800000003, -112.18581999999999);
        ctx.bezierCurveTo(37.19809800000003, -112.10112, 37.11439800000003, -112.15562, 36.98125300000003, -112.32708);
        ctx.closePath();
        ctx.moveTo(30.920230000000032, -112.58436);
        ctx.lineTo(30.726070000000032, -112.81594);
        ctx.lineTo(30.95539400000003, -112.61986999999999);
        ctx.bezierCurveTo(31.17090100000003, -112.43561, 31.23111600000003, -112.35276999999999, 31.14955400000003, -112.35276999999999);
        ctx.bezierCurveTo(31.13021400000003, -112.35276999999999, 31.02701700000003, -112.45697999999999, 30.920230000000032, -112.58435999999999);
        ctx.closePath();
        ctx.moveTo(28.92332900000003, -113.65819);
        ctx.bezierCurveTo(28.99689900000003, -113.68789000000001, 29.08481100000003, -113.68429, 29.118679000000032, -113.65019000000001);
        ctx.bezierCurveTo(29.152549000000032, -113.61599000000001, 29.09234900000003, -113.59169000000001, 28.98490700000003, -113.59609);
        ctx.bezierCurveTo(28.866174000000033, -113.60109, 28.842023000000033, -113.62539000000001, 28.923327000000032, -113.65829000000001);
        ctx.closePath();
        ctx.moveTo(35.45771600000003, -116.44406000000001);
        ctx.lineTo(35.21062600000003, -116.72710000000001);
        ctx.lineTo(35.49091100000003, -116.47758);
        ctx.bezierCurveTo(35.64506700000003, -116.34034, 35.771195000000034, -116.21297, 35.771195000000034, -116.19453);
        ctx.bezierCurveTo(35.771195000000034, -116.11383000000001, 35.68865500000003, -116.17953, 35.45771600000003, -116.44406);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(88.848175, -32.254158);
        ctx.bezierCurveTo(88.378136, -33.030857999999995, 85.065227, -38.541141999999994, 81.48615699999999, -44.499233999999994);
        ctx.bezierCurveTo(75.308708, -54.782855999999995, 74.96410099999999, -55.332128999999995, 74.68972899999999, -55.332128999999995);
        ctx.lineTo(74.40070199999998, -55.332128999999995);
        ctx.lineTo(74.37463199999998, -46.76802599999999);
        ctx.lineTo(74.34856199999997, -38.20392299999999);
        ctx.lineTo(73.63510999999997, -37.97908799999999);
        ctx.bezierCurveTo(73.03115999999997, -37.78876199999999, 70.55284999999996, -37.18774399999999, 69.43138799999997, -36.95963899999999);
        ctx.lineTo(69.10069199999997, -36.89237899999999);
        ctx.lineTo(69.07466199999996, -46.086524999999995);
        ctx.lineTo(69.04863199999996, -55.28066999999999);
        ctx.lineTo(66.52606899999995, -55.30819999999999);
        ctx.lineTo(64.00350599999994, -55.33572999999999);
        ctx.lineTo(64.00350599999994, -45.86479899999999);
        ctx.lineTo(64.00350599999994, -36.39386699999999);
        ctx.lineTo(62.44919999999995, -36.39676699999999);
        ctx.lineTo(60.89489399999995, -36.39966699999999);
        ctx.lineTo(57.07282899999995, -41.25122299999999);
        ctx.lineTo(53.25076399999995, -46.10277899999999);
        ctx.lineTo(53.224163999999945, -41.80644399999999);
        ctx.lineTo(53.19755399999995, -37.51010899999999);
        ctx.lineTo(52.86743299999995, -37.579018999999995);
        ctx.bezierCurveTo(52.68586599999995, -37.616918999999996, 51.70027999999995, -37.92435, 50.67723999999995, -38.262201999999995);
        ctx.lineTo(48.81716899999995, -38.87647799999999);
        ctx.lineTo(48.81716899999995, -49.21423099999999);
        ctx.bezierCurveTo(48.81716899999995, -54.89999499999999, 48.83569899999995, -59.55198399999999, 48.85834899999995, -59.55198399999999);
        ctx.bezierCurveTo(48.880998999999946, -59.55198399999999, 51.13983699999995, -56.72343699999999, 53.877993999999944, -53.26632199999999);
        ctx.lineTo(58.856461999999944, -46.98065899999999);
        ctx.lineTo(58.882831999999944, -52.51220099999999);
        ctx.lineTo(58.90921199999995, -58.04374299999999);
        ctx.lineTo(58.200939999999946, -58.97554099999999);
        ctx.bezierCurveTo(57.811389999999946, -59.48802899999999, 57.50140199999995, -59.908435999999995, 57.512074999999946, -59.90977999999999);
        ctx.bezierCurveTo(57.522744999999944, -59.91107999999999, 60.841992999999945, -59.89974999999999, 64.88817499999995, -59.88450999999999);
        ctx.lineTo(72.24486999999995, -59.85678999999999);
        ctx.lineTo(73.49864199999995, -57.80026699999999);
        ctx.lineTo(74.75241399999994, -55.74374399999999);
        ctx.lineTo(77.08466899999995, -55.74374399999999);
        ctx.lineTo(79.41692599999995, -55.74374399999999);
        ctx.lineTo(80.14424099999995, -56.20104399999999);
        ctx.bezierCurveTo(81.23430799999996, -56.886425999999986, 83.10274999999996, -57.75894299999999, 84.10282399999996, -58.04960599999999);
        ctx.bezierCurveTo(85.45180599999996, -58.44167799999999, 86.93160899999995, -58.58547599999999, 88.13512099999996, -58.44143999999999);
        ctx.bezierCurveTo(90.09725699999996, -58.20661299999999, 91.10093999999995, -57.848957999999996, 94.68195099999996, -56.10852799999999);
        ctx.bezierCurveTo(95.99928899999996, -55.46827799999999, 97.50376799999995, -54.775825999999995, 98.02523799999996, -54.569742999999995);
        ctx.bezierCurveTo(101.53584999999995, -53.18236399999999, 104.84587999999997, -53.143131, 108.66457999999996, -54.443636999999995);
        ctx.lineTo(109.95795999999996, -54.884111);
        ctx.lineTo(109.82634999999996, -54.567718);
        ctx.bezierCurveTo(109.75394999999996, -54.393703, 109.38482999999997, -53.57188, 109.00605999999996, -52.741444);
        ctx.lineTo(108.31738999999996, -51.231562000000004);
        ctx.lineTo(107.48756999999996, -51.005021000000006);
        ctx.bezierCurveTo(106.00850999999996, -50.601234000000005, 105.07192999999997, -50.47481100000001, 103.49817999999996, -50.46651800000001);
        ctx.bezierCurveTo(100.57692999999996, -50.45112800000001, 99.03345199999997, -50.91162200000001, 94.27426399999996, -53.21849600000001);
        ctx.bezierCurveTo(90.78641599999996, -54.909124000000006, 89.61224099999995, -55.29877300000001, 87.69233299999996, -55.40269700000001);
        ctx.bezierCurveTo(85.78259299999996, -55.50607300000001, 83.95621499999996, -55.10196200000001, 81.99269599999997, -54.14157600000001);
        ctx.bezierCurveTo(80.65612399999996, -53.48783900000001, 80.72589199999997, -53.60209100000001, 81.18613799999997, -52.82075600000001);
        ctx.bezierCurveTo(81.40551699999997, -52.44832800000001, 81.63087399999998, -52.16296400000001, 81.68693099999997, -52.18661400000001);
        ctx.bezierCurveTo(84.39152799999998, -53.327680000000015, 85.11971999999997, -53.50924600000001, 87.03782099999998, -53.52079800000001);
        ctx.bezierCurveTo(89.38346599999998, -53.53491800000001, 90.49562799999998, -53.20413000000001, 94.27426399999997, -51.368442000000016);
        ctx.bezierCurveTo(97.81970199999998, -49.64604400000002, 99.07653199999997, -49.159686000000015, 100.96297999999997, -48.780096000000015);
        ctx.bezierCurveTo(102.24804999999998, -48.52151600000001, 104.77952999999998, -48.537799000000014, 106.11196999999997, -48.81321600000001);
        ctx.lineTo(107.09500999999997, -49.01640900000001);
        ctx.lineTo(106.43402999999998, -47.93654200000001);
        ctx.bezierCurveTo(102.37967999999998, -41.31277000000001, 97.27644499999998, -35.957099000000014, 90.94382899999998, -31.68008300000001);
        ctx.lineTo(89.70278899999998, -30.841892000000012);
        ctx.closePath();
        ctx.moveTo(39.949986, -43.818025);
        ctx.bezierCurveTo(39.193217000000004, -44.391515, 38.298854000000006, -45.095117, 37.962513, -45.381585);
        ctx.bezierCurveTo(37.626171, -45.668053, 37.311016, -45.936237, 37.262169, -45.97755);
        ctx.bezierCurveTo(37.213319, -46.018860000000004, 40.756751, -53.613676, 45.136457, -62.854912);
        ctx.lineTo(53.099559, -79.657161);
        ctx.lineTo(52.034204, -81.312376);
        ctx.lineTo(50.968848, -82.96759);
        ctx.lineTo(53.837218, -82.99496);
        ctx.bezierCurveTo(56.048228, -83.01606000000001, 56.733212, -82.99246000000001, 56.826129, -82.892035);
        ctx.bezierCurveTo(56.892429, -82.82037500000001, 59.617646, -78.176416, 62.882172000000004, -72.572129);
        ctx.bezierCurveTo(66.146697, -66.967843, 68.907779, -62.23199, 69.01791, -62.048010000000005);
        ctx.lineTo(69.218148, -61.713503);
        ctx.lineTo(64.568694, -61.713503);
        ctx.lineTo(59.91924, -61.713503);
        ctx.lineTo(61.095042, -63.45338);
        ctx.bezierCurveTo(61.741734, -64.410312, 62.270845, -65.22085, 62.270845, -65.254574);
        ctx.bezierCurveTo(62.270845, -65.28830400000001, 59.827121, -65.315894, 56.840346000000004, -65.315894);
        ctx.lineTo(51.409847000000006, -65.315894);
        ctx.lineTo(46.420264, -55.100550999999996);
        ctx.lineTo(41.430682000000004, -44.88520799999999);
        ctx.lineTo(41.378302000000005, -43.83026499999999);
        ctx.lineTo(41.325932, -42.77532099999999);
        ctx.closePath();
        ctx.moveTo(59.824724, -69.489449);
        ctx.bezierCurveTo(59.824724, -69.56235899999999, 56.462849000000006, -75.42316899999999, 56.348669, -75.549308);
        ctx.bezierCurveTo(56.271849, -75.63417799999999, 55.358413, -73.817238, 53.804129, -70.48789);
        ctx.lineTo(53.311616, -69.43290499999999);
        ctx.lineTo(56.568169, -69.43290499999999);
        ctx.bezierCurveTo(58.359275, -69.43290499999999, 59.824723999999996, -69.458345, 59.824723999999996, -69.48944499999999);
        ctx.closePath();
        ctx.moveTo(35.425133, -47.76711499999999);
        ctx.bezierCurveTo(33.719661, -49.50963999999999, 31.976646000000002, -51.67083699999999, 30.581171, -53.77323899999999);
        ctx.bezierCurveTo(30.229694000000002, -54.30276899999999, 29.980916, -54.77150099999999, 30.028331, -54.81486599999999);
        ctx.bezierCurveTo(30.075741, -54.85823599999999, 30.447059000000003, -54.99369099999999, 30.853472, -55.11588399999999);
        ctx.lineTo(31.592404, -55.33805499999999);
        ctx.lineTo(31.592404, -70.057054);
        ctx.lineTo(31.592404, -84.776055);
        ctx.lineTo(30.519513, -86.213375);
        ctx.lineTo(29.446621, -87.650695);
        ctx.lineTo(33.933891, -87.650695);
        ctx.bezierCurveTo(36.401889000000004, -87.650695, 38.42116, -87.635455, 38.42116, -87.616825);
        ctx.bezierCurveTo(38.42116, -87.598195, 37.962513, -86.96500800000001, 37.401943, -86.209737);
        ctx.lineTo(36.382726000000005, -84.836516);
        ctx.lineTo(36.38472600000001, -80.145275);
        ctx.lineTo(36.38672600000001, -75.454036);
        ctx.lineTo(37.00373100000001, -74.656364);
        ctx.bezierCurveTo(37.34308500000001, -74.21764499999999, 37.65473800000001, -73.85869199999999, 37.69629400000001, -73.85869199999999);
        ctx.bezierCurveTo(37.756254000000006, -73.85869199999999, 44.38120800000001, -85.574271, 44.52322000000001, -85.93143099999999);
        ctx.bezierCurveTo(44.54392000000001, -85.98349099999999, 44.201012000000006, -86.39162699999999, 43.76119800000001, -86.83839199999998);
        ctx.lineTo(42.96154500000001, -87.65069199999998);
        ctx.lineTo(46.76175400000001, -87.65069199999998);
        ctx.bezierCurveTo(48.85186800000001, -87.65069199999998, 50.54078100000001, -87.61595199999998, 50.51489100000001, -87.57350199999998);
        ctx.bezierCurveTo(50.489001000000016, -87.53104199999997, 48.30894100000001, -83.47405499999998, 45.67031100000001, -78.55796899999997);
        ctx.lineTo(40.87280100000001, -69.61963199999997);
        ctx.lineTo(42.75751800000001, -67.25747199999996);
        ctx.bezierCurveTo(43.794111000000015, -65.95828399999996, 44.69149700000001, -64.81565499999996, 44.75170600000001, -64.71829499999997);
        ctx.bezierCurveTo(44.83969600000001, -64.57601499999997, 44.635936000000015, -64.06275899999997, 43.71337900000001, -62.10281399999997);
        ctx.bezierCurveTo(43.08209100000001, -60.761659999999964, 42.52755400000001, -59.688084999999965, 42.481074000000014, -59.717094999999965);
        ctx.bezierCurveTo(42.43459400000001, -59.746104999999964, 41.05493700000002, -61.485643999999965, 39.41517000000001, -63.58274099999996);
        ctx.lineTo(36.43377300000001, -67.39564499999996);
        ctx.lineTo(36.382813000000006, -57.11821699999996);
        ctx.lineTo(36.331853, -46.840786999999956);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(57.2512, -23.081729);
        ctx.bezierCurveTo(57.32127, -23.110279, 57.435933, -23.110279, 57.506004, -23.081729);
        ctx.bezierCurveTo(57.576074, -23.053179, 57.518744, -23.029819, 57.378602, -23.029819);
        ctx.bezierCurveTo(57.23846, -23.029819, 57.181129, -23.053179, 57.251200000000004, -23.081729);
        ctx.closePath();
        ctx.moveTo(66.75540099999999, -23.216185);
        ctx.bezierCurveTo(66.75540099999999, -23.271015, 66.82420099999999, -23.289225, 66.908284, -23.256635);
        ctx.bezierCurveTo(66.992374, -23.224045, 67.061166, -23.179185, 67.061166, -23.156935);
        ctx.bezierCurveTo(67.061166, -23.134685, 66.992366, -23.116485, 66.908284, -23.116485);
        ctx.bezierCurveTo(66.82419399999999, -23.116485, 66.75540099999999, -23.161345, 66.75540099999999, -23.216185);
        ctx.closePath();
        ctx.moveTo(55.992974999999994, -23.656847);
        ctx.lineTo(55.798815, -23.888429);
        ctx.lineTo(56.028138999999996, -23.692358);
        ctx.bezierCurveTo(56.243646999999996, -23.508098999999998, 56.303861999999995, -23.425265, 56.22229899999999, -23.425265);
        ctx.bezierCurveTo(56.20295899999999, -23.425265, 56.099762999999996, -23.529477, 55.992974999999994, -23.656847);
        ctx.closePath();
        ctx.moveTo(61.769282999999994, -23.897005999999998);
        ctx.bezierCurveTo(61.774182999999994, -24.016909, 61.798322999999996, -24.041296999999997, 61.830862999999994, -23.959186);
        ctx.bezierCurveTo(61.860302999999995, -23.884885999999998, 61.856683, -23.796113, 61.82286299999999, -23.761912);
        ctx.bezierCurveTo(61.78899299999999, -23.727712, 61.76490299999999, -23.788501999999998, 61.76933299999999, -23.897001);
        ctx.closePath();
        ctx.moveTo(71.248004, -24.823334);
        ctx.bezierCurveTo(71.252904, -24.943237, 71.27704399999999, -24.967626, 71.309584, -24.885514);
        ctx.bezierCurveTo(71.339024, -24.811214, 71.335404, -24.722441, 71.301584, -24.68824);
        ctx.bezierCurveTo(71.26771400000001, -24.654040000000002, 71.24362400000001, -24.71483, 71.24805400000001, -24.823329);
        ctx.closePath();
        ctx.moveTo(48.688075999999995, -25.084843);
        ctx.bezierCurveTo(48.75721599999999, -25.155183, 48.839453999999996, -25.186808, 48.870833999999995, -25.155123);
        ctx.bezierCurveTo(48.902213999999994, -25.123433, 48.84564399999999, -25.065883, 48.74513099999999, -25.02723);
        ctx.bezierCurveTo(48.599872999999995, -24.97137, 48.588165999999994, -24.9832, 48.688081, -25.08485);
        ctx.closePath();
        ctx.moveTo(61.798460999999996, -25.946937);
        ctx.bezierCurveTo(61.798767, -26.513026, 61.815841, -26.731476999999998, 61.836490999999995, -26.432381999999997);
        ctx.bezierCurveTo(61.857141, -26.133286999999996, 61.856930999999996, -25.670122999999997, 61.835981999999994, -25.403128999999996);
        ctx.bezierCurveTo(61.815062, -25.136133999999995, 61.79816199999999, -25.380848999999998, 61.79843199999999, -25.946936999999995);
        ctx.closePath();
        ctx.moveTo(62.917987999999994, -26.718877);
        ctx.bezierCurveTo(62.917987999999994, -27.200053, 62.935548, -27.396898, 62.957007999999995, -27.156309999999998);
        ctx.bezierCurveTo(62.97846799999999, -26.915722, 62.97846799999999, -26.522032, 62.957007999999995, -26.281443999999997);
        ctx.bezierCurveTo(62.935548, -26.040855999999998, 62.917987999999994, -26.237703999999997, 62.917987999999994, -26.718876999999996);
        ctx.closePath();
        ctx.moveTo(78.361477, -26.178518999999998);
        ctx.bezierCurveTo(78.23469999999999, -26.341765, 78.238305, -26.345405, 78.399957, -26.217378999999998);
        ctx.bezierCurveTo(78.498057, -26.139688999999997, 78.57832, -26.058631999999996, 78.57832, -26.037259999999996);
        ctx.bezierCurveTo(78.57832, -25.952549999999995, 78.49462000000001, -26.007069999999995, 78.361475, -26.178518999999998);
        ctx.closePath();
        ctx.moveTo(54.956126, -27.336429);
        ctx.bezierCurveTo(54.956126, -27.534561, 54.977106, -27.615614, 55.002736, -27.516548999999998);
        ctx.bezierCurveTo(55.028376, -27.417478999999997, 55.028376, -27.255374999999997, 55.002736, -27.156309999999998);
        ctx.bezierCurveTo(54.977095999999996, -27.057239999999997, 54.956126, -27.138299999999997, 54.956126, -27.336429);
        ctx.closePath();
        ctx.moveTo(42.784684, -27.303808999999998);
        ctx.bezierCurveTo(42.858253999999995, -27.333539, 42.946166999999996, -27.329888999999998, 42.980035, -27.295709);
        ctx.bezierCurveTo(43.013905, -27.261509, 42.953705, -27.237178999999998, 42.846262, -27.241649);
        ctx.bezierCurveTo(42.727529000000004, -27.246548999999998, 42.703378, -27.270979, 42.784682000000004, -27.303829);
        ctx.closePath();
        ctx.moveTo(81.01144199999999, -27.413618999999997);
        ctx.bezierCurveTo(80.88466499999998, -27.576864999999998, 80.88826999999999, -27.580505999999996, 81.049922, -27.452478999999997);
        ctx.bezierCurveTo(81.148022, -27.374788999999996, 81.228285, -27.293731999999995, 81.228285, -27.272358999999998);
        ctx.bezierCurveTo(81.228285, -27.187648999999997, 81.144585, -27.242168999999997, 81.01144, -27.413618);
        ctx.closePath();
        ctx.moveTo(56.26551, -27.80817);
        ctx.bezierCurveTo(56.27041, -27.928073, 56.29455, -27.952461, 56.32709, -27.870350000000002);
        ctx.bezierCurveTo(56.35653, -27.79605, 56.35291, -27.707277, 56.319089999999996, -27.673076000000002);
        ctx.bezierCurveTo(56.285219999999995, -27.638876000000003, 56.261129999999994, -27.699666, 56.265559999999994, -27.808165000000002);
        ctx.closePath();
        ctx.moveTo(69.456327, -28.365683);
        ctx.bezierCurveTo(69.557789, -28.478901, 69.663736, -28.571534, 69.691764, -28.571534);
        ctx.bezierCurveTo(69.71979400000001, -28.571534, 69.65971400000001, -28.478904, 69.558249, -28.365683);
        ctx.bezierCurveTo(69.456787, -28.252465, 69.35084, -28.159832, 69.322812, -28.159832);
        ctx.bezierCurveTo(69.294782, -28.159832, 69.354862, -28.252462, 69.456327, -28.365683);
        ctx.closePath();
        ctx.moveTo(59.017396000000005, -28.425723);
        ctx.bezierCurveTo(59.022296000000004, -28.545626000000002, 59.04643600000001, -28.570014, 59.078976000000004, -28.487903000000003);
        ctx.bezierCurveTo(59.108416000000005, -28.413603000000002, 59.10479600000001, -28.324830000000002, 59.070976, -28.290629000000003);
        ctx.bezierCurveTo(59.037106, -28.256429000000004, 59.013016, -28.317219, 59.017446, -28.425718000000003);
        ctx.closePath();
        ctx.moveTo(60.357978, -28.67446);
        ctx.bezierCurveTo(60.357978, -28.872591, 60.378958000000004, -28.953645, 60.404588000000004, -28.854579);
        ctx.bezierCurveTo(60.43022800000001, -28.755519, 60.43022800000001, -28.593406, 60.404588000000004, -28.494341000000002);
        ctx.bezierCurveTo(60.378948, -28.395271, 60.357978, -28.476331000000002, 60.357978, -28.674460000000003);
        ctx.closePath();
        ctx.moveTo(39.75419, -29.043275);
        ctx.bezierCurveTo(39.75909, -29.163177, 39.78323, -29.187566, 39.81577, -29.105455000000003);
        ctx.bezierCurveTo(39.84521, -29.031155000000002, 39.841590000000004, -28.942382000000002, 39.80777, -28.908181000000003);
        ctx.bezierCurveTo(39.7739, -28.873981000000004, 39.74981, -28.934771, 39.754239999999996, -29.043271000000004);
        ctx.closePath();
        ctx.moveTo(39.236534, -29.227946000000003);
        ctx.bezierCurveTo(39.236534, -29.249316000000004, 39.316794, -29.330373, 39.414896999999996, -29.408066);
        ctx.bezierCurveTo(39.576550999999995, -29.536091000000003, 39.580155999999995, -29.532451000000002, 39.453376999999996, -29.369206000000002);
        ctx.bezierCurveTo(39.320229, -29.197758, 39.236532, -29.143236, 39.236532, -29.227947);
        ctx.closePath();
        ctx.moveTo(60.354202, -29.652250000000002);
        ctx.bezierCurveTo(60.356302, -29.822077000000004, 60.379122, -29.879091000000003, 60.404962, -29.778948000000003);
        ctx.bezierCurveTo(60.430802, -29.678805000000004, 60.429102, -29.539855000000003, 60.401162, -29.470172);
        ctx.bezierCurveTo(60.373242, -29.400492, 60.352102, -29.482422000000003, 60.354182, -29.652250000000002);
        ctx.closePath();
        ctx.moveTo(68.92146, -29.858101);
        ctx.bezierCurveTo(68.92255999999999, -30.084537, 68.94346, -30.16505, 68.96784, -30.037020000000002);
        ctx.bezierCurveTo(68.99221999999999, -29.908990000000003, 68.99128999999999, -29.723724, 68.96574, -29.625319);
        ctx.bezierCurveTo(68.94023, -29.526909, 68.92027999999999, -29.631619, 68.92141, -29.858101);
        ctx.closePath();
        ctx.moveTo(59.142854, -30.269802000000002);
        ctx.bezierCurveTo(59.143465, -30.609456, 59.162454, -30.735996000000004, 59.185134, -30.551004000000002);
        ctx.bezierCurveTo(59.207814, -30.366011000000004, 59.207353999999995, -30.088112000000002, 59.184134, -29.933451);
        ctx.bezierCurveTo(59.160874, -29.778791000000002, 59.142314, -29.930151000000002, 59.142894, -30.269802000000002);
        ctx.closePath();
        ctx.moveTo(77.559105, -30.668901);
        ctx.bezierCurveTo(77.559105, -30.690271000000003, 77.639365, -30.771328, 77.737468, -30.849021);
        ctx.bezierCurveTo(77.899122, -30.977047, 77.90272700000001, -30.973406, 77.77594800000001, -30.810161);
        ctx.bezierCurveTo(77.64280100000002, -30.638713, 77.55910400000002, -30.584191, 77.55910400000002, -30.668902);
        ctx.closePath();
        ctx.moveTo(71.382093, -32.740011);
        ctx.bezierCurveTo(71.382297, -33.532536, 71.398253, -33.843146000000004, 71.417643, -33.430254000000005);
        ctx.bezierCurveTo(71.437043, -33.017363, 71.436913, -32.368933000000006, 71.417337, -31.989299000000006);
        ctx.bezierCurveTo(71.397797, -31.609665000000007, 71.381927, -31.947489000000004, 71.382087, -32.74001100000001);
        ctx.closePath();
        ctx.moveTo(37.045217, -31.659295000000004);
        ctx.bezierCurveTo(37.146679, -31.772513000000004, 37.252626, -31.865145000000005, 37.280654, -31.865145000000005);
        ctx.bezierCurveTo(37.308684, -31.865145000000005, 37.248604, -31.772515000000006, 37.147138999999996, -31.659295000000004);
        ctx.bezierCurveTo(37.045677, -31.546077000000004, 36.93973, -31.453444000000005, 36.911702, -31.453444000000005);
        ctx.bezierCurveTo(36.883672, -31.453444000000005, 36.943751999999996, -31.546074000000004, 37.045217, -31.659295000000004);
        ctx.closePath();
        ctx.moveTo(79.005878, -31.916608000000004);
        ctx.bezierCurveTo(79.007978, -32.086435, 79.03079799999999, -32.143449000000004, 79.05663799999999, -32.043306);
        ctx.bezierCurveTo(79.082478, -31.943163000000002, 79.080778, -31.804214, 79.052838, -31.73453);
        ctx.bezierCurveTo(79.024918, -31.664849999999998, 79.003778, -31.74678, 79.005848, -31.916608);
        ctx.closePath();
        ctx.moveTo(54.634762, -32.02811);
        ctx.bezierCurveTo(54.639662, -32.148013, 54.663802000000004, -32.172401, 54.696342, -32.090289999999996);
        ctx.bezierCurveTo(54.725782, -32.015989999999995, 54.722162000000004, -31.927216999999995, 54.688342, -31.893015999999996);
        ctx.bezierCurveTo(54.654472, -31.858815999999997, 54.630382, -31.919605999999995, 54.634812, -32.028105);
        ctx.closePath();
        ctx.moveTo(64.452479, -32.508429);
        ctx.lineTo(64.258319, -32.740011);
        ctx.lineTo(64.487643, -32.543939);
        ctx.bezierCurveTo(64.70315000000001, -32.359680000000004, 64.76336500000001, -32.276847000000004, 64.681803, -32.276847000000004);
        ctx.bezierCurveTo(64.662463, -32.276847000000004, 64.55926600000001, -32.381059, 64.452479, -32.50842900000001);
        ctx.closePath();
        ctx.moveTo(65.717074, -32.758858);
        ctx.bezierCurveTo(65.790644, -32.788588, 65.878556, -32.784938, 65.912424, -32.750758);
        ctx.bezierCurveTo(65.946294, -32.716558, 65.886094, -32.692228, 65.77865200000001, -32.696698);
        ctx.bezierCurveTo(65.659918, -32.701598, 65.63576800000001, -32.726028, 65.717072, -32.758877999999996);
        ctx.closePath();
        ctx.moveTo(69.18852199999999, -32.868668);
        ctx.bezierCurveTo(69.06174399999999, -33.031914, 69.065349, -33.035554, 69.227002, -32.907528);
        ctx.bezierCurveTo(69.325102, -32.829838, 69.405365, -32.748781, 69.405365, -32.727409);
        ctx.bezierCurveTo(69.405365, -32.642699, 69.32166500000001, -32.697219000000004, 69.188522, -32.868668);
        ctx.closePath();
        ctx.moveTo(51.27939099999999, -33.717802);
        ctx.bezierCurveTo(51.27939099999999, -33.859324, 51.30252099999999, -33.91722, 51.33080099999999, -33.846458999999996);
        ctx.bezierCurveTo(51.359070999999986, -33.775698999999996, 51.359070999999986, -33.65990599999999, 51.33080099999999, -33.589144999999995);
        ctx.bezierCurveTo(51.30253099999999, -33.518384999999995, 51.27939099999999, -33.576274999999995, 51.27939099999999, -33.71780199999999);
        ctx.closePath();
        ctx.moveTo(77.80422499999999, -34.875712);
        ctx.lineTo(77.61006499999999, -35.107294);
        ctx.lineTo(77.839389, -34.911223);
        ctx.bezierCurveTo(78.054897, -34.726964, 78.115112, -34.64413, 78.033549, -34.64413);
        ctx.bezierCurveTo(78.014209, -34.64413, 77.911013, -34.748341999999994, 77.80422499999999, -34.875712);
        ctx.closePath();
        ctx.moveTo(46.422015999999985, -34.849982);
        ctx.bezierCurveTo(46.45665599999999, -34.906591999999996, 46.50523599999998, -34.952906999999996, 46.529952999999985, -34.952906999999996);
        ctx.bezierCurveTo(46.55467299999999, -34.952906999999996, 46.574902999999985, -34.906586999999995, 46.574902999999985, -34.849982);
        ctx.bezierCurveTo(46.574902999999985, -34.793372, 46.52633299999999, -34.747057, 46.466965999999985, -34.747057);
        ctx.bezierCurveTo(46.407595999999984, -34.747057, 46.38737599999998, -34.793377, 46.422015999999985, -34.849982);
        ctx.closePath();
        ctx.moveTo(42.85910899999998, -36.283825);
        ctx.bezierCurveTo(42.826858999999985, -36.336525, 42.839438999999985, -36.40396, 42.88706899999998, -36.433685);
        ctx.bezierCurveTo(42.93469899999998, -36.463415, 42.97366899999998, -36.420294999999996, 42.97366899999998, -36.337875);
        ctx.bezierCurveTo(42.97366899999998, -36.164325999999996, 42.94152899999998, -36.149162999999994, 42.85911299999998, -36.283825);
        ctx.closePath();
        ctx.moveTo(27.12394099999998, -38.040668);
        ctx.bezierCurveTo(27.12394099999998, -38.182190999999996, 27.14707099999998, -38.240086, 27.17535099999998, -38.16932499999999);
        ctx.bezierCurveTo(27.20362099999998, -38.098564999999994, 27.20362099999998, -37.982772999999995, 27.17535099999998, -37.91201199999999);
        ctx.bezierCurveTo(27.147080999999982, -37.84125199999999, 27.12394099999998, -37.89914199999999, 27.12394099999998, -38.04066799999999);
        ctx.closePath();
        ctx.moveTo(26.19055299999998, -38.709683);
        ctx.bezierCurveTo(26.32220999999998, -38.851206, 26.45286199999998, -38.966997, 26.48088999999998, -38.966997);
        ctx.bezierCurveTo(26.508919999999982, -38.966997, 26.42412999999998, -38.851206, 26.292474999999982, -38.709683);
        ctx.bezierCurveTo(26.16081699999998, -38.568160999999996, 26.030165999999983, -38.452369999999995, 26.002136999999983, -38.452369999999995);
        ctx.bezierCurveTo(25.974106999999982, -38.452369999999995, 26.058896999999984, -38.568160999999996, 26.190552999999984, -38.709683);
        ctx.closePath();
        ctx.moveTo(25.32493999999998, -38.965818);
        ctx.bezierCurveTo(25.28922999999998, -39.024158, 25.33013999999998, -39.041418, 25.42084999999998, -39.006268);
        ctx.bezierCurveTo(25.59742099999998, -38.937847999999995, 25.62972699999998, -38.86407, 25.483119999999982, -38.86407);
        ctx.bezierCurveTo(25.430369999999982, -38.86407, 25.35919099999998, -38.909859999999995, 25.32494399999998, -38.965817);
        ctx.closePath();
        ctx.moveTo(28.01742899999998, -40.64027);
        ctx.bezierCurveTo(28.306692999999978, -40.970762, 28.296935999999977, -40.966296, 28.296935999999977, -40.768191);
        ctx.bezierCurveTo(28.296935999999977, -40.683281, 28.27390599999998, -40.637062, 28.24574599999998, -40.66549);
        ctx.bezierCurveTo(28.21759599999998, -40.69392, 28.09911199999998, -40.63635, 27.982448999999978, -40.537569999999995);
        ctx.bezierCurveTo(27.82794899999998, -40.406746999999996, 27.837448999999978, -40.434642999999994, 28.01741899999998, -40.640269999999994);
        ctx.closePath();
        ctx.moveTo(33.987564999999975, -42.363534);
        ctx.bezierCurveTo(34.08902699999997, -42.476752000000005, 34.194973999999974, -42.569385000000004, 34.22300199999997, -42.569385000000004);
        ctx.bezierCurveTo(34.251031999999974, -42.569385000000004, 34.190951999999974, -42.476755000000004, 34.08948699999997, -42.363534);
        ctx.bezierCurveTo(33.98802499999997, -42.250316, 33.88207799999997, -42.157683, 33.85404999999997, -42.157683);
        ctx.bezierCurveTo(33.82601999999997, -42.157683, 33.88609999999997, -42.250313, 33.987564999999975, -42.363534);
        ctx.closePath();
        ctx.moveTo(25.260255999999977, -43.367056);
        ctx.bezierCurveTo(25.133478999999976, -43.530302, 25.137083999999977, -43.533943, 25.298735999999977, -43.405916);
        ctx.bezierCurveTo(25.396835999999976, -43.328226, 25.477098999999978, -43.247169, 25.477098999999978, -43.225795999999995);
        ctx.bezierCurveTo(25.477098999999978, -43.141085999999994, 25.393398999999977, -43.195606, 25.26025399999998, -43.36705499999999);
        ctx.closePath();
        ctx.moveTo(21.298309999999976, -43.501788);
        ctx.bezierCurveTo(21.298309999999976, -43.561738, 21.344169999999977, -43.582158, 21.400231999999974, -43.547177999999995);
        ctx.bezierCurveTo(21.456291999999973, -43.512187999999995, 21.502152999999975, -43.463137999999994, 21.502152999999975, -43.43817799999999);
        ctx.bezierCurveTo(21.502152999999975, -43.41321799999999, 21.456292999999974, -43.392787999999996, 21.400231999999974, -43.392787999999996);
        ctx.bezierCurveTo(21.344171999999975, -43.392787999999996, 21.298309999999976, -43.441838, 21.298309999999976, -43.501788);
        ctx.closePath();
        ctx.moveTo(32.15297399999997, -43.907413999999996);
        ctx.bezierCurveTo(32.25443599999997, -44.020632, 32.36038299999997, -44.113265, 32.38841099999997, -44.113265);
        ctx.bezierCurveTo(32.41644099999997, -44.113265, 32.35636099999997, -44.020635, 32.25489599999997, -43.907413999999996);
        ctx.bezierCurveTo(32.15343399999997, -43.794197, 32.04748699999997, -43.701564, 32.01945899999997, -43.701564);
        ctx.bezierCurveTo(31.991428999999968, -43.701564, 32.05150899999997, -43.794194, 32.15297399999997, -43.907413999999996);
        ctx.closePath();
        ctx.moveTo(19.05748799999997, -47.346593);
        ctx.bezierCurveTo(19.12349799999997, -47.413243, 19.19241299999997, -47.413243, 19.25841899999997, -47.346593);
        ctx.bezierCurveTo(19.32442899999997, -47.279933, 19.28996899999997, -47.245137, 19.15795299999997, -47.245137);
        ctx.bezierCurveTo(19.02594099999997, -47.245137, 18.991480999999972, -47.279937, 19.05748799999997, -47.346593);
        ctx.closePath();
        ctx.moveTo(25.86567699999997, -53.755634);
        ctx.bezierCurveTo(25.93924699999997, -53.785364, 26.02715899999997, -53.781714, 26.06102799999997, -53.747534);
        ctx.bezierCurveTo(26.09489799999997, -53.713334, 26.034697999999967, -53.689004000000004, 25.927254999999967, -53.693474);
        ctx.bezierCurveTo(25.808521999999968, -53.698374, 25.784370999999968, -53.722804000000004, 25.865674999999968, -53.755654);
        ctx.closePath();
        ctx.moveTo(15.068083999999969, -55.306399);
        ctx.bezierCurveTo(14.941305999999969, -55.469645, 14.94491099999997, -55.473285, 15.106563999999969, -55.345259);
        ctx.bezierCurveTo(15.27633999999997, -55.210801, 15.330330999999969, -55.12628, 15.246445999999969, -55.12628);
        ctx.bezierCurveTo(15.225285999999969, -55.12628, 15.145017999999968, -55.20733, 15.068083999999969, -55.306399);
        ctx.closePath();
        ctx.moveTo(102.30696999999996, -57.769723);
        ctx.bezierCurveTo(102.38056999999996, -57.799453, 102.46845999999996, -57.795803, 102.50231999999997, -57.761623);
        ctx.bezierCurveTo(102.53621999999997, -57.727423, 102.47601999999996, -57.703093, 102.36854999999997, -57.707563);
        ctx.bezierCurveTo(102.24981999999997, -57.712463, 102.22566999999997, -57.736893, 102.30694999999997, -57.769743);
        ctx.closePath();
        ctx.moveTo(104.44732999999997, -57.769723);
        ctx.bezierCurveTo(104.52092999999996, -57.799453, 104.60880999999996, -57.795803, 104.64267999999997, -57.761623);
        ctx.bezierCurveTo(104.67657999999997, -57.727423, 104.61637999999996, -57.703093, 104.50890999999997, -57.707563);
        ctx.bezierCurveTo(104.39017999999997, -57.712463, 104.36601999999998, -57.736893, 104.44730999999997, -57.769743);
        ctx.closePath();
        ctx.moveTo(22.657265999999964, -57.952199);
        ctx.bezierCurveTo(22.657265999999964, -58.034619, 22.696235999999963, -58.077739, 22.743865999999965, -58.048009);
        ctx.bezierCurveTo(22.791495999999967, -58.018279, 22.804075999999966, -57.950849, 22.771825999999965, -57.898148);
        ctx.bezierCurveTo(22.689405999999966, -57.763483, 22.657269999999965, -57.778646, 22.657269999999965, -57.952197999999996);
        ctx.closePath();
        ctx.moveTo(22.094572999999965, -60.857484);
        ctx.bezierCurveTo(22.168142999999965, -60.887214, 22.256054999999964, -60.883564, 22.289923999999964, -60.849384);
        ctx.bezierCurveTo(22.323793999999964, -60.815184, 22.263593999999962, -60.790854, 22.156150999999962, -60.795324);
        ctx.bezierCurveTo(22.037417999999963, -60.800224, 22.013266999999964, -60.824654, 22.094570999999963, -60.857504);
        ctx.closePath();
        ctx.moveTo(86.10141899999996, -62.710141);
        ctx.bezierCurveTo(86.17498899999997, -62.739871, 86.26290199999997, -62.736221, 86.29676999999997, -62.702041);
        ctx.bezierCurveTo(86.33063999999996, -62.667841, 86.27043999999997, -62.643511000000004, 86.16299799999997, -62.647981);
        ctx.bezierCurveTo(86.04426399999997, -62.652881, 86.02011299999997, -62.677311, 86.10141799999997, -62.710161);
        ctx.closePath();
        ctx.moveTo(87.93601099999997, -62.710141);
        ctx.bezierCurveTo(88.00958099999997, -62.739871, 88.09749299999997, -62.736221, 88.13136099999997, -62.702041);
        ctx.bezierCurveTo(88.16523099999996, -62.667841, 88.10503099999997, -62.643511000000004, 87.99758899999998, -62.647981);
        ctx.bezierCurveTo(87.87885499999997, -62.652881, 87.85470499999998, -62.677311, 87.93600899999997, -62.710161);
        ctx.closePath();
        ctx.moveTo(15.259446999999966, -64.869429);
        ctx.bezierCurveTo(15.329516999999965, -64.89797899999999, 15.444179999999966, -64.89797899999999, 15.514251999999965, -64.869429);
        ctx.bezierCurveTo(15.584321999999965, -64.840879, 15.526991999999966, -64.81751899999999, 15.386848999999966, -64.81751899999999);
        ctx.bezierCurveTo(15.246706999999965, -64.81751899999999, 15.189375999999966, -64.84087899999999, 15.259446999999966, -64.869429);
        ctx.closePath();
        ctx.moveTo(21.909839999999967, -66.036368);
        ctx.bezierCurveTo(21.817979999999967, -66.096318, 21.805407999999968, -66.136771, 21.878339999999966, -66.13771799999999);
        ctx.bezierCurveTo(21.945099999999965, -66.13854099999999, 22.028073999999965, -66.09297799999999, 22.062718999999966, -66.036368);
        ctx.bezierCurveTo(22.140918999999965, -65.90858399999999, 22.105638999999965, -65.90858399999999, 21.909835999999967, -66.036368);
        ctx.closePath();
        ctx.moveTo(20.686778999999966, -66.705383);
        ctx.bezierCurveTo(20.818435999999966, -66.846906, 20.949087999999964, -66.96269699999999, 20.977115999999967, -66.96269699999999);
        ctx.bezierCurveTo(21.005145999999968, -66.96269699999999, 20.920355999999966, -66.84690599999999, 20.788700999999968, -66.705383);
        ctx.bezierCurveTo(20.657043999999967, -66.563861, 20.526392999999967, -66.44807, 20.498363999999967, -66.44807);
        ctx.bezierCurveTo(20.470333999999966, -66.44807, 20.555123999999967, -66.563861, 20.686778999999966, -66.705383);
        ctx.closePath();
        ctx.moveTo(11.521869999999966, -66.713983);
        ctx.bezierCurveTo(11.526769999999965, -66.83388599999999, 11.550909999999966, -66.858274, 11.583449999999965, -66.776163);
        ctx.bezierCurveTo(11.612889999999965, -66.701863, 11.609269999999965, -66.613091, 11.575449999999966, -66.57889);
        ctx.bezierCurveTo(11.541579999999966, -66.54469, 11.517489999999967, -66.60548, 11.521919999999966, -66.713979);
        ctx.closePath();
        ctx.moveTo(15.815997999999965, -66.715783);
        ctx.bezierCurveTo(15.743717999999966, -66.794993, 15.729547999999966, -66.859796, 15.784507999999965, -66.859796);
        ctx.bezierCurveTo(15.890346999999965, -66.859796, 16.043564999999965, -66.664011, 15.983109999999964, -66.606016);
        ctx.bezierCurveTo(15.963479999999965, -66.587186, 15.888279999999964, -66.636586, 15.816002999999965, -66.715789);
        ctx.closePath();
        ctx.moveTo(21.714042999999965, -67.949083);
        ctx.bezierCurveTo(21.718942999999964, -68.068986, 21.743082999999963, -68.093374, 21.775622999999964, -68.011263);
        ctx.bezierCurveTo(21.805062999999965, -67.936963, 21.801442999999963, -67.84819, 21.767622999999965, -67.813989);
        ctx.bezierCurveTo(21.733752999999965, -67.77978900000001, 21.709662999999964, -67.840579, 21.714092999999966, -67.949078);
        ctx.closePath();
        ctx.moveTo(113.64743999999996, -69.90466500000001);
        ctx.bezierCurveTo(113.65243999999996, -70.024568, 113.67643999999996, -70.048956, 113.70903999999996, -69.966845);
        ctx.bezierCurveTo(113.73843999999995, -69.89254500000001, 113.73483999999996, -69.80377200000001, 113.70103999999996, -69.76957100000001);
        ctx.bezierCurveTo(113.66713999999996, -69.73537100000001, 113.64303999999996, -69.79616100000001, 113.64753999999996, -69.90466);
        ctx.closePath();
        ctx.moveTo(16.794642999999965, -70.12079200000001);
        ctx.bezierCurveTo(16.868212999999965, -70.15052200000001, 16.956125999999966, -70.146872, 16.989992999999966, -70.11269200000001);
        ctx.bezierCurveTo(17.023862999999967, -70.07849200000001, 16.963662999999965, -70.054162, 16.856220999999966, -70.058632);
        ctx.bezierCurveTo(16.737487999999967, -70.06353200000001, 16.713336999999967, -70.087962, 16.794640999999967, -70.120812);
        ctx.closePath();
        ctx.moveTo(18.527312999999964, -70.12079200000001);
        ctx.bezierCurveTo(18.600882999999964, -70.15052200000001, 18.688794999999963, -70.146872, 18.722662999999965, -70.11269200000001);
        ctx.bezierCurveTo(18.756532999999965, -70.07849200000001, 18.696332999999964, -70.054162, 18.588889999999964, -70.058632);
        ctx.bezierCurveTo(18.470156999999965, -70.06353200000001, 18.446005999999965, -70.087962, 18.527309999999964, -70.120812);
        ctx.closePath();
        ctx.moveTo(113.74935999999997, -71.13977600000001);
        ctx.bezierCurveTo(113.75435999999996, -71.259679, 113.77835999999996, -71.28406700000001, 113.81095999999997, -71.20195600000001);
        ctx.bezierCurveTo(113.84035999999996, -71.12765600000002, 113.83675999999997, -71.03888300000001, 113.80295999999997, -71.00468200000002);
        ctx.bezierCurveTo(113.76905999999997, -70.97048200000002, 113.74495999999996, -71.03127200000002, 113.74945999999997, -71.13977200000002);
        ctx.closePath();
        ctx.moveTo(113.86893999999997, -73.08678100000002);
        ctx.bezierCurveTo(113.86993999999997, -73.31321700000002, 113.89093999999997, -73.39373000000002, 113.91533999999997, -73.26570000000001);
        ctx.bezierCurveTo(113.93973999999997, -73.13767100000001, 113.93873999999997, -72.95240500000001, 113.91333999999998, -72.85399900000002);
        ctx.bezierCurveTo(113.88783999999998, -72.75558900000001, 113.86783999999997, -72.86029900000001, 113.86903999999997, -73.08678100000002);
        ctx.closePath();
        ctx.moveTo(113.85893999999996, -76.43185600000001);
        ctx.bezierCurveTo(113.85893999999996, -76.573378, 113.88203999999996, -76.631274, 113.91033999999996, -76.56051200000002);
        ctx.bezierCurveTo(113.93863999999996, -76.48975200000001, 113.93863999999996, -76.37396000000001, 113.91033999999996, -76.30319900000002);
        ctx.bezierCurveTo(113.88203999999996, -76.23243900000001, 113.85893999999996, -76.29032900000001, 113.85893999999996, -76.43185600000002);
        ctx.closePath();
        ctx.moveTo(11.758523999999966, -80.986303);
        ctx.lineTo(11.564364999999965, -81.21788500000001);
        ctx.lineTo(11.793687999999966, -81.02181300000001);
        ctx.bezierCurveTo(12.009195999999966, -80.83755400000001, 12.069410999999965, -80.754721, 11.987847999999966, -80.754721);
        ctx.bezierCurveTo(11.968507999999966, -80.754721, 11.865311999999966, -80.85893300000001, 11.758523999999966, -80.986303);
        ctx.closePath();
        ctx.moveTo(14.239809999999967, -81.749215);
        ctx.bezierCurveTo(14.309879999999966, -81.777765, 14.424542999999966, -81.777765, 14.494613999999967, -81.749215);
        ctx.bezierCurveTo(14.564683999999966, -81.72066500000001, 14.507353999999967, -81.69729500000001, 14.367211999999967, -81.69729500000001);
        ctx.bezierCurveTo(14.227069999999966, -81.69729500000001, 14.169738999999966, -81.72065500000001, 14.239809999999967, -81.749215);
        ctx.closePath();
        ctx.moveTo(19.348375999999966, -81.964094);
        ctx.bezierCurveTo(19.221598999999966, -82.12734, 19.225203999999966, -82.13098000000001, 19.386855999999966, -82.002954);
        ctx.bezierCurveTo(19.484955999999965, -81.925264, 19.565218999999967, -81.844207, 19.565218999999967, -81.822834);
        ctx.bezierCurveTo(19.565218999999967, -81.738124, 19.481518999999967, -81.792644, 19.34837499999997, -81.964093);
        ctx.closePath();
        ctx.moveTo(13.023118999999966, -82.883538);
        ctx.bezierCurveTo(13.096688999999966, -82.913268, 13.184601999999966, -82.909618, 13.218468999999965, -82.875438);
        ctx.bezierCurveTo(13.252338999999965, -82.841238, 13.192138999999965, -82.816908, 13.084696999999965, -82.821378);
        ctx.bezierCurveTo(12.965963999999964, -82.826278, 12.941812999999964, -82.850708, 13.023116999999965, -82.883558);
        ctx.closePath();
        ctx.moveTo(21.603654999999968, -83.05794);
        ctx.bezierCurveTo(21.603654999999968, -83.07931, 21.683914999999967, -83.160366, 21.78201799999997, -83.238059);
        ctx.bezierCurveTo(21.943671999999967, -83.36608500000001, 21.947276999999968, -83.36244400000001, 21.82049799999997, -83.19919900000001);
        ctx.bezierCurveTo(21.68734999999997, -83.02775100000001, 21.60365299999997, -82.973228, 21.60365299999997, -83.05794);
        ctx.closePath();
        ctx.moveTo(72.02943099999996, -84.431565);
        ctx.bezierCurveTo(72.21161599999996, -84.454395, 72.50973699999996, -84.454395, 72.69192199999996, -84.431565);
        ctx.bezierCurveTo(72.87410699999997, -84.40873500000001, 72.72504199999996, -84.390055, 72.36067599999997, -84.390055);
        ctx.bezierCurveTo(71.99630599999998, -84.390055, 71.84724599999997, -84.40873500000001, 72.02943099999997, -84.431565);
        ctx.closePath();
        ctx.moveTo(79.37178999999996, -84.43346500000001);
        ctx.bezierCurveTo(79.72434199999996, -84.45362500000002, 80.27471899999996, -84.45345500000002, 80.59484999999997, -84.43305300000002);
        ctx.bezierCurveTo(80.91497999999997, -84.41269300000002, 80.62652999999996, -84.39620300000001, 79.95384499999996, -84.39640300000002);
        ctx.bezierCurveTo(79.28116199999995, -84.39660800000001, 79.01923599999996, -84.41326300000001, 79.37178999999996, -84.43342300000002);
        ctx.closePath();
        ctx.moveTo(88.49615099999997, -84.43418500000001);
        ctx.bezierCurveTo(89.38254599999996, -84.45133500000001, 90.80435399999998, -84.45130500000002, 91.65572499999998, -84.43410600000001);
        ctx.bezierCurveTo(92.50709399999998, -84.41690600000001, 91.78186199999998, -84.40287600000002, 90.04409599999998, -84.40291600000002);
        ctx.bezierCurveTo(88.30633099999999, -84.40296000000002, 87.60975499999998, -84.41702600000002, 88.49615099999998, -84.43418600000003);
        ctx.closePath();
        ctx.moveTo(21.5102, -84.725899);
        ctx.bezierCurveTo(21.5151, -84.845801, 21.53924, -84.87019, 21.57178, -84.788079);
        ctx.bezierCurveTo(21.60122, -84.713779, 21.5976, -84.625006, 21.56378, -84.590805);
        ctx.bezierCurveTo(21.52991, -84.556605, 21.50582, -84.617395, 21.510250000000003, -84.72589500000001);
        ctx.closePath();
        ctx.moveTo(17.476245000000002, -85.077561);
        ctx.bezierCurveTo(17.577707000000004, -85.19077800000001, 17.683653000000003, -85.283411, 17.711682000000003, -85.283411);
        ctx.bezierCurveTo(17.739712000000004, -85.283411, 17.679632, -85.190781, 17.578167000000004, -85.077561);
        ctx.bezierCurveTo(17.476705000000003, -84.964343, 17.370758000000006, -84.87171000000001, 17.342730000000003, -84.87171000000001);
        ctx.bezierCurveTo(17.314700000000002, -84.87171000000001, 17.374780000000005, -84.96434, 17.476245000000002, -85.077561);
        ctx.closePath();
        ctx.moveTo(20.973434, -87.309303);
        ctx.bezierCurveTo(21.047004, -87.339033, 21.134917, -87.335383, 21.168784000000002, -87.301203);
        ctx.bezierCurveTo(21.202654000000003, -87.267003, 21.142454, -87.242673, 21.035012000000002, -87.247143);
        ctx.bezierCurveTo(20.916279000000003, -87.252043, 20.892128000000003, -87.276473, 20.973432000000003, -87.30932299999999);
        ctx.closePath();
        ctx.moveTo(12.736884000000002, -87.850471);
        ctx.bezierCurveTo(12.736884000000002, -87.903741, 12.782224000000001, -87.97561999999999, 12.837639000000001, -88.010205);
        ctx.bezierCurveTo(12.895419, -88.046265, 12.912499, -88.004905, 12.877699000000002, -87.913355);
        ctx.bezierCurveTo(12.809939000000002, -87.735045, 12.736888000000002, -87.702421, 12.736888000000002, -87.85047499999999);
        ctx.closePath();
        ctx.moveTo(22.615578, -89.16884399999999);
        ctx.lineTo(22.368488, -89.451889);
        ctx.lineTo(22.648773, -89.202366);
        ctx.bezierCurveTo(22.910740999999998, -88.969148, 22.975797999999998, -88.88579899999999, 22.895863, -88.88579899999999);
        ctx.bezierCurveTo(22.877602999999997, -88.88579899999999, 22.751478, -89.01316899999999, 22.615578, -89.16884399999999);
        ctx.closePath();
        ctx.moveTo(101.61263, -89.23343399999999);
        ctx.bezierCurveTo(101.61263, -89.254804, 101.69292999999999, -89.33585999999998, 101.791, -89.413553);
        ctx.bezierCurveTo(101.95264999999999, -89.541579, 101.95625, -89.537938, 101.8295, -89.374693);
        ctx.bezierCurveTo(101.69635, -89.203245, 101.61265, -89.14872199999999, 101.61265, -89.23343399999999);
        ctx.closePath();
        ctx.moveTo(103.06231, -91.47205999999998);
        ctx.bezierCurveTo(103.04200999999999, -92.99627699999998, 103.05931, -93.19890699999999, 103.2179, -93.32471699999998);
        ctx.bezierCurveTo(103.37517, -93.44926699999998, 103.3815, -93.44684299999997, 103.2715, -93.30421699999998);
        ctx.bezierCurveTo(103.18780000000001, -93.19575899999998, 103.13656, -92.58531499999998, 103.11591, -91.45155999999999);
        ctx.lineTo(103.08511, -89.76065999999999);
        ctx.closePath();
        ctx.moveTo(72.404799, -92.53964999999998);
        ctx.bezierCurveTo(72.404871, -93.84165599999999, 72.419479, -94.36010199999998, 72.437259, -93.69175299999998);
        ctx.bezierCurveTo(72.455039, -93.02340399999997, 72.454979, -91.95812699999998, 72.437157, -91.32446999999998);
        ctx.bezierCurveTo(72.419307, -90.69081299999998, 72.404757, -91.23763999999997, 72.404827, -92.53964999999998);
        ctx.closePath();
        ctx.moveTo(80.558538, -92.53964999999998);
        ctx.bezierCurveTo(80.558609, -93.84165599999999, 80.573218, -94.36010199999998, 80.590998, -93.69175299999998);
        ctx.bezierCurveTo(80.608778, -93.02340399999997, 80.608718, -91.95812699999998, 80.590896, -91.32446999999998);
        ctx.bezierCurveTo(80.573046, -90.69081299999998, 80.558496, -91.23763999999997, 80.558566, -92.53964999999998);
        ctx.closePath();
        ctx.moveTo(87.489215, -92.53964999999998);
        ctx.bezierCurveTo(87.489287, -93.84165599999999, 87.503895, -94.36010199999998, 87.521675, -93.69175299999998);
        ctx.bezierCurveTo(87.539455, -93.02340399999997, 87.539395, -91.95812699999998, 87.521573, -91.32446999999998);
        ctx.bezierCurveTo(87.50372300000001, -90.69081299999998, 87.48917300000001, -91.23763999999997, 87.489243, -92.53964999999998);
        ctx.closePath();
        ctx.moveTo(14.293131000000002, -91.22148299999998);
        ctx.bezierCurveTo(14.392301000000003, -91.24758299999998, 14.529891000000003, -91.24586299999997, 14.598896000000002, -91.21768299999998);
        ctx.bezierCurveTo(14.667896000000002, -91.18949299999998, 14.586766, -91.16814299999999, 14.418593000000001, -91.17023299999998);
        ctx.bezierCurveTo(14.250422000000002, -91.17233299999998, 14.193964000000001, -91.19540299999998, 14.293131, -91.22149299999998);
        ctx.closePath();
        ctx.moveTo(14.756209000000002, -91.83801899999997);
        ctx.bezierCurveTo(14.829779000000002, -91.86774899999998, 14.917691000000001, -91.86409899999997, 14.951559000000001, -91.82991899999998);
        ctx.bezierCurveTo(14.985429000000002, -91.79571899999998, 14.925229000000002, -91.77138899999997, 14.817786000000002, -91.77585899999997);
        ctx.bezierCurveTo(14.699053000000001, -91.78075899999997, 14.674902000000001, -91.80518899999997, 14.756206000000002, -91.83803899999997);
        ctx.closePath();
        ctx.moveTo(15.463291000000002, -91.83591899999998);
        ctx.bezierCurveTo(15.533361000000001, -91.86446899999997, 15.648024000000001, -91.86446899999997, 15.718095000000002, -91.83591899999998);
        ctx.bezierCurveTo(15.788165000000001, -91.80736899999998, 15.730835000000003, -91.78400899999997, 15.590693000000002, -91.78400899999997);
        ctx.bezierCurveTo(15.450551, -91.78400899999997, 15.393220000000001, -91.80736899999997, 15.463291000000002, -91.83591899999998);
        ctx.closePath();
        ctx.moveTo(23.718951000000004, -92.04176999999997);
        ctx.bezierCurveTo(23.789021000000005, -92.07031999999997, 23.903684000000005, -92.07031999999997, 23.973755000000004, -92.04176999999997);
        ctx.bezierCurveTo(24.043825000000005, -92.01321999999998, 23.986495000000005, -91.98984999999998, 23.846353000000004, -91.98984999999998);
        ctx.bezierCurveTo(23.706211000000003, -91.98984999999998, 23.648880000000005, -92.01320999999997, 23.718951000000004, -92.04176999999997);
        ctx.closePath();
        ctx.moveTo(63.32680500000001, -92.89992899999997);
        ctx.bezierCurveTo(63.32680500000001, -93.43771499999997, 63.34398500000001, -93.65771799999997, 63.36497500000001, -93.38882499999997);
        ctx.bezierCurveTo(63.38597500000001, -93.11993199999996, 63.38597500000001, -92.67992699999996, 63.36497500000001, -92.41103399999997);
        ctx.bezierCurveTo(63.34397500000001, -92.14214099999997, 63.32680500000001, -92.36214399999997, 63.32680500000001, -92.89992899999997);
        ctx.closePath();
        ctx.moveTo(23.479943000000006, -92.92565899999997);
        ctx.lineTo(23.285784000000007, -93.15724099999997);
        ctx.lineTo(23.515107000000008, -92.96116899999997);
        ctx.bezierCurveTo(23.730615000000007, -92.77690999999997, 23.790830000000007, -92.69407699999996, 23.709267000000008, -92.69407699999996);
        ctx.bezierCurveTo(23.689927000000008, -92.69407699999996, 23.586731000000007, -92.79828899999997, 23.47994300000001, -92.92565899999997);
        ctx.closePath();
        ctx.moveTo(24.342961000000006, -93.28589799999997);
        ctx.bezierCurveTo(24.216183000000004, -93.44914299999998, 24.219788000000005, -93.45278399999998, 24.381441000000006, -93.32475799999997);
        ctx.bezierCurveTo(24.551217000000005, -93.19029999999998, 24.605208000000005, -93.10577799999997, 24.521323000000006, -93.10577799999997);
        ctx.bezierCurveTo(24.500163000000008, -93.10577799999997, 24.419895000000007, -93.18682799999998, 24.342960000000005, -93.28589799999997);
        ctx.closePath();
        ctx.moveTo(102.71466000000001, -94.30826699999997);
        ctx.bezierCurveTo(102.78826000000001, -94.33799699999997, 102.87614, -94.33434699999997, 102.91001000000001, -94.30016699999997);
        ctx.bezierCurveTo(102.94391000000002, -94.26596699999997, 102.88371000000001, -94.24163699999997, 102.77624000000002, -94.24610699999997);
        ctx.bezierCurveTo(102.65751000000002, -94.25100699999997, 102.63336000000001, -94.27543699999997, 102.71464000000002, -94.30828699999996);
        ctx.closePath();
        ctx.moveTo(25.485147, -94.91551);
        ctx.bezierCurveTo(25.490047, -95.03541299999999, 25.514187, -95.059801, 25.546727, -94.97769);
        ctx.bezierCurveTo(25.576167, -94.90339, 25.572547, -94.814617, 25.538727, -94.780416);
        ctx.bezierCurveTo(25.504857, -94.746216, 25.480767, -94.807006, 25.485197000000003, -94.91550600000001);
        ctx.closePath();
        ctx.moveTo(24.852569000000003, -96.37362);
        ctx.bezierCurveTo(24.725792000000002, -96.536865, 24.729397000000002, -96.54050600000001, 24.891049000000002, -96.41248);
        ctx.bezierCurveTo(24.989149, -96.33479, 25.069412000000003, -96.253733, 25.069412000000003, -96.232361);
        ctx.bezierCurveTo(25.069412000000003, -96.147651, 24.985712000000003, -96.20217099999999, 24.852567000000004, -96.37362);
        ctx.closePath();
        ctx.moveTo(27.802190000000003, -99.14572);
        ctx.bezierCurveTo(27.875760000000003, -99.17545, 27.963672000000003, -99.17179999999999, 27.997540000000004, -99.13762);
        ctx.bezierCurveTo(28.031410000000005, -99.10342, 27.971210000000003, -99.07909, 27.863768000000004, -99.08355999999999);
        ctx.bezierCurveTo(27.745034000000004, -99.08846, 27.720884000000005, -99.11289, 27.802188000000005, -99.14573999999999);
        ctx.closePath();
        ctx.moveTo(85.72089, -99.753002);
        ctx.bezierCurveTo(85.72579, -99.87290499999999, 85.74992999999999, -99.89729299999999, 85.78247, -99.815182);
        ctx.bezierCurveTo(85.81191, -99.740882, 85.80829, -99.65211, 85.77447000000001, -99.617908);
        ctx.bezierCurveTo(85.74060000000001, -99.583708, 85.71651000000001, -99.644498, 85.72094000000001, -99.752997);
        ctx.closePath();
        ctx.moveTo(74.101812, -100.1647);
        ctx.bezierCurveTo(74.106712, -100.28461, 74.13085199999999, -100.30899, 74.163392, -100.2269);
        ctx.bezierCurveTo(74.192832, -100.1526, 74.189212, -100.06383, 74.155392, -100.02962);
        ctx.bezierCurveTo(74.12152200000001, -99.99542, 74.09743200000001, -100.05622, 74.10186200000001, -100.16471);
        ctx.closePath();
        ctx.moveTo(19.211551999999998, -101.54293);
        ctx.bezierCurveTo(18.880169999999996, -101.8811, 18.62935, -102.172, 18.654172999999997, -102.18937);
        ctx.bezierCurveTo(18.678992999999995, -102.20676999999999, 18.970618999999996, -101.93005, 19.302222999999998, -101.5745);
        ctx.bezierCurveTo(20.067956, -100.7535, 20.006199999999996, -100.73199, 19.211553, -101.5429);
        ctx.closePath();
        ctx.moveTo(30.433802999999997, -101.83234);
        ctx.bezierCurveTo(30.406582999999998, -101.87684, 30.469302999999996, -101.91324, 30.573186999999997, -101.91324);
        ctx.bezierCurveTo(30.677069999999997, -101.91324, 30.739793, -101.87684, 30.712570999999997, -101.83234);
        ctx.bezierCurveTo(30.685350999999997, -101.78784, 30.622631, -101.75144, 30.573186999999997, -101.75144);
        ctx.bezierCurveTo(30.523746999999997, -101.75144, 30.461022999999997, -101.78784, 30.433802999999997, -101.83234);
        ctx.closePath();
        ctx.moveTo(74.407578, -102.73784);
        ctx.bezierCurveTo(74.41247800000001, -102.85774, 74.436618, -102.88213, 74.46915800000001, -102.80004000000001);
        ctx.bezierCurveTo(74.498598, -102.72574000000002, 74.494978, -102.63697, 74.46115800000001, -102.60277);
        ctx.bezierCurveTo(74.42728800000002, -102.56857000000001, 74.40319800000002, -102.62937000000001, 74.40762800000002, -102.73786000000001);
        ctx.closePath();
        ctx.moveTo(32.5097, -104.05469);
        ctx.bezierCurveTo(32.5097, -104.07609, 32.589960000000005, -104.15710999999999, 32.688063, -104.23481);
        ctx.bezierCurveTo(32.849717, -104.36283, 32.853322, -104.35919, 32.726543, -104.19591);
        ctx.bezierCurveTo(32.593395, -104.02446, 32.509698, -103.96994, 32.509698, -104.05465);
        ctx.closePath();
        ctx.moveTo(25.630705000000003, -104.42635);
        ctx.bezierCurveTo(25.594995, -104.48475, 25.635905, -104.50195, 25.726615000000002, -104.46685);
        ctx.bezierCurveTo(25.903186, -104.39845, 25.935493, -104.32464999999999, 25.788885000000004, -104.32464999999999);
        ctx.bezierCurveTo(25.736135000000004, -104.32464999999999, 25.664957000000005, -104.37044999999999, 25.630709000000003, -104.42639999999999);
        ctx.closePath();
        ctx.moveTo(33.630839, -105.08394);
        ctx.bezierCurveTo(33.630839, -105.10534, 33.711099000000004, -105.18637, 33.809202, -105.26406);
        ctx.bezierCurveTo(33.970856, -105.39209, 33.974461, -105.38845, 33.847682, -105.22516);
        ctx.bezierCurveTo(33.714534, -105.05371000000001, 33.630837, -104.99919, 33.630837, -105.0839);
        ctx.closePath();
        ctx.moveTo(74.71334300000001, -105.31097);
        ctx.bezierCurveTo(74.71824300000002, -105.43087, 74.742383, -105.45526, 74.77492300000002, -105.37317);
        ctx.bezierCurveTo(74.80436300000001, -105.29887000000001, 74.80074300000001, -105.21009000000001, 74.76692300000002, -105.17589);
        ctx.bezierCurveTo(74.73305300000003, -105.14169, 74.70896300000003, -105.20249, 74.71339300000002, -105.31098);
        ctx.closePath();
        ctx.moveTo(31.17171600000001, -106.46030999999999);
        ctx.bezierCurveTo(31.04493900000001, -106.62355, 31.04854400000001, -106.62719, 31.21019600000001, -106.49920999999999);
        ctx.bezierCurveTo(31.37997200000001, -106.36474999999999, 31.43396300000001, -106.28022999999999, 31.35007700000001, -106.28022999999999);
        ctx.bezierCurveTo(31.32891700000001, -106.28022999999999, 31.24865000000001, -106.36122999999999, 31.17171400000001, -106.46034999999999);
        ctx.closePath();
        ctx.moveTo(31.98709000000001, -107.28371);
        ctx.bezierCurveTo(31.86031300000001, -107.44695, 31.86391800000001, -107.45059, 32.02557000000001, -107.32261);
        ctx.bezierCurveTo(32.12367000000001, -107.24491, 32.203933000000006, -107.16386, 32.203933000000006, -107.14249);
        ctx.bezierCurveTo(32.203933000000006, -107.05779, 32.120233000000006, -107.11229, 31.987088000000007, -107.28375);
        ctx.closePath();
        ctx.moveTo(35.97503900000001, -107.24540999999999);
        ctx.bezierCurveTo(35.97503900000001, -107.26680999999999, 36.05529900000001, -107.34782999999999, 36.15340200000001, -107.42551999999999);
        ctx.bezierCurveTo(36.315056000000006, -107.55354999999999, 36.318661000000006, -107.54991, 36.19188200000001, -107.38662);
        ctx.bezierCurveTo(36.058735000000006, -107.21517999999999, 35.975038000000005, -107.16064999999999, 35.975038000000005, -107.24537);
        ctx.closePath();
        ctx.moveTo(30.05057700000001, -107.69543999999999);
        ctx.bezierCurveTo(29.92380000000001, -107.85869, 29.92740500000001, -107.86232999999999, 30.08905700000001, -107.73433999999999);
        ctx.bezierCurveTo(30.18715700000001, -107.65664, 30.267420000000012, -107.57558999999999, 30.267420000000012, -107.55421999999999);
        ctx.bezierCurveTo(30.267420000000012, -107.46951999999999, 30.18372000000001, -107.52402, 30.050575000000013, -107.69547999999999);
        ctx.closePath();
        ctx.moveTo(35.95592900000001, -107.79144);
        ctx.bezierCurveTo(36.02949900000001, -107.82114, 36.117410000000014, -107.81754, 36.15127900000001, -107.78344);
        ctx.bezierCurveTo(36.18514900000001, -107.74924, 36.12494900000001, -107.72494, 36.01750700000001, -107.72934);
        ctx.bezierCurveTo(35.898773000000006, -107.73433999999999, 35.87462200000001, -107.75864, 35.95592700000001, -107.79154);
        ctx.closePath();
        ctx.moveTo(75.01910800000002, -107.88413999999999);
        ctx.bezierCurveTo(75.02400800000002, -108.00403999999999, 75.04814800000001, -108.02842999999999, 75.08068800000002, -107.94633999999999);
        ctx.bezierCurveTo(75.11012800000002, -107.87204, 75.10650800000002, -107.78326999999999, 75.07268800000003, -107.74906999999999);
        ctx.bezierCurveTo(75.03881800000003, -107.71486999999999, 75.01472800000003, -107.77566999999999, 75.01915800000003, -107.88416);
        ctx.closePath();
        ctx.moveTo(84.70167200000002, -108.29583999999998);
        ctx.bezierCurveTo(84.70657200000002, -108.41573999999999, 84.73071200000001, -108.44012999999998, 84.76325200000002, -108.35803999999999);
        ctx.bezierCurveTo(84.79269200000002, -108.28374, 84.78907200000002, -108.19496999999998, 84.75525200000003, -108.16076999999999);
        ctx.bezierCurveTo(84.72138200000003, -108.12656999999999, 84.69729200000003, -108.18736999999999, 84.70172200000003, -108.29585999999999);
        ctx.closePath();
        ctx.moveTo(30.96787300000002, -108.41591999999999);
        ctx.bezierCurveTo(30.841096000000018, -108.57915999999999, 30.84470100000002, -108.58279999999999, 31.00635300000002, -108.45481999999998);
        ctx.bezierCurveTo(31.176129000000017, -108.32035999999998, 31.230120000000017, -108.23583999999998, 31.146234000000018, -108.23583999999998);
        ctx.bezierCurveTo(31.12507400000002, -108.23583999999998, 31.044807000000016, -108.31693999999999, 30.967871000000017, -108.41595999999998);
        ctx.closePath();
        ctx.moveTo(29.031360000000017, -108.82761999999998);
        ctx.bezierCurveTo(28.904583000000017, -108.99085999999998, 28.908188000000017, -108.99450999999998, 29.069840000000017, -108.86651999999998);
        ctx.bezierCurveTo(29.239616000000016, -108.73205999999998, 29.293607000000016, -108.64753999999998, 29.209721000000016, -108.64753999999998);
        ctx.bezierCurveTo(29.188561000000018, -108.64753999999998, 29.108294000000015, -108.72863999999998, 29.031358000000015, -108.82765999999998);
        ctx.closePath();
        ctx.moveTo(29.846734000000016, -109.65101999999999);
        ctx.bezierCurveTo(29.719957000000015, -109.81427, 29.723562000000015, -109.81790999999998, 29.885214000000015, -109.68991999999999);
        ctx.bezierCurveTo(30.054991000000015, -109.55545999999998, 30.108982000000015, -109.47093999999998, 30.025096000000016, -109.47093999999998);
        ctx.bezierCurveTo(30.003936000000017, -109.47093999999998, 29.923669000000015, -109.55203999999999, 29.846733000000015, -109.65105999999999);
        ctx.closePath();
        ctx.moveTo(31.090843000000014, -109.94263999999998);
        ctx.bezierCurveTo(31.095743000000013, -110.06254999999999, 31.119883000000012, -110.08692999999998, 31.152423000000013, -110.00483999999999);
        ctx.bezierCurveTo(31.181863000000014, -109.93054, 31.178243000000013, -109.84176999999998, 31.144423000000014, -109.80755999999998);
        ctx.bezierCurveTo(31.110553000000014, -109.77335999999998, 31.086463000000013, -109.83415999999998, 31.090893000000015, -109.94264999999999);
        ctx.closePath();
        ctx.moveTo(27.910221000000014, -110.06271999999998);
        ctx.bezierCurveTo(27.783444000000014, -110.22596999999999, 27.787049000000014, -110.22960999999998, 27.948701000000014, -110.10161999999998);
        ctx.bezierCurveTo(28.118477000000013, -109.96716999999998, 28.172468000000013, -109.88263999999998, 28.088582000000013, -109.88263999999998);
        ctx.bezierCurveTo(28.067422000000015, -109.88263999999998, 27.987155000000012, -109.96373999999999, 27.910219000000012, -110.06275999999998);
        ctx.closePath();
        ctx.moveTo(32.00813800000002, -110.45726999999998);
        ctx.bezierCurveTo(32.013038000000016, -110.57716999999998, 32.03717800000002, -110.60155999999998, 32.069718000000016, -110.51946999999998);
        ctx.bezierCurveTo(32.09915800000002, -110.44516999999999, 32.09553800000002, -110.35639999999998, 32.06171800000001, -110.32219999999998);
        ctx.bezierCurveTo(32.02784800000001, -110.28799999999998, 32.00375800000001, -110.34879999999998, 32.00818800000001, -110.45728999999999);
        ctx.closePath();
        ctx.moveTo(75.32487300000003, -110.45726999999998);
        ctx.bezierCurveTo(75.32977300000003, -110.57716999999998, 75.35391300000002, -110.60155999999998, 75.38645300000003, -110.51946999999998);
        ctx.bezierCurveTo(75.41589300000003, -110.44516999999999, 75.41227300000003, -110.35639999999998, 75.37845300000004, -110.32219999999998);
        ctx.bezierCurveTo(75.34458300000004, -110.28799999999998, 75.32049300000004, -110.34879999999998, 75.32492300000004, -110.45728999999999);
        ctx.closePath();
        ctx.moveTo(28.725595000000027, -110.88612999999998);
        ctx.bezierCurveTo(28.598818000000026, -111.04936999999998, 28.602422000000026, -111.05300999999999, 28.764075000000027, -110.92502999999998);
        ctx.bezierCurveTo(28.933852000000027, -110.79056999999997, 28.987843000000026, -110.70604999999998, 28.903957000000027, -110.70604999999998);
        ctx.bezierCurveTo(28.88279700000003, -110.70604999999998, 28.802530000000026, -110.78714999999998, 28.725594000000026, -110.88616999999998);
        ctx.closePath();
        ctx.moveTo(26.39439600000003, -111.77411999999998);
        ctx.bezierCurveTo(26.39439600000003, -111.79551999999998, 26.474656000000028, -111.87654999999998, 26.57275900000003, -111.95423999999998);
        ctx.bezierCurveTo(26.73441300000003, -112.08226999999998, 26.73801800000003, -112.07862999999999, 26.61123900000003, -111.91533999999999);
        ctx.bezierCurveTo(26.47809100000003, -111.74389, 26.39439400000003, -111.68936999999998, 26.39439400000003, -111.77407999999998);
        ctx.closePath();
        ctx.moveTo(27.70637800000003, -112.01830999999999);
        ctx.bezierCurveTo(27.579600000000028, -112.18154999999999, 27.583205000000028, -112.18518999999999, 27.74485800000003, -112.05720999999998);
        ctx.bezierCurveTo(27.914634000000028, -111.92274999999998, 27.968625000000028, -111.83822999999998, 27.88474000000003, -111.83822999999998);
        ctx.bezierCurveTo(27.86358000000003, -111.83822999999998, 27.78331200000003, -111.91932999999999, 27.70637700000003, -112.01834999999998);
        ctx.closePath();
        ctx.moveTo(37.28702000000003, -112.01830999999999);
        ctx.bezierCurveTo(37.163256000000025, -112.17766999999999, 37.16583300000003, -112.18369999999999, 37.309400000000025, -112.07060999999999);
        ctx.bezierCurveTo(37.39864000000002, -112.00030999999998, 37.50919200000003, -111.97720999999999, 37.55506400000002, -112.01910999999998);
        ctx.bezierCurveTo(37.600934000000024, -112.06110999999999, 37.60547400000002, -112.03750999999998, 37.56515400000002, -111.96670999999998);
        ctx.bezierCurveTo(37.470384000000024, -111.80041999999997, 37.45374500000002, -111.80349999999997, 37.28702300000002, -112.01820999999998);
        ctx.closePath();
        ctx.moveTo(83.38473600000003, -112.66158999999999);
        ctx.bezierCurveTo(83.38473600000003, -112.80310999999999, 83.40786600000003, -112.86101, 83.43614600000004, -112.79024999999999);
        ctx.bezierCurveTo(83.46441600000004, -112.71944999999998, 83.46441600000004, -112.60368999999999, 83.43614600000004, -112.53293);
        ctx.bezierCurveTo(83.40787600000003, -112.46212999999999, 83.38473600000003, -112.52002999999999, 83.38473600000003, -112.66158999999999);
        ctx.closePath();
        ctx.moveTo(28.40735000000003, -112.72979);
        ctx.bezierCurveTo(28.47742000000003, -112.75838999999999, 28.59208400000003, -112.75838999999999, 28.66215500000003, -112.72979);
        ctx.bezierCurveTo(28.73222500000003, -112.70129, 28.67489500000003, -112.67788999999999, 28.53475300000003, -112.67788999999999);
        ctx.bezierCurveTo(28.394610000000032, -112.67788999999999, 28.33727900000003, -112.70128999999999, 28.40735000000003, -112.72979);
        ctx.closePath();
        ctx.moveTo(35.57539900000003, -113.85385);
        ctx.bezierCurveTo(35.58029900000003, -113.97375, 35.604439000000035, -113.99813999999999, 35.63697900000003, -113.91605);
        ctx.bezierCurveTo(35.66641900000003, -113.84175, 35.662799000000035, -113.75298, 35.62897900000003, -113.71878);
        ctx.bezierCurveTo(35.59510900000003, -113.68458, 35.57101900000003, -113.74538, 35.57544900000003, -113.85387);
        ctx.closePath();
        ctx.moveTo(34.887873000000035, -115.6934);
        ctx.bezierCurveTo(34.887873000000035, -115.7758, 34.926843000000034, -115.81894, 34.97447300000003, -115.7892);
        ctx.bezierCurveTo(35.02210300000003, -115.75949999999999, 35.03468300000003, -115.692, 35.00243300000003, -115.63933999999999);
        ctx.bezierCurveTo(34.92001300000003, -115.50468, 34.88787700000003, -115.51983999999999, 34.88787700000003, -115.69344);
        ctx.closePath();
        ctx.moveTo(35.88721500000003, -115.98955);
        ctx.bezierCurveTo(35.80210500000003, -116.09311, 35.81045500000003, -116.12678, 35.92121500000003, -116.12678);
        ctx.bezierCurveTo(36.001945000000035, -116.12678, 36.04679500000003, -116.09218, 36.020885000000035, -116.04978);
        ctx.bezierCurveTo(35.99497500000003, -116.00748, 36.031385000000036, -115.94935, 36.10181500000004, -115.92067);
        ctx.bezierCurveTo(36.18158500000004, -115.88817, 36.186535000000035, -115.86547, 36.114925000000035, -115.86047);
        ctx.bezierCurveTo(36.05171500000004, -115.85647, 35.94925100000003, -115.91407000000001, 35.887220000000035, -115.98958);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.102422;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(61.149706, -23.105331);
        ctx.bezierCurveTo(61.149706, -23.155801, 61.256505000000004, -23.224168, 61.387037, -23.257252);
        ctx.bezierCurveTo(61.857584, -23.376515, 61.874925, -23.574594, 61.799332, -27.966784);
        ctx.bezierCurveTo(61.753662, -30.620312000000002, 61.688749, -32.153535, 61.615747, -32.302975);
        ctx.bezierCurveTo(61.553637, -32.430127000000006, 61.400431, -32.579881, 61.275299, -32.635761);
        ctx.bezierCurveTo(61.150166, -32.691641000000004, 61.047784, -32.772695, 61.047784, -32.81588);
        ctx.bezierCurveTo(61.047784, -32.85907, 61.683108, -32.8944, 62.459616, -32.8944);
        ctx.bezierCurveTo(63.759341, -32.8944, 63.898754999999994, -32.87582, 64.21534, -32.660368);
        ctx.bezierCurveTo(64.953544, -32.157995, 65.296588, -31.176997, 65.197561, -29.851528);
        ctx.bezierCurveTo(65.08212099999999, -28.306362, 64.42523999999999, -27.544919999999998, 63.205918999999994, -27.542855);
        ctx.lineTo(62.86697099999999, -27.542238);
        ctx.lineTo(62.93873099999999, -25.612387000000002);
        ctx.bezierCurveTo(62.97820099999999, -24.550969000000002, 63.04925499999999, -23.606810000000003, 63.09662699999999, -23.514257);
        ctx.bezierCurveTo(63.14399699999999, -23.421697, 63.29862999999999, -23.316608000000002, 63.44025099999999, -23.280714);
        ctx.bezierCurveTo(63.58187299999999, -23.244864, 63.697743999999986, -23.17006, 63.697743999999986, -23.114529);
        ctx.bezierCurveTo(63.697743999999986, -23.053909, 63.18862699999998, -23.013565, 62.42372299999999, -23.013565);
        ctx.bezierCurveTo(61.723010999999985, -23.013565, 61.149700999999986, -23.054865, 61.149700999999986, -23.105335);
        ctx.closePath();
        ctx.moveTo(63.488350000000004, -28.15683);
        ctx.bezierCurveTo(63.82941100000001, -28.341157, 64.00351400000001, -29.012705, 64.00351400000001, -30.143908);
        ctx.bezierCurveTo(64.00351400000001, -30.723378, 63.95874400000001, -31.355128999999998, 63.90402400000001, -31.547799);
        ctx.bezierCurveTo(63.774966000000006, -32.002226, 63.418912000000006, -32.379772, 63.11941100000001, -32.379772);
        ctx.lineTo(62.882372000000004, -32.379772);
        ctx.lineTo(62.882372000000004, -30.21834);
        ctx.bezierCurveTo(62.882372000000004, -28.102594, 62.886872000000004, -28.056907000000002, 63.092916, -28.056907000000002);
        ctx.bezierCurveTo(63.208716, -28.056907000000002, 63.38666, -28.101877, 63.488347000000005, -28.156827000000003);
        ctx.closePath();
        ctx.moveTo(56.512267, -23.309032);
        ctx.bezierCurveTo(55.428976, -23.988463, 54.961294, -25.469295, 55.063663, -27.895771999999997);
        ctx.bezierCurveTo(55.223245999999996, -31.678371999999996, 56.944984, -34.034695, 58.863872, -33.09663);
        ctx.bezierCurveTo(60.527591, -32.283305999999996, 60.895195, -28.03419, 59.557255, -25.081849999999996);
        ctx.bezierCurveTo(59.142087, -24.165726999999997, 58.633576999999995, -23.512854999999995, 58.157498, -23.284714999999995);
        ctx.bezierCurveTo(57.681928, -23.056820999999996, 56.895871, -23.068437999999993, 56.512266999999994, -23.309034999999994);
        ctx.closePath();
        ctx.moveTo(57.922193, -23.938285999999998);
        ctx.bezierCurveTo(58.605322, -24.758132999999997, 59.118909, -27.340854999999998, 59.140314000000004, -30.063950999999996);
        ctx.bezierCurveTo(59.152304, -31.589744999999997, 59.029096, -32.169816, 58.601238, -32.601887);
        ctx.bezierCurveTo(58.258628, -32.947869999999995, 58.010716, -32.969873, 57.653366000000005, -32.686017);
        ctx.bezierCurveTo(56.88060600000001, -32.07218, 56.25746300000001, -29.253567, 56.25746300000001, -26.37205);
        ctx.bezierCurveTo(56.25746300000001, -24.438081, 56.56986800000001, -23.631119, 57.31858100000001, -23.631119);
        ctx.bezierCurveTo(57.57935000000001, -23.631119, 57.73021900000001, -23.707899, 57.92219300000001, -23.938289);
        ctx.closePath();
        ctx.moveTo(66.810866, -23.314981999999997);
        ctx.bezierCurveTo(66.77869600000001, -23.367541999999997, 66.85533600000001, -23.425437999999996, 66.98116300000001, -23.443637999999996);
        ctx.bezierCurveTo(67.44773900000001, -23.511117999999996, 67.44382100000001, -23.795254999999997, 66.917083, -28.090259999999997);
        ctx.bezierCurveTo(66.6451, -30.307968999999996, 66.38235200000001, -32.230863, 66.33319800000001, -32.36335699999999);
        ctx.bezierCurveTo(66.28404800000001, -32.49584999999999, 66.10667600000001, -32.656532999999996, 65.93904800000001, -32.720428999999996);
        ctx.bezierCurveTo(65.62652700000001, -32.83955399999999, 65.52915200000001, -32.997324, 65.76815000000002, -32.997324);
        ctx.bezierCurveTo(65.84178000000001, -32.997324, 66.40473600000001, -33.064284, 67.01915300000002, -33.146116);
        ctx.bezierCurveTo(68.44101700000002, -33.335497, 68.81560200000001, -33.261482, 69.32062700000002, -32.691364);
        ctx.bezierCurveTo(69.96138700000002, -31.968018, 70.25632000000002, -30.611029000000002, 70.02127600000001, -29.467677000000002);
        ctx.bezierCurveTo(69.83649700000001, -28.568838000000003, 69.33860300000002, -28.071779000000003, 68.46259500000002, -27.911611);
        ctx.bezierCurveTo(68.25238200000003, -27.873181, 68.08044100000002, -27.809089, 68.08050400000002, -27.769198);
        ctx.bezierCurveTo(68.08081000000001, -27.606672, 68.48969900000002, -24.485723, 68.54423900000002, -24.230049);
        ctx.bezierCurveTo(68.61357900000002, -23.904971, 68.79777400000002, -23.728702000000002, 69.09146200000002, -23.706362000000002);
        ctx.bezierCurveTo(69.20805500000002, -23.697462, 69.30344900000001, -23.638952000000003, 69.30344900000001, -23.57628);
        ctx.bezierCurveTo(69.30344900000001, -23.50831, 68.88191200000001, -23.413082, 68.25875200000002, -23.340285);
        ctx.bezierCurveTo(67.00502100000001, -23.193826, 66.88628900000002, -23.191751, 66.81087100000002, -23.314985);
        ctx.closePath();
        ctx.moveTo(68.43254400000001, -28.429617999999998);
        ctx.bezierCurveTo(68.860178, -28.595332999999997, 69.04833500000001, -29.504700999999997, 68.89262000000001, -30.653177);
        ctx.bezierCurveTo(68.709727, -32.002112, 68.32668500000001, -32.688548, 67.756853, -32.688548);
        ctx.bezierCurveTo(67.598453, -32.688548, 67.46904400000001, -32.676967999999995, 67.469277, -32.662817999999994);
        ctx.bezierCurveTo(67.469481, -32.648667999999994, 67.583982, -31.733916999999995, 67.723658, -30.630041999999996);
        ctx.bezierCurveTo(67.863333, -29.526166999999997, 67.977805, -28.565101999999996, 67.978038, -28.494340999999995);
        ctx.bezierCurveTo(67.978548, -28.355054999999997, 68.169821, -28.327809999999996, 68.432544, -28.429620999999994);
        ctx.closePath();
        ctx.moveTo(70.93419200000001, -23.735701999999996);
        ctx.bezierCurveTo(70.93419200000001, -23.795381999999996, 71.014452, -23.967861999999997, 71.11255500000001, -24.118993999999997);
        ctx.bezierCurveTo(71.27309100000001, -24.366314999999997, 71.29820900000001, -24.871374999999997, 71.36385900000002, -29.172335999999998);
        ctx.bezierCurveTo(71.40397900000002, -31.800541999999997, 71.44983900000003, -33.963448, 71.46578100000002, -33.978791);
        ctx.bezierCurveTo(71.48172100000002, -33.994131, 72.01911900000002, -32.864833000000004, 72.66000000000003, -31.469231);
        ctx.bezierCurveTo(75.01459600000003, -26.341791, 75.59926800000002, -25.178856, 75.87592100000002, -25.072637);
        ctx.bezierCurveTo(76.01687500000001, -25.018517, 76.13220000000003, -24.935503, 76.13220000000003, -24.888156);
        ctx.bezierCurveTo(76.13220000000003, -24.840805999999997, 75.60475500000003, -24.685378999999998, 74.96010000000003, -24.542759);
        ctx.bezierCurveTo(74.11375300000003, -24.355515, 73.78800100000002, -24.318185, 73.78800100000002, -24.408441);
        ctx.bezierCurveTo(73.78800100000002, -24.477191, 73.87973100000002, -24.557659, 73.99184400000003, -24.587267);
        ctx.bezierCurveTo(74.13994500000003, -24.626377, 74.19568700000004, -24.727658, 74.19568700000004, -24.957643);
        ctx.bezierCurveTo(74.19568700000004, -25.374789, 73.43779300000004, -27.027653, 73.24651900000003, -27.027653);
        ctx.bezierCurveTo(73.16568900000003, -27.027653, 72.77287300000003, -26.953153, 72.37359900000004, -26.862098);
        ctx.lineTo(71.64764400000004, -26.696542);
        ctx.lineTo(71.64764400000004, -25.77627);
        ctx.bezierCurveTo(71.64764400000004, -24.689315, 71.80258600000005, -24.279823, 72.23276500000004, -24.229864);
        ctx.bezierCurveTo(72.66681000000004, -24.179454, 72.53098700000004, -24.004075999999998, 71.95645900000004, -23.873086);
        ctx.bezierCurveTo(71.67115700000004, -23.808036, 71.32443200000004, -23.726103000000002, 71.18596000000004, -23.691006);
        ctx.bezierCurveTo(71.03746800000003, -23.653366000000002, 70.93419200000004, -23.671706, 70.93419200000004, -23.735706);
        ctx.closePath();
        ctx.moveTo(72.541718, -27.396489999999996);
        ctx.bezierCurveTo(72.78120200000001, -27.434939999999997, 73.00419000000001, -27.510583999999998, 73.037244, -27.564594999999997);
        ctx.bezierCurveTo(73.094024, -27.657365, 71.922568, -30.364753999999998, 71.735362, -30.573431999999997);
        ctx.bezierCurveTo(71.685992, -30.628461999999995, 71.64764199999999, -29.914910999999996, 71.64764199999999, -28.941198999999997);
        ctx.lineTo(71.64764199999999, -27.211187999999996);
        ctx.lineTo(71.876966, -27.268887999999997);
        ctx.bezierCurveTo(72.00309399999999, -27.300617999999996, 72.30223099999999, -27.358037999999997, 72.541716, -27.396489999999996);
        ctx.closePath();
        ctx.moveTo(49.96353500000001, -24.584076999999997);
        ctx.bezierCurveTo(48.70616700000001, -24.884552999999997, 48.478353000000006, -24.998821999999997, 48.959258000000005, -25.087812999999997);
        ctx.bezierCurveTo(49.37534000000001, -25.164802999999996, 49.531398, -25.631641999999996, 50.38785300000001, -29.361337999999996);
        ctx.bezierCurveTo(51.49622200000001, -34.188069999999996, 51.44706600000001, -33.856882, 51.10289800000001, -34.178988);
        ctx.bezierCurveTo(50.94931800000001, -34.322722, 50.84413700000001, -34.461, 50.86916300000001, -34.486273);
        ctx.bezierCurveTo(50.94243300000001, -34.560272999999995, 53.498028000000005, -33.936927999999995, 53.888470000000005, -33.749826);
        ctx.bezierCurveTo(54.371419, -33.518395, 54.62155800000001, -32.945432, 54.624477000000006, -32.063946);
        ctx.bezierCurveTo(54.628677, -30.802304000000003, 54.115049000000006, -29.762233000000002, 53.349869000000005, -29.482816);
        ctx.bezierCurveTo(52.93584500000001, -29.331628, 52.92259500000001, -29.28691, 53.214206000000004, -29.024919);
        ctx.bezierCurveTo(54.220453000000006, -28.120875, 53.850601000000005, -25.44028, 52.604743000000006, -24.607691000000003);
        ctx.bezierCurveTo(52.026799000000004, -24.221460000000004, 51.50062200000001, -24.216755000000003, 49.96353500000001, -24.584081);
        ctx.closePath();
        ctx.moveTo(51.776039000000004, -25.268826999999998);
        ctx.bezierCurveTo(52.253801, -25.776004999999998, 52.486836000000004, -26.439435, 52.558378000000005, -27.496074999999998);
        ctx.bezierCurveTo(52.601628000000005, -28.134842999999996, 52.57765800000001, -28.396644999999996, 52.453791, -28.638540999999996);
        ctx.bezierCurveTo(52.291908, -28.954671999999995, 51.678259000000004, -29.343307999999997, 51.552077000000004, -29.209614999999996);
        ctx.bezierCurveTo(51.464137, -29.116434999999996, 50.651768000000004, -25.616413999999995, 50.651768000000004, -25.330696999999997);
        ctx.bezierCurveTo(50.651768000000004, -24.742469999999997, 51.249237, -24.709591999999997, 51.776039000000004, -25.268826999999998);
        ctx.closePath();
        ctx.moveTo(52.481581000000006, -29.855605999999998);
        ctx.bezierCurveTo(52.858909000000004, -30.052650999999997, 53.153583000000005, -30.543691999999997, 53.34887700000001, -31.300860999999998);
        ctx.bezierCurveTo(53.647844000000006, -32.459975, 53.48542000000001, -33.264584, 52.903315000000006, -33.508074);
        ctx.bezierCurveTo(52.726451000000004, -33.582054, 52.563664, -33.624326, 52.541566, -33.602014000000004);
        ctx.bezierCurveTo(52.493616, -33.553594000000004, 51.670985, -29.974955000000005, 51.670985, -29.814797000000006);
        ctx.bezierCurveTo(51.670985, -29.654550000000008, 52.141977000000004, -29.678264000000006, 52.481581, -29.855607000000006);
        ctx.closePath();
        ctx.moveTo(76.743731, -25.106244999999998);
        ctx.bezierCurveTo(76.743731, -25.173434999999998, 76.835461, -25.286255999999998, 76.947574, -25.356961);
        ctx.bezierCurveTo(77.06127500000001, -25.428670999999998, 77.151418, -25.596984999999997, 77.151418, -25.737586999999998);
        ctx.bezierCurveTo(77.151418, -26.182509999999997, 74.53504400000001, -33.719888999999995, 74.288674, -33.984719999999996);
        ctx.bezierCurveTo(74.121017, -34.164941, 73.996438, -34.211681999999996, 73.80982, -34.164382999999994);
        ctx.bezierCurveTo(73.62687100000001, -34.11801299999999, 73.569923, -34.137843, 73.60251, -34.23657299999999);
        ctx.bezierCurveTo(73.64972999999999, -34.379625999999995, 75.661447, -35.105768999999995, 76.425247, -35.25545699999999);
        ctx.bezierCurveTo(76.674601, -35.304326999999994, 77.008186, -35.303166999999995, 77.18198699999999, -35.25285699999999);
        ctx.bezierCurveTo(78.44381999999999, -34.887404999999994, 79.444159, -32.15926299999999, 78.777148, -30.90250899999999);
        ctx.bezierCurveTo(78.645819, -30.65506499999999, 78.60220199999999, -30.464594999999992, 78.659649, -30.38940699999999);
        ctx.bezierCurveTo(79.82348400000001, -28.86614599999999, 81.374129, -27.040514999999992, 81.587495, -26.942341999999993);
        ctx.bezierCurveTo(81.74076000000001, -26.871821999999995, 81.84428700000001, -26.792036999999993, 81.817555, -26.765039999999992);
        ctx.bezierCurveTo(81.790825, -26.73804999999999, 81.453831, -26.60861299999999, 81.068684, -26.477413999999992);
        ctx.lineTo(80.368418, -26.238868999999994);
        ctx.lineTo(78.859871, -28.121699999999993);
        ctx.bezierCurveTo(77.81197, -29.429594999999992, 77.305241, -29.986672999999993, 77.20041, -29.946048999999995);
        ctx.bezierCurveTo(77.11741, -29.913888999999994, 77.049496, -29.875958999999995, 77.049496, -29.861768999999995);
        ctx.bezierCurveTo(77.049496, -29.718301999999994, 78.219803, -26.403953999999995, 78.33188200000001, -26.230008999999995);
        ctx.bezierCurveTo(78.432968, -26.073124999999994, 78.581708, -25.998425999999995, 78.79300900000001, -25.998425999999995);
        ctx.bezierCurveTo(79.38178900000001, -25.998425999999995, 79.03567100000001, -25.758971999999996, 77.884189, -25.369678999999994);
        ctx.bezierCurveTo(77.15068400000001, -25.121694999999995, 76.74373100000001, -25.027702999999995, 76.74373100000001, -25.106271999999993);
        ctx.closePath();
        ctx.moveTo(77.58075699999999, -30.647800999999998);
        ctx.bezierCurveTo(78.11440999999999, -31.027309999999996, 78.043944, -32.153704, 77.40191499999999, -33.506586999999996);
        ctx.bezierCurveTo(76.92867999999999, -34.503786, 76.49990999999999, -34.782207, 75.74999399999999, -34.579257);
        ctx.bezierCurveTo(75.62386599999999, -34.545127, 75.52066999999998, -34.466301, 75.52066999999998, -34.404095);
        ctx.bezierCurveTo(75.52066999999998, -34.341895, 75.82543799999998, -33.396815, 76.19793399999998, -32.303929);
        ctx.bezierCurveTo(76.94307899999997, -30.117697999999997, 76.90294199999998, -30.165768999999997, 77.58075699999998, -30.647800999999998);
        ctx.closePath();
        ctx.moveTo(43.54776299999999, -26.644161999999998);
        ctx.bezierCurveTo(42.91989299999999, -26.931555, 42.42965699999999, -27.205053999999997, 42.458350999999986, -27.251938999999997);
        ctx.bezierCurveTo(42.487040999999984, -27.298818999999998, 42.62041199999999, -27.309328999999998, 42.754719999999985, -27.275288999999997);
        ctx.bezierCurveTo(42.935147999999984, -27.229559, 43.05994399999999, -27.280988999999998, 43.23260299999998, -27.472219999999997);
        ctx.bezierCurveTo(43.46040199999998, -27.724526999999995, 46.631458999999985, -34.827169, 46.552089999999986, -34.90732);
        ctx.bezierCurveTo(46.53011999999998, -34.9295, 45.34581699999998, -33.326041, 43.92029999999998, -31.344072999999998);
        ctx.bezierCurveTo(42.49478199999999, -29.362104, 41.31599399999998, -27.778225999999997, 41.30077099999998, -27.824344999999997);
        ctx.bezierCurveTo(41.285550999999984, -27.870464999999996, 41.663279999999986, -29.825276999999996, 42.140174999999985, -32.168375);
        ctx.bezierCurveTo(42.617069999999984, -34.511472, 42.987096999999984, -36.44891, 42.962456999999986, -36.473791999999996);
        ctx.bezierCurveTo(42.93781699999999, -36.498672, 42.852173999999984, -36.363499, 42.772137999999984, -36.173401999999996);
        ctx.bezierCurveTo(42.69209799999999, -35.983304, 42.00600499999999, -34.41511799999999, 41.24747799999999, -32.688545);
        ctx.bezierCurveTo(40.488950999999986, -30.961972, 39.83905799999999, -29.407332999999998, 39.80326999999998, -29.233793);
        ctx.bezierCurveTo(39.754539999999984, -28.997476, 39.793269999999985, -28.847538999999998, 39.95763599999999, -28.636550999999997);
        ctx.bezierCurveTo(40.07832399999999, -28.481609999999996, 40.149917999999985, -28.327420999999998, 40.11673299999999, -28.293909999999997);
        ctx.bezierCurveTo(40.08355299999999, -28.260399999999997, 39.71228499999999, -28.384499999999996, 39.29170199999999, -28.569677999999996);
        ctx.bezierCurveTo(38.54625499999999, -28.897899999999996, 38.39419599999999, -29.086156999999996, 38.87453199999999, -29.086156999999996);
        ctx.bezierCurveTo(39.005155999999985, -29.086156999999996, 39.21043999999999, -29.167206999999998, 39.33071899999999, -29.266276999999995);
        ctx.bezierCurveTo(39.596347999999985, -29.485057999999995, 42.814953999999986, -36.73449899999999, 42.82666099999999, -37.140376999999994);
        ctx.bezierCurveTo(42.83116099999999, -37.29622199999999, 42.75169099999999, -37.51650899999999, 42.65006899999999, -37.629903999999996);
        ctx.bezierCurveTo(42.33378599999999, -37.982834999999994, 42.53811299999999, -37.957027999999994, 43.46397499999999, -37.527111);
        ctx.bezierCurveTo(44.31652799999999, -37.131232999999995, 44.35499999999999, -37.099154, 44.29976099999999, -36.830189);
        ctx.bezierCurveTo(43.24187899999999, -31.679174999999997, 43.04481599999999, -30.623851999999996, 43.16374499999999, -30.746520999999998);
        ctx.bezierCurveTo(43.238834999999995, -30.823980999999996, 44.110254999999995, -32.022104, 45.10022299999999, -33.409023);
        ctx.bezierCurveTo(46.133224999999996, -34.856232999999996, 46.958642999999995, -35.918389999999995, 47.037409999999994, -35.901816999999994);
        ctx.bezierCurveTo(47.112899999999996, -35.88593699999999, 47.52129099999999, -35.713415999999995, 47.94495599999999, -35.518443999999995);
        ctx.bezierCurveTo(48.72253799999999, -35.160599999999995, 48.96424099999999, -34.907762, 48.42454099999999, -35.016766);
        ctx.bezierCurveTo(48.19357599999999, -35.063416, 48.09117799999999, -35.020765999999995, 47.92631599999999, -34.809073999999995);
        ctx.bezierCurveTo(47.651689999999995, -34.456506999999995, 44.43454199999999, -27.132394999999995, 44.43454199999999, -26.859753999999995);
        ctx.bezierCurveTo(44.43454199999999, -26.743208999999997, 44.52627199999999, -26.564021999999994, 44.63838599999999, -26.461560999999996);
        ctx.bezierCurveTo(44.84269299999999, -26.274844999999996, 44.90907199999999, -26.092442999999996, 44.765787999999986, -26.111474999999995);
        ctx.bezierCurveTo(44.723747999999986, -26.117074999999996, 44.175634999999986, -26.356766999999994, 43.54776299999999, -26.644158999999995);
        ctx.closePath();
        ctx.moveTo(82.75711299999999, -27.311670999999997);
        ctx.bezierCurveTo(82.75711299999999, -27.354660999999997, 82.84884299999999, -27.447687999999996, 82.960956, -27.518393999999997);
        ctx.bezierCurveTo(83.07307, -27.589103999999995, 83.1648, -27.752349999999996, 83.1648, -27.881171999999996);
        ctx.bezierCurveTo(83.1648, -28.173483999999995, 79.65813, -35.431121999999995, 79.358768, -35.758388);
        ctx.bezierCurveTo(79.196468, -35.93581699999999, 79.068148, -35.98331099999999, 78.863007, -35.941877999999996);
        ctx.bezierCurveTo(78.230486, -35.814128999999994, 78.559967, -36.088235999999995, 79.726309, -36.660090999999994);
        ctx.bezierCurveTo(80.786076, -37.17969299999999, 81.050096, -37.268570999999994, 81.531144, -37.26765499999999);
        ctx.bezierCurveTo(82.29081, -37.266254999999994, 82.769975, -37.01296999999999, 83.572487, -36.18880899999999);
        ctx.bezierCurveTo(84.757424, -34.97190499999999, 85.79758299999999, -32.85288899999999, 86.039818, -31.162352999999992);
        ctx.bezierCurveTo(86.182283, -30.168107999999993, 86.091028, -29.550558999999993, 85.712604, -28.947968999999993);
        ctx.bezierCurveTo(85.450319, -28.530314999999995, 85.270117, -28.400862999999994, 84.189605, -27.853884999999995);
        ctx.bezierCurveTo(82.981977, -27.242557999999995, 82.757113, -27.157444999999996, 82.757113, -27.311670999999993);
        ctx.closePath();
        ctx.moveTo(84.90530899999999, -28.872392999999995);
        ctx.bezierCurveTo(85.27467299999999, -29.245393999999994, 85.29645699999999, -29.723732999999996, 84.99481899999999, -30.837960999999996);
        ctx.bezierCurveTo(84.727099, -31.826897999999996, 83.63086299999999, -34.119012, 82.94976, -35.11396499999999);
        ctx.bezierCurveTo(82.110012, -36.34066599999999, 81.500649, -36.761008999999994, 80.830028, -36.576173999999995);
        ctx.bezierCurveTo(80.628643, -36.52067399999999, 80.451947, -36.46419699999999, 80.437369, -36.450678999999994);
        ctx.bezierCurveTo(80.378629, -36.39620899999999, 84.024767, -29.018109999999993, 84.216677, -28.803115999999996);
        ctx.bezierCurveTo(84.483402, -28.504306999999997, 84.547165, -28.510720999999997, 84.905309, -28.872395999999995);
        ctx.closePath();
        ctx.moveTo(34.674604999999985, -31.041186999999994);
        ctx.bezierCurveTo(34.10701899999999, -31.390654999999995, 33.916961999999984, -31.810032999999994, 33.966886999999986, -32.60282699999999);
        ctx.bezierCurveTo(34.023896999999984, -33.50819599999999, 34.29559599999999, -34.03985699999999, 36.35805599999998, -37.28194099999999);
        ctx.bezierCurveTo(37.26297799999998, -38.70443199999999, 38.03400999999998, -39.99157899999999, 38.071460999999985, -40.14226799999999);
        ctx.bezierCurveTo(38.11834099999999, -40.33087899999999, 38.08609099999998, -40.47590799999999, 37.96795299999999, -40.60773099999999);
        ctx.bezierCurveTo(37.86452399999999, -40.723143999999984, 37.836646999999985, -40.824364999999986, 37.89778299999999, -40.862521999999984);
        ctx.bezierCurveTo(38.03187299999999, -40.94621199999998, 40.07572899999999, -39.60381499999998, 40.00074899999999, -39.48130099999999);
        ctx.bezierCurveTo(39.96639899999999, -39.42516099999999, 39.83979599999999, -39.433810999999984, 39.690532999999995, -39.502490999999985);
        ctx.bezierCurveTo(39.474337, -39.601970999999985, 39.401059999999994, -39.58313099999999, 39.176911, -39.370482999999986);
        ctx.bezierCurveTo(38.877145999999996, -39.086094999999986, 35.80634499999999, -34.30253599999999, 35.295604999999995, -33.32435499999998);
        ctx.bezierCurveTo(34.855284, -32.48104199999998, 34.83082099999999, -31.876455999999983, 35.22436499999999, -31.563841999999983);
        ctx.bezierCurveTo(35.79834699999999, -31.107900999999984, 36.57164999999999, -31.434234999999983, 37.38768399999999, -32.47676199999999);
        ctx.bezierCurveTo(37.811308999999994, -33.01796299999999, 40.518041, -37.240146999999986, 40.802823999999994, -37.803975999999984);
        ctx.bezierCurveTo(41.01192999999999, -38.21797699999998, 41.015522, -38.594191999999985, 40.812023999999994, -38.764766999999985);
        ctx.bezierCurveTo(40.71938399999999, -38.84240699999999, 40.692327999999996, -38.93439399999998, 40.746143999999994, -38.98874099999998);
        ctx.bezierCurveTo(40.799963999999996, -39.04309099999998, 41.115680999999995, -38.901850999999986, 41.51487699999999, -38.64484199999998);
        ctx.bezierCurveTo(42.21125999999999, -38.19650699999998, 42.38307399999999, -37.96999799999998, 41.941959999999995, -38.08179999999998);
        ctx.bezierCurveTo(41.523385999999995, -38.18788999999998, 41.077557999999996, -37.66651899999998, 39.636616, -35.38583399999998);
        ctx.bezierCurveTo(38.896046, -34.21367699999998, 38.128496, -33.02305799999998, 37.93095099999999, -32.74001299999998);
        ctx.bezierCurveTo(36.789657999999996, -31.104755999999984, 35.588846999999994, -30.478292999999983, 34.674626999999994, -31.041188999999985);
        ctx.closePath();
        ctx.moveTo(30.610105999999988, -34.241460999999994);
        ctx.bezierCurveTo(30.113315999999987, -34.641518999999995, 29.664044999999987, -35.01079899999999, 29.611725999999987, -35.062082);
        ctx.bezierCurveTo(29.454270999999988, -35.21642, 29.623095999999986, -35.286651, 29.852938999999985, -35.162431);
        ctx.bezierCurveTo(30.021547999999985, -35.071301, 30.127000999999986, -35.082330999999996, 30.345795999999986, -35.213941);
        ctx.bezierCurveTo(30.498888999999984, -35.306031, 31.541443999999984, -36.544222, 32.662582999999984, -37.965468);
        ctx.bezierCurveTo(36.03169899999998, -42.236431, 35.983803999999985, -42.161541, 35.61167399999999, -42.576789000000005);
        ctx.bezierCurveTo(35.52393399999999, -42.67468900000001, 35.492297999999984, -42.779852000000005, 35.54136399999999, -42.810475000000004);
        ctx.bezierCurveTo(35.62974399999999, -42.865635000000005, 37.52507399999999, -41.399698, 37.58702499999999, -41.22827);
        ctx.bezierCurveTo(37.60473499999999, -41.17926, 37.45463799999999, -41.16614, 37.25347399999999, -41.1991);
        ctx.bezierCurveTo(36.97993399999999, -41.24393, 36.83259699999999, -41.21014, 36.66907999999999, -41.065074);
        ctx.bezierCurveTo(36.46342199999999, -40.882627, 31.93934799999999, -35.196087000000006, 31.562978999999988, -34.646955000000005);
        ctx.bezierCurveTo(31.345876999999987, -34.330197000000005, 31.34077399999999, -34.044642, 31.548078999999987, -33.813314000000005);
        ctx.bezierCurveTo(31.639498999999986, -33.71130600000001, 31.666135999999987, -33.60942800000001, 31.610478999999987, -33.574692000000006);
        ctx.bezierCurveTo(31.557058999999988, -33.541352, 31.106891999999988, -33.841396, 30.610102999999988, -34.24145600000001);
        ctx.closePath();
        ctx.moveTo(27.307724999999987, -36.853050999999994);
        ctx.bezierCurveTo(27.004096999999987, -37.01986599999999, 26.83486399999999, -37.31714099999999, 26.719527999999986, -37.886278999999995);
        ctx.bezierCurveTo(26.639837999999987, -38.279503999999996, 26.619321999999986, -38.297461999999996, 26.262380999999987, -38.28641399999999);
        ctx.lineTo(25.888666999999987, -38.274843999999995);
        ctx.lineTo(26.49044699999999, -38.95542499999999);
        ctx.bezierCurveTo(26.821425999999988, -39.32974499999999, 27.39993299999999, -39.93706299999999, 27.776015999999988, -40.305021999999994);
        ctx.lineTo(28.459803999999988, -40.97403599999999);
        ctx.lineTo(28.021223999999986, -40.31051599999999);
        ctx.bezierCurveTo(26.933467999999987, -38.664868999999996, 26.873516999999985, -37.21726099999999, 27.893119999999985, -37.21726099999999);
        ctx.bezierCurveTo(28.345669999999984, -37.21726099999999, 28.734117999999985, -37.427947999999994, 29.137979999999985, -37.89245199999999);
        ctx.bezierCurveTo(29.629172999999984, -38.45739799999999, 29.686095999999985, -38.680772999999995, 29.752776999999984, -40.305021999999994);
        ctx.bezierCurveTo(29.810206999999984, -41.70386299999999, 29.834466999999982, -41.841333999999996, 30.139762999999984, -42.49749799999999);
        ctx.bezierCurveTo(30.750074999999985, -43.80923599999999, 32.178100999999984, -44.936662999999996, 33.229264999999984, -44.936662999999996);
        ctx.bezierCurveTo(33.86884899999998, -44.936662999999996, 34.211680999999984, -44.602211, 34.305689999999984, -43.88654999999999);
        ctx.bezierCurveTo(34.38100999999998, -43.31314499999999, 34.557192999999984, -43.17308499999999, 34.85769599999998, -43.447714999999995);
        ctx.bezierCurveTo(34.96772199999998, -43.548266999999996, 35.05774299999998, -43.59627699999999, 35.05774299999998, -43.554404999999996);
        ctx.bezierCurveTo(35.05774299999998, -43.453945, 32.99603299999998, -41.220546, 32.94803799999998, -41.269012999999994);
        ctx.bezierCurveTo(32.927647999999984, -41.28960299999999, 33.074156999999985, -41.55587599999999, 33.273617999999985, -41.86072299999999);
        ctx.bezierCurveTo(33.62486699999999, -42.39755699999999, 33.93660399999998, -43.226690999999995, 33.93660399999998, -43.62408099999999);
        ctx.bezierCurveTo(33.93660399999998, -43.85018299999999, 33.75145699999998, -44.23446499999999, 33.59010099999998, -44.34326599999999);
        ctx.bezierCurveTo(33.174734999999984, -44.623343999999996, 32.30075499999998, -44.20498299999999, 31.886216999999984, -43.52764199999999);
        ctx.bezierCurveTo(31.673315999999986, -43.179767999999996, 31.643367999999985, -42.97559199999999, 31.587547999999984, -41.49142799999999);
        ctx.bezierCurveTo(31.530367999999985, -39.97125199999999, 31.503397999999983, -39.79507999999999, 31.243673999999984, -39.24552399999999);
        ctx.bezierCurveTo(30.443693999999983, -37.55282799999999, 28.350207999999984, -36.28029699999999, 27.307724999999984, -36.85304699999999);
        ctx.closePath();
        ctx.moveTo(24.667077999999986, -39.805623);
        ctx.bezierCurveTo(24.271736999999987, -40.266869, 23.948274999999985, -40.683716999999994, 23.948274999999985, -40.731952);
        ctx.bezierCurveTo(23.948274999999985, -40.853886, 24.089701999999985, -40.841513, 24.221899999999984, -40.708012);
        ctx.bezierCurveTo(24.455663999999985, -40.47194699999999, 24.810440999999983, -40.670452, 25.341192999999983, -41.334278);
        ctx.bezierCurveTo(26.213880999999983, -42.425773, 26.205749999999984, -42.351571, 25.536953999999984, -43.12084);
        ctx.lineTo(24.957349999999984, -43.78752);
        ctx.lineTo(24.325409999999984, -43.427932);
        ctx.bezierCurveTo(23.293250999999984, -42.840607999999996, 22.936789999999984, -42.424799, 23.138756999999984, -42.043706);
        ctx.bezierCurveTo(23.383071999999984, -41.582705, 23.058576999999985, -41.678357, 22.601279999999985, -42.202137);
        ctx.bezierCurveTo(21.987365999999984, -42.905311, 21.958976999999987, -43.029571, 22.419448999999986, -42.998032);
        ctx.bezierCurveTo(22.864274999999985, -42.967562, 23.267199999999985, -43.162361000000004, 27.721030999999986, -45.56112);
        ctx.bezierCurveTo(29.631237999999986, -46.589925, 31.209245999999986, -47.414516000000006, 31.227716999999984, -47.393544000000006);
        ctx.bezierCurveTo(31.246186999999985, -47.37257400000001, 30.206919999999982, -45.91960300000001, 28.918231999999986, -44.16472600000001);
        ctx.bezierCurveTo(26.044200999999987, -40.25099800000001, 25.549965999999984, -39.509586000000006, 25.608592999999985, -39.19987700000001);
        ctx.bezierCurveTo(25.690752999999983, -38.76586300000001, 25.395408999999987, -38.955878000000006, 24.667077999999986, -39.80562300000001);
        ctx.closePath();
        ctx.moveTo(27.506624999999985, -44.266479);
        ctx.bezierCurveTo(28.028721999999984, -44.980796999999995, 28.439237999999985, -45.580382, 28.418880999999985, -45.598889);
        ctx.bezierCurveTo(28.371270999999986, -45.642179, 25.482513999999984, -44.079285999999996, 25.479425999999986, -44.008571);
        ctx.bezierCurveTo(25.474525999999987, -43.896022, 26.415298999999987, -42.879057, 26.484422999999985, -42.922198);
        ctx.bezierCurveTo(26.524542999999987, -42.947238, 26.984528999999984, -43.552161, 27.506624999999985, -44.266479000000004);
        ctx.closePath();
        ctx.moveTo(21.400231999999985, -43.543355);
        ctx.bezierCurveTo(21.400231999999985, -43.569555, 22.438223999999984, -45.238575, 23.706879999999984, -47.25228);
        ctx.bezierCurveTo(24.975537999999982, -49.265986, 25.996028999999986, -50.929181, 25.974638999999982, -50.948268999999996);
        ctx.bezierCurveTo(25.91339899999998, -51.002928999999995, 20.786001999999982, -47.341362, 20.402261999999983, -46.968937999999994);
        ctx.bezierCurveTo(20.102526999999984, -46.67804099999999, 20.064542999999983, -46.58512399999999, 20.10794299999998, -46.248965999999996);
        ctx.bezierCurveTo(20.14063299999998, -45.995771, 20.11724299999998, -45.86411699999999, 20.040072999999982, -45.866254999999995);
        ctx.bezierCurveTo(19.911306999999983, -45.869854999999994, 19.00050299999998, -47.179255, 19.074682999999983, -47.254166);
        ctx.bezierCurveTo(19.099842999999982, -47.279576, 19.264646999999982, -47.245366, 19.44090299999998, -47.178216);
        ctx.bezierCurveTo(19.897764999999982, -47.004070999999996, 20.06147999999998, -47.098866, 23.50043499999998, -49.528808999999995);
        ctx.bezierCurveTo(26.58343199999998, -51.70723399999999, 26.98040599999998, -52.06923999999999, 26.87821999999998, -52.609058999999995);
        ctx.bezierCurveTo(26.84954999999998, -52.760498, 26.877913999999983, -52.861917999999996, 26.949039999999982, -52.861917999999996);
        ctx.bezierCurveTo(27.079705999999984, -52.861917999999996, 27.958453999999982, -51.653895, 27.955112999999983, -51.47886199999999);
        ctx.bezierCurveTo(27.953912999999982, -51.41871199999999, 27.183753999999983, -50.17498899999999, 26.243533999999983, -48.71502999999999);
        ctx.bezierCurveTo(25.30331299999998, -47.25506999999999, 24.551305999999983, -46.04313299999999, 24.572405999999983, -46.02183499999999);
        ctx.bezierCurveTo(24.626015999999982, -45.96772499999999, 28.29483199999998, -48.56855499999999, 28.651048999999983, -48.91319499999999);
        ctx.bezierCurveTo(28.87186799999998, -49.126834999999986, 28.942443999999984, -49.29016999999999, 28.942443999999984, -49.58756299999999);
        ctx.bezierCurveTo(28.942443999999984, -49.80340799999999, 28.976843999999986, -49.97834799999999, 29.018883999999986, -49.97631799999999);
        ctx.bezierCurveTo(29.138327999999987, -49.97051799999999, 29.953684999999986, -48.71221799999999, 29.897482999999987, -48.620383999999994);
        ctx.bezierCurveTo(29.869922999999986, -48.575343999999994, 29.761436999999987, -48.584934, 29.656408999999986, -48.641704);
        ctx.bezierCurveTo(29.551382999999987, -48.698463999999994, 29.356310999999987, -48.744907999999995, 29.222915999999987, -48.744907999999995);
        ctx.bezierCurveTo(28.94075499999999, -48.744907999999995, 28.640555999999986, -48.546133, 24.56238499999999, -45.658970999999994);
        ctx.bezierCurveTo(22.881781999999987, -44.469179, 21.482778999999987, -43.49571399999999, 21.453488999999987, -43.49571399999999);
        ctx.bezierCurveTo(21.424198999999987, -43.49571399999999, 21.40023899999999, -43.51715399999999, 21.40023899999999, -43.543353999999994);
        ctx.closePath();
        ctx.moveTo(17.274905999999984, -50.283744);
        ctx.bezierCurveTo(16.746608999999985, -51.347511, 16.662865999999983, -51.770739, 17.070732999999983, -51.315613);
        ctx.bezierCurveTo(17.170998999999984, -51.20373, 17.34781699999998, -51.112189, 17.46366199999998, -51.112189);
        ctx.bezierCurveTo(17.70854999999998, -51.112189, 24.93133699999998, -54.640976, 24.78634699999998, -54.689782);
        ctx.bezierCurveTo(24.732936999999982, -54.707762, 22.77965899999998, -54.239951, 20.445729999999983, -53.650204);
        ctx.bezierCurveTo(18.111800999999982, -53.060457, 16.204864999999984, -52.607096000000006, 16.208092999999984, -52.642735);
        ctx.bezierCurveTo(16.211292999999984, -52.678375, 17.749105999999983, -53.92973, 19.625393999999986, -55.423526);
        ctx.bezierCurveTo(21.501680999999987, -56.917322000000006, 23.018055999999987, -58.158473, 22.995115999999985, -58.18164);
        ctx.bezierCurveTo(22.972175999999987, -58.2048, 21.421432999999986, -57.465884, 19.549020999999986, -56.539592);
        ctx.bezierCurveTo(16.092716999999986, -54.82974, 15.612587999999985, -54.520103, 15.727782999999985, -54.075257);
        ctx.bezierCurveTo(15.753972999999984, -53.974124, 15.735282999999985, -53.866365, 15.686332999999985, -53.835791);
        ctx.bezierCurveTo(15.591422999999985, -53.776551, 14.830521999999986, -55.216334, 14.912815999999985, -55.299439);
        ctx.bezierCurveTo(14.939575999999985, -55.326469, 15.080651999999985, -55.269719, 15.226312999999985, -55.173339999999996);
        ctx.bezierCurveTo(15.408461999999986, -55.052817, 15.592393999999985, -55.018550999999995, 15.815412999999985, -55.063593999999995);
        ctx.bezierCurveTo(16.263542999999984, -55.154104, 23.026314999999986, -58.488004, 23.319136999999984, -58.762769999999996);
        ctx.bezierCurveTo(23.486873999999982, -58.920162999999995, 23.544275999999982, -59.068321999999995, 23.515152999999984, -59.268705);
        ctx.bezierCurveTo(23.437232999999985, -59.804849999999995, 23.698057999999985, -59.553991999999994, 24.127315999999983, -58.679942999999994);
        ctx.lineTo(24.555627999999984, -57.807815999999995);
        ctx.lineTo(22.001672999999982, -55.774992999999995);
        ctx.bezierCurveTo(20.59699799999998, -54.656941999999994, 19.491107999999983, -53.727565999999996, 19.54413999999998, -53.709714999999996);
        ctx.bezierCurveTo(19.59716999999998, -53.69186499999999, 21.00026999999998, -54.028789999999994, 22.66213799999998, -54.45844099999999);
        ctx.bezierCurveTo(24.32400399999998, -54.88809199999999, 25.71769999999998, -55.218411999999994, 25.75923899999998, -55.192485999999995);
        ctx.bezierCurveTo(25.89155499999998, -55.109905999999995, 26.639393999999978, -53.48672499999999, 26.57505799999998, -53.42175399999999);
        ctx.bezierCurveTo(26.54109799999998, -53.38745399999999, 26.41377799999998, -53.459903999999995, 26.29213499999998, -53.582739999999994);
        ctx.bezierCurveTo(26.12702899999998, -53.749472, 26.00215599999998, -53.78890799999999, 25.79951299999998, -53.738319);
        ctx.bezierCurveTo(25.34689299999998, -53.625319999999995, 18.41089199999998, -50.183145999999994, 18.15648199999998, -49.945260999999995);
        ctx.bezierCurveTo(17.97950699999998, -49.779782, 17.93365399999998, -49.651748999999995, 17.97557099999998, -49.440104999999996);
        ctx.bezierCurveTo(18.09008399999998, -48.861898, 17.81883599999998, -49.188495999999994, 17.274904999999983, -50.283744);
        ctx.closePath();
        ctx.moveTo(101.80069999999999, -57.809317);
        ctx.bezierCurveTo(99.80557599999999, -58.059082, 98.094732, -58.672356, 94.45603799999999, -60.442103);
        ctx.bezierCurveTo(91.65082199999999, -61.806472, 90.27590799999999, -62.33017, 88.833585, -62.583667000000005);
        ctx.bezierCurveTo(86.119208, -63.06073500000001, 83.435453, -62.42609100000001, 80.441813, -60.599213000000006);
        ctx.lineTo(79.400536, -59.96377100000001);
        ctx.lineTo(75.802519, -59.96377100000001);
        ctx.lineTo(72.204504, -59.96377100000001);
        ctx.lineTo(65.32664199999999, -71.408118);
        ctx.lineTo(58.44877999999999, -82.852463);
        ctx.lineTo(58.419259999999994, -83.651431);
        ctx.lineTo(58.38972999999999, -84.450398);
        ctx.lineTo(57.80195499999999, -84.48093800000001);
        ctx.lineTo(57.21418099999999, -84.51147800000001);
        ctx.lineTo(59.84443499999999, -88.245562);
        ctx.lineTo(62.47468999999999, -91.979646);
        ctx.lineTo(62.47468999999999, -92.902935);
        ctx.lineTo(62.47468999999999, -93.826224);
        ctx.lineTo(62.88237599999999, -93.826224);
        ctx.lineTo(63.29006299999999, -93.826224);
        ctx.lineTo(63.29006299999999, -92.942944);
        ctx.lineTo(63.29006299999999, -92.059665);
        ctx.lineTo(66.043928, -88.28557099999999);
        ctx.lineTo(68.79779199999999, -84.511478);
        ctx.lineTo(68.18428499999999, -84.48083799999999);
        ctx.lineTo(67.570776, -84.45019799999999);
        ctx.lineTo(67.570776, -79.051527);
        ctx.lineTo(67.570776, -73.652857);
        ctx.lineTo(68.233267, -73.652857);
        ctx.lineTo(68.895759, -73.652857);
        ctx.lineTo(68.895759, -75.145275);
        ctx.lineTo(68.895759, -76.637692);
        ctx.lineTo(68.53903199999999, -76.637692);
        ctx.bezierCurveTo(68.34283299999998, -76.637692, 68.182306, -76.653772, 68.182306, -76.673422);
        ctx.bezierCurveTo(68.182306, -76.693072, 68.98219399999999, -78.41836, 69.959835, -80.507392);
        ctx.lineTo(71.737363, -84.305632);
        ctx.lineTo(72.354995, -84.33627200000001);
        ctx.lineTo(72.972628, -84.36691200000001);
        ctx.lineTo(72.972628, -87.295375);
        ctx.lineTo(72.972628, -90.223836);
        ctx.lineTo(72.717823, -90.223836);
        ctx.lineTo(72.463019, -90.223836);
        ctx.lineTo(72.463019, -92.556821);
        ctx.lineTo(72.463019, -94.889805);
        ctx.lineTo(73.14549600000001, -96.18494);
        ctx.lineTo(73.827972, -97.480074);
        ctx.lineTo(74.70808000000001, -104.78778);
        ctx.bezierCurveTo(75.44816900000001, -110.93288, 75.566601, -112.12133, 75.45250700000001, -112.25797);
        ctx.bezierCurveTo(75.10191200000001, -112.67785, 75.47150700000002, -113.36556, 75.97867800000002, -113.23702);
        ctx.bezierCurveTo(76.36859200000002, -113.13822, 76.52508700000001, -112.71864000000001, 76.31193200000001, -112.34358);
        ctx.bezierCurveTo(76.15103600000002, -112.06048, 76.18386100000001, -111.7211, 77.04159500000002, -104.79949);
        ctx.lineTo(77.93973300000002, -97.551831);
        ctx.lineTo(78.66671500000002, -96.16083800000001);
        ctx.lineTo(79.39369700000003, -94.76984500000002);
        ctx.lineTo(79.39369700000003, -92.49684100000002);
        ctx.lineTo(79.39369700000003, -90.22383600000002);
        ctx.lineTo(79.08793, -90.22383600000002);
        ctx.lineTo(78.782165, -90.22383600000002);
        ctx.lineTo(78.782165, -87.29046300000002);
        ctx.lineTo(78.782165, -84.35709000000001);
        ctx.lineTo(79.954265, -84.35709000000001);
        ctx.lineTo(81.126365, -84.35709000000001);
        ctx.lineTo(81.126365, -87.29046300000002);
        ctx.lineTo(81.126365, -90.22383600000002);
        ctx.lineTo(80.87156100000001, -90.22383600000002);
        ctx.lineTo(80.61675600000001, -90.22383600000002);
        ctx.lineTo(80.61675600000001, -92.58765200000002);
        ctx.lineTo(80.61675600000001, -94.95146800000002);
        ctx.lineTo(81.28761300000001, -96.21577100000002);
        ctx.lineTo(81.95847, -97.48007400000002);
        ctx.lineTo(82.834299, -104.77281000000002);
        ctx.bezierCurveTo(83.531432, -110.57761000000002, 83.685689, -112.10506000000002, 83.590346, -112.25924000000002);
        ctx.bezierCurveTo(83.181873, -112.91975000000002, 83.857246, -113.60911000000002, 84.38786, -113.07327000000002);
        ctx.bezierCurveTo(84.632839, -112.82588000000003, 84.649654, -112.52894000000002, 84.43117000000001, -112.30831000000002);
        ctx.bezierCurveTo(84.28508000000001, -112.16078000000002, 84.34919000000001, -111.48828000000002, 85.14395300000001, -104.83117000000001);
        ctx.lineTo(86.01726400000001, -97.51613600000002);
        ctx.lineTo(86.73138600000001, -96.22463700000002);
        ctx.lineTo(87.44550700000002, -94.93313900000001);
        ctx.lineTo(87.44550700000002, -92.57848700000001);
        ctx.lineTo(87.44550700000002, -90.223836);
        ctx.lineTo(87.19070300000003, -90.223836);
        ctx.lineTo(86.93589900000003, -90.223836);
        ctx.lineTo(86.93589900000003, -87.290463);
        ctx.lineTo(86.93589900000003, -84.35709);
        ctx.lineTo(90.06999200000004, -84.356781);
        ctx.lineTo(93.20408500000005, -84.356472);
        ctx.lineTo(94.65647000000006, -80.567238);
        ctx.bezierCurveTo(95.45528100000006, -78.48322300000001, 96.10885400000005, -76.746482, 96.10885400000005, -76.707877);
        ctx.bezierCurveTo(96.10885400000005, -76.669277, 95.94832800000005, -76.637687, 95.75212800000006, -76.637687);
        ctx.lineTo(95.39540200000006, -76.637687);
        ctx.lineTo(95.39540200000006, -75.14527);
        ctx.lineTo(95.39540200000006, -73.652852);
        ctx.lineTo(96.51654100000006, -73.652852);
        ctx.lineTo(97.63768000000006, -73.652852);
        ctx.lineTo(97.63768000000006, -75.14527);
        ctx.lineTo(97.63768000000006, -76.637687);
        ctx.lineTo(97.27005000000005, -76.637687);
        ctx.bezierCurveTo(96.98374200000005, -76.637687, 96.91550900000006, -76.672137, 96.96159200000005, -76.793408);
        ctx.bezierCurveTo(96.99413200000005, -76.879058, 97.55479100000005, -78.291705, 98.20749100000005, -79.932632);
        ctx.lineTo(99.39421700000004, -82.916135);
        ctx.lineTo(100.29958000000003, -82.916135);
        ctx.lineTo(101.20495000000004, -82.916135);
        ctx.lineTo(101.20495000000004, -83.693186);
        ctx.bezierCurveTo(101.20495000000004, -84.150821, 101.14715000000004, -84.584486, 101.06434000000004, -84.748171);
        ctx.bezierCurveTo(100.73923000000005, -85.390795, 100.75356000000005, -85.671032, 101.14424000000004, -86.310164);
        ctx.bezierCurveTo(101.53489000000003, -86.949302, 101.58067000000004, -87.236745, 101.39269000000004, -87.870342);
        ctx.bezierCurveTo(101.30299000000005, -88.172714, 101.30329000000005, -88.364812, 101.39369000000005, -88.67040999999999);
        ctx.bezierCurveTo(101.51628000000005, -89.08363399999999, 102.11047000000005, -89.70920899999999, 102.38036000000005, -89.70920899999999);
        ctx.bezierCurveTo(102.60482000000005, -89.70920899999999, 102.60146000000006, -93.12332599999999, 102.37636000000005, -93.31159699999999);
        ctx.bezierCurveTo(102.17714000000005, -93.47856399999999, 102.18088000000004, -93.87142999999999, 102.38336000000005, -94.076185);
        ctx.bezierCurveTo(102.57290000000005, -94.267591, 103.04887000000005, -94.289287, 103.22203000000005, -94.114415);
        ctx.bezierCurveTo(103.39288000000005, -93.94188399999999, 103.37472000000005, -93.465195, 103.19143000000004, -93.31159699999999);
        ctx.bezierCurveTo(103.06693000000004, -93.207259, 103.03854000000004, -92.87083899999999, 103.03854000000004, -91.49989199999999);
        ctx.lineTo(103.03854000000004, -89.816318);
        ctx.lineTo(103.45023000000003, -89.604224);
        ctx.bezierCurveTo(103.67666000000003, -89.487572, 103.95440000000004, -89.24347, 104.06743000000003, -89.061774);
        ctx.bezierCurveTo(104.27451000000003, -88.728913, 104.28050000000003, -88.446698, 104.10393000000003, -87.341926);
        ctx.bezierCurveTo(104.05673000000003, -87.046482, 104.11193000000003, -86.880489, 104.40878000000004, -86.419068);
        ctx.bezierCurveTo(104.82457000000004, -85.773586, 104.85711000000003, -85.433123, 104.56511000000003, -84.783283);
        ctx.bezierCurveTo(104.42674000000004, -84.475341, 104.36351000000003, -84.11215, 104.36351000000003, -83.625373);
        ctx.lineTo(104.36351000000003, -82.916135);
        ctx.lineTo(107.95625000000004, -82.914335);
        ctx.lineTo(111.54899000000005, -82.91253499999999);
        ctx.lineTo(112.72109000000005, -79.75292599999999);
        ctx.lineTo(113.89319000000005, -76.59331599999999);
        ctx.lineTo(113.87879000000005, -74.32542699999999);
        ctx.bezierCurveTo(113.85079000000005, -69.91418699999998, 113.28197000000006, -65.68066599999999, 112.14009000000006, -61.384857999999994);
        ctx.lineTo(111.76545000000006, -59.97546299999999);
        ctx.lineTo(110.76792000000006, -59.50791199999999);
        ctx.bezierCurveTo(109.42365000000007, -58.87783799999999, 107.60963000000007, -58.27745399999999, 106.24905000000007, -58.01230299999999);
        ctx.bezierCurveTo(104.95626000000007, -57.76036399999999, 102.92948000000007, -57.66791699999999, 101.79968000000007, -57.80935399999999);
        ctx.closePath();
        ctx.moveTo(13.496234, -59.42154);
        ctx.bezierCurveTo(13.345899999999999, -59.917899, 13.163883, -60.520912, 13.091750999999999, -60.76157);
        ctx.bezierCurveTo(12.949291999999998, -61.236865, 13.079490999999999, -61.488073, 13.243078999999998, -61.053554999999996);
        ctx.bezierCurveTo(13.405322999999997, -60.622617999999996, 13.730449999999998, -60.627562, 15.243521999999999, -61.083974999999995);
        ctx.bezierCurveTo(16.46963, -61.453829999999996, 16.784352, -61.598566, 17.871710999999998, -62.29265099999999);
        ctx.bezierCurveTo(20.799895999999997, -64.16177099999999, 21.589259999999996, -64.722507, 21.711364999999997, -65.020197);
        ctx.bezierCurveTo(21.778074999999998, -65.182825, 21.863656, -65.315885, 21.901555, -65.315885);
        ctx.bezierCurveTo(21.996374999999997, -65.315885, 22.623081999999997, -63.13445299999999, 22.558553999999997, -63.029014);
        ctx.bezierCurveTo(22.529994, -62.982353999999994, 22.422216999999996, -63.049383999999996, 22.319043999999998, -63.177971);
        ctx.bezierCurveTo(22.063868, -63.496, 21.943982, -63.442351, 19.720332999999997, -62.015047);
        ctx.lineTo(17.887550999999995, -60.838631);
        ctx.lineTo(20.058907999999995, -60.810831);
        ctx.bezierCurveTo(22.467507999999995, -60.779991, 22.751898999999995, -60.833511, 22.808424999999996, -61.328288);
        ctx.bezierCurveTo(22.826164999999996, -61.483543, 22.895534999999995, -61.610572, 22.962580999999997, -61.610572);
        ctx.bezierCurveTo(23.092221999999996, -61.610572, 23.506082999999997, -60.306315, 23.407902999999997, -60.207167999999996);
        ctx.bezierCurveTo(23.376012999999997, -60.17496799999999, 23.245025999999996, -60.222818, 23.116813999999998, -60.313506);
        ctx.bezierCurveTo(22.916742999999997, -60.455020999999995, 22.486928, -60.478393, 20.084442, -60.478393);
        ctx.lineTo(17.285182, -60.478393);
        ctx.lineTo(15.906498, -60.057933999999996);
        ctx.bezierCurveTo(15.148221999999999, -59.826682, 14.403293999999999, -59.572449999999996, 14.251102999999999, -59.492973);
        ctx.bezierCurveTo(13.953228, -59.33742, 13.816909999999998, -59.059542, 13.913621999999998, -58.805035);
        ctx.bezierCurveTo(13.946741999999999, -58.717875, 13.927881999999999, -58.617872999999996, 13.871701999999999, -58.582812);
        ctx.bezierCurveTo(13.812641999999999, -58.545952, 13.654295, -58.899654, 13.496231, -59.421535);
        ctx.closePath();
        ctx.moveTo(16.032241, -64.551834);
        ctx.bezierCurveTo(15.906431999999999, -64.882917, 15.526967999999998, -64.907965, 14.090947, -64.679976);
        ctx.lineTo(12.698296, -64.458872);
        ctx.lineTo(12.368746, -64.843859);
        ctx.bezierCurveTo(11.672244, -65.657527, 11.421816999999999, -66.776202, 11.770203, -67.51759799999999);
        ctx.bezierCurveTo(12.218518, -68.471656, 13.582917, -69.372777, 15.210402, -69.78968699999999);
        ctx.bezierCurveTo(18.047773, -70.516534, 20.846421, -69.98955299999999, 21.561125, -68.59385699999999);
        ctx.bezierCurveTo(21.79061, -68.14571299999999, 21.765671, -67.38139499999998, 21.504705, -66.86482899999999);
        ctx.bezierCurveTo(21.237808, -66.33651599999999, 21.278279, -66.19268299999999, 21.722713000000002, -66.09002899999999);
        ctx.bezierCurveTo(22.009797000000002, -66.02371899999999, 21.848553000000003, -65.97416099999998, 20.686775, -65.77163499999999);
        ctx.bezierCurveTo(18.435974, -65.37926699999998, 18.508972, -65.379483, 19.310832, -65.767535);
        ctx.bezierCurveTo(20.348779, -66.26986799999999, 20.875996, -66.697272, 21.106332000000002, -67.223112);
        ctx.bezierCurveTo(21.286398000000002, -67.634191, 21.290914, -67.707627, 21.156152000000002, -68.033332);
        ctx.bezierCurveTo(21.056282000000003, -68.274708, 20.864196000000003, -68.468993, 20.567082000000003, -68.629147);
        ctx.bezierCurveTo(20.156716000000003, -68.850346, 20.013347000000003, -68.866145, 18.495457000000002, -68.857438);
        ctx.bezierCurveTo(17.225804000000004, -68.850138, 16.627741, -68.797398, 15.794531000000003, -68.619196);
        ctx.bezierCurveTo(14.449284000000002, -68.331475, 13.335307000000004, -67.95737, 12.867096000000004, -67.63608);
        ctx.bezierCurveTo(12.129280000000003, -67.12978500000001, 11.915862000000004, -66.39669, 12.355891000000003, -65.880088);
        ctx.lineTo(12.586433000000003, -65.609429);
        ctx.lineTo(13.907778000000004, -65.82630800000001);
        ctx.bezierCurveTo(15.294210000000003, -66.05387000000002, 15.692610000000004, -66.21615400000002, 15.692610000000004, -66.55334300000001);
        ctx.bezierCurveTo(15.692610000000004, -66.66525600000001, 15.737600000000004, -66.75682100000002, 15.792590000000004, -66.75682100000002);
        ctx.bezierCurveTo(15.902881000000004, -66.75682100000002, 15.942757000000004, -66.61058800000002, 16.101317000000005, -65.62464200000002);
        ctx.bezierCurveTo(16.160487000000007, -65.25668400000002, 16.233979000000005, -64.82825700000002, 16.264622000000006, -64.67258200000002);
        ctx.bezierCurveTo(16.324742000000008, -64.36714100000002, 16.139076000000006, -64.27064700000003, 16.032236000000005, -64.55181000000002);
        ctx.closePath();
        ctx.moveTo(19.973326999999998, -79.479322);
        ctx.bezierCurveTo(18.360999999999997, -80.4369, 17.002785999999997, -81.13223599999999, 16.304145, -81.357755);
        ctx.bezierCurveTo(14.434657999999999, -81.961219, 13.042649999999998, -81.78711799999999, 13.042649999999998, -80.949831);
        ctx.bezierCurveTo(13.042649999999998, -80.736368, 13.141159999999998, -80.58940700000001, 13.424855999999998, -80.379641);
        ctx.bezierCurveTo(14.005163999999999, -79.95056100000001, 14.021711999999999, -79.927773, 13.681424999999999, -80.02632700000001);
        ctx.bezierCurveTo(12.409180999999998, -80.39479500000002, 11.473054999999999, -81.114129, 11.473054999999999, -81.72327500000002);
        ctx.bezierCurveTo(11.473054999999999, -82.32760500000002, 11.916678999999998, -82.65462700000002, 12.968544999999999, -82.82569300000002);
        ctx.bezierCurveTo(14.283318999999999, -83.03951700000002, 16.139899, -82.37507400000001, 18.285197, -80.92294200000002);
        ctx.bezierCurveTo(18.842234, -80.54588900000002, 19.334335, -80.27409100000003, 19.378754, -80.31894700000002);
        ctx.bezierCurveTo(19.423174, -80.36380700000002, 19.471924, -80.74383600000002, 19.487097000000002, -81.16346400000002);
        ctx.lineTo(19.514677000000002, -81.92642500000002);
        ctx.lineTo(19.106990000000003, -82.17195200000002);
        ctx.bezierCurveTo(18.648177000000004, -82.44826700000002, 18.593857000000003, -82.45400800000002, 20.337874000000003, -82.04186100000003);
        ctx.lineTo(21.466837, -81.77506400000003);
        ctx.lineTo(21.388697, -81.18768600000003);
        ctx.bezierCurveTo(21.154015, -79.42366900000003, 21.066994, -78.90214700000003, 21.007499, -78.90315100000002);
        ctx.bezierCurveTo(20.971249, -78.90376300000003, 20.505869, -79.16304000000002, 19.973328, -79.47932200000002);
        ctx.closePath();
        ctx.moveTo(20.381013999999997, -83.049341);
        ctx.bezierCurveTo(20.215503999999996, -83.133901, 20.126209999999997, -83.266337, 20.126209999999997, -83.427254);
        ctx.bezierCurveTo(20.126209999999997, -83.62511500000001, 20.239186999999998, -83.73125, 20.687406999999997, -83.95446700000001);
        ctx.bezierCurveTo(20.996065999999995, -84.10818200000001, 21.336096999999995, -84.33157700000001, 21.443032999999996, -84.45090400000001);
        ctx.bezierCurveTo(21.613913999999998, -84.641585, 21.620928999999997, -84.699054, 21.500952999999996, -84.92544500000001);
        ctx.bezierCurveTo(21.311269999999997, -85.28336100000001, 20.411596999999997, -85.70250000000001, 19.691478999999994, -85.76844100000001);
        ctx.bezierCurveTo(18.446546999999995, -85.882439, 17.296987999999995, -85.236438, 17.007309999999993, -84.260056);
        ctx.bezierCurveTo(16.939169999999994, -84.030376, 16.859782999999993, -83.84245600000001, 16.830901999999995, -83.84245600000001);
        ctx.bezierCurveTo(16.739151999999994, -83.84245600000001, 12.485216999999995, -85.70733800000001, 12.411310999999994, -85.77995800000001);
        ctx.bezierCurveTo(12.339080999999995, -85.85092800000001, 12.761083999999995, -87.81236200000001, 12.872873999999994, -87.92525300000001);
        ctx.bezierCurveTo(12.982401999999993, -88.03586000000001, 14.469422999999994, -87.30013200000002, 14.467939999999995, -87.13606800000001);
        ctx.bezierCurveTo(14.466639999999995, -86.98979200000001, 14.215124999999995, -85.83283300000001, 14.107597999999996, -85.47836400000001);
        ctx.bezierCurveTo(14.036837999999996, -85.24511700000001, 14.961676999999996, -84.87690300000001, 15.082212999999996, -85.09033200000002);
        ctx.bezierCurveTo(15.623043999999997, -86.04795300000002, 15.995538999999996, -86.36490400000002, 16.840177999999995, -86.58615800000001);
        ctx.bezierCurveTo(17.570430999999996, -86.777448, 18.277554999999996, -86.75906400000001, 19.182841999999994, -86.525248);
        ctx.bezierCurveTo(21.053420999999993, -86.042123, 22.223584999999993, -84.982563, 22.080076999999992, -83.90186);
        ctx.bezierCurveTo(21.973778999999993, -83.101364, 21.118837999999993, -82.672387, 20.38101799999999, -83.049338);
        ctx.closePath();
        ctx.moveTo(20.431973999999997, -87.390665);
        ctx.bezierCurveTo(18.420772999999997, -87.714541, 15.862745999999998, -88.677059, 14.495684999999996, -89.624334);
        ctx.bezierCurveTo(13.689024999999996, -90.18329200000001, 13.327314999999997, -91.01560400000001, 13.730806999999997, -91.384355);
        ctx.bezierCurveTo(14.427240999999997, -92.020825, 16.204673999999997, -91.913605, 18.801225999999996, -91.078493);
        ctx.bezierCurveTo(21.432915999999995, -90.23208, 23.234821999999994, -89.01564499999999, 23.234821999999994, -88.085448);
        ctx.bezierCurveTo(23.234821999999994, -87.770756, 22.803207999999994, -87.454453, 22.221868999999995, -87.343119);
        ctx.bezierCurveTo(21.573743999999994, -87.218994, 21.483054999999993, -87.221402, 20.431973999999993, -87.390669);
        ctx.closePath();
        ctx.moveTo(22.607839, -87.947649);
        ctx.bezierCurveTo(22.825029999999998, -88.08664399999999, 22.703118999999997, -88.394789, 22.330659999999998, -88.648262);
        ctx.bezierCurveTo(21.945664999999998, -88.91026600000001, 15.831247999999999, -90.968832, 14.871924999999997, -91.159425);
        ctx.bezierCurveTo(14.357032999999998, -91.261721, 14.228282999999998, -91.258285, 14.115777999999997, -91.139245);
        ctx.bezierCurveTo(13.894828999999998, -90.905455, 14.100957999999997, -90.585103, 14.635649999999996, -90.331293);
        ctx.bezierCurveTo(15.209251999999996, -90.05901300000001, 19.096393999999997, -88.723512, 20.7887, -88.217297);
        ctx.bezierCurveTo(22.005437999999998, -87.853336, 22.374892, -87.798574, 22.607839, -87.947653);
        ctx.closePath();
        ctx.moveTo(22.751327, -92.279277);
        ctx.bezierCurveTo(22.257517, -92.50563799999999, 21.807917, -92.920074, 21.807917, -93.14890199999999);
        ctx.bezierCurveTo(21.807917, -93.23439199999999, 21.906407, -93.35757799999999, 22.026791, -93.42263799999999);
        ctx.bezierCurveTo(22.336875, -93.59022399999999, 22.91046, -93.396998, 23.447214, -92.944138);
        ctx.bezierCurveTo(23.773462, -92.668882, 23.954901, -92.588022, 24.193545999999998, -92.61152399999999);
        ctx.bezierCurveTo(24.450722, -92.63685399999999, 24.514688999999997, -92.69371399999999, 24.540556, -92.91999499999999);
        ctx.bezierCurveTo(24.566176, -93.14412399999999, 24.497656, -93.24720199999999, 24.18383, -93.45660299999999);
        ctx.bezierCurveTo(23.421407000000002, -93.96533399999998, 17.023658, -97.01690299999999, 16.719502, -97.01690299999999);
        ctx.bezierCurveTo(16.524448999999997, -97.01690299999999, 16.362309, -96.93715299999998, 16.261307, -96.79153099999999);
        ctx.bezierCurveTo(16.175327, -96.667577, 16.074215, -96.597235, 16.036603, -96.635218);
        ctx.bezierCurveTo(15.957113, -96.715498, 17.030166, -99.07383, 17.146617, -99.074777);
        ctx.bezierCurveTo(17.189546999999997, -99.075085, 17.214537, -98.941075, 17.202157, -98.776887);
        ctx.bezierCurveTo(17.189767, -98.612699, 17.246367, -98.39596900000001, 17.327939999999998, -98.295265);
        ctx.bezierCurveTo(17.409509999999997, -98.19456, 18.865993, -97.426328, 20.564569999999996, -96.588082);
        ctx.bezierCurveTo(22.263146999999996, -95.749836, 23.859555999999998, -94.92041, 24.112145999999996, -94.744912);
        ctx.bezierCurveTo(25.274943999999994, -93.937009, 25.547877999999997, -92.693631, 24.663769999999996, -92.231939);
        ctx.bezierCurveTo(24.244591999999997, -92.01303899999999, 23.280051999999998, -92.036915, 22.751330999999997, -92.279279);
        ctx.closePath();
        ctx.moveTo(25.538495, -94.98289999999999);
        ctx.bezierCurveTo(25.486585, -95.24502799999999, 24.749464, -96.05008199999999, 22.085897000000003, -98.75370799999999);
        ctx.bezierCurveTo(20.223271000000004, -100.64434999999999, 18.768102000000003, -102.16819999999998, 18.852187000000004, -102.14003999999998);
        ctx.bezierCurveTo(18.936277000000004, -102.11193999999999, 20.816729000000006, -101.45972999999998, 23.030978000000005, -100.69079999999998);
        ctx.bezierCurveTo(27.675492000000006, -99.07792999999998, 27.846843000000003, -99.02688899999998, 28.120453000000005, -99.17476299999998);
        ctx.bezierCurveTo(28.520183000000007, -99.39079899999999, 28.438637000000003, -99.06325799999999, 27.853089000000004, -98.10084799999998);
        ctx.bezierCurveTo(27.245595000000005, -97.10236999999998, 27.046972000000004, -96.90504299999998, 27.150529000000006, -97.40287299999999);
        ctx.bezierCurveTo(27.246959000000007, -97.86642099999999, 27.131849000000006, -97.95557399999998, 25.793594000000006, -98.45386399999998);
        ctx.lineTo(24.976667000000006, -98.75803999999998);
        ctx.lineTo(24.498737000000006, -97.98368099999998);
        ctx.lineTo(24.020807000000005, -97.20932199999997);
        ctx.lineTo(24.468669000000006, -96.74465899999997);
        ctx.bezierCurveTo(24.714992000000006, -96.48909499999996, 25.114339000000005, -96.16179399999997, 25.356105000000007, -96.01732499999997);
        ctx.bezierCurveTo(25.752629000000006, -95.78037899999997, 25.822505000000007, -95.76825999999997, 26.069557000000007, -95.89357999999997);
        ctx.bezierCurveTo(26.220190000000006, -95.96998999999997, 26.377833000000006, -96.04943199999997, 26.419876000000006, -96.07011799999997);
        ctx.bezierCurveTo(26.461916000000006, -96.09080799999997, 26.496316000000007, -96.05729799999996, 26.496316000000007, -95.99566799999997);
        ctx.bezierCurveTo(26.496316000000007, -95.85478599999996, 25.75513400000001, -94.64962099999997, 25.668491000000007, -94.64962099999997);
        ctx.bezierCurveTo(25.633301000000007, -94.64962099999997, 25.574801000000008, -94.79959699999996, 25.538494000000007, -94.98290099999997);
        ctx.closePath();
        ctx.moveTo(24.092859, -98.26551099999999);
        ctx.bezierCurveTo(24.297597, -98.61259299999999, 24.452019, -98.90642499999998, 24.436016000000002, -98.918472);
        ctx.bezierCurveTo(24.379306000000003, -98.96116199999999, 21.38409, -100.00174, 21.317916000000004, -100.00174);
        ctx.bezierCurveTo(21.280936000000004, -100.00174, 21.776621000000002, -99.4691, 22.419448000000003, -98.818097);
        ctx.bezierCurveTo(23.062274000000002, -98.16709399999999, 23.618009000000004, -97.63445499999999, 23.654414000000003, -97.63445499999999);
        ctx.bezierCurveTo(23.690814000000003, -97.63445499999999, 23.888120000000004, -97.91843099999998, 24.092859000000004, -98.26551099999999);
        ctx.closePath();
        ctx.moveTo(28.534752, -99.56945199999998);
        ctx.bezierCurveTo(28.534752, -99.61474199999998, 28.586432000000002, -99.70398099999998, 28.649595, -99.76776699999998);
        ctx.bezierCurveTo(28.944902000000003, -100.06597999999998, 28.619275000000002, -100.42536999999997, 26.264958, -102.39965999999998);
        ctx.bezierCurveTo(21.708038000000002, -106.22100999999998, 21.90635, -106.08348999999998, 21.494816, -105.70738999999999);
        ctx.bezierCurveTo(21.388691, -105.61039, 21.29382, -105.5867, 21.256413, -105.64778999999999);
        ctx.bezierCurveTo(21.192542999999997, -105.75214999999999, 22.708969999999997, -107.70718999999998, 22.860713999999998, -107.71612999999999);
        ctx.bezierCurveTo(22.907214, -107.71912999999999, 22.915253999999997, -107.58319999999999, 22.878594, -107.41465);
        ctx.bezierCurveTo(22.841934, -107.24609, 22.839284, -107.02118999999999, 22.872694, -106.91487);
        ctx.bezierCurveTo(22.927694, -106.73988, 25.769347, -104.25925, 25.820788, -104.34132);
        ctx.bezierCurveTo(25.832758000000002, -104.36041999999999, 26.084844, -104.66427, 26.380982, -105.01655);
        ctx.bezierCurveTo(26.677119, -105.36883999999999, 26.893327, -105.69968999999999, 26.861444, -105.75179);
        ctx.bezierCurveTo(26.829563999999998, -105.80389, 26.18149, -106.36093, 25.421287999999997, -106.98966);
        ctx.bezierCurveTo(24.370319, -107.85887, 23.968593999999996, -108.13281, 23.744888999999997, -108.13281);
        ctx.bezierCurveTo(23.583074999999997, -108.13281, 23.422334999999997, -108.08651, 23.387689999999996, -108.02989000000001);
        ctx.bezierCurveTo(23.309139999999996, -107.90154000000001, 23.132885999999996, -107.89473000000001, 23.132885999999996, -108.01989);
        ctx.bezierCurveTo(23.132885999999996, -108.15842, 24.651375999999996, -109.98532, 24.766519999999996, -109.98532);
        ctx.bezierCurveTo(24.899563999999998, -109.98532, 24.891779999999997, -109.84712, 24.750709999999998, -109.70466);
        ctx.bezierCurveTo(24.452378, -109.40339, 24.787399999999998, -109.05203, 27.694301999999997, -106.6175);
        ctx.bezierCurveTo(31.160648999999996, -103.71443000000001, 31.301745999999998, -103.60395000000001, 31.543021999999997, -103.60395000000001);
        ctx.bezierCurveTo(31.645431, -103.60395000000001, 31.808540999999998, -103.67645000000002, 31.905488999999996, -103.76504000000001);
        ctx.bezierCurveTo(32.009460999999995, -103.86004000000001, 32.106871999999996, -103.88510000000001, 32.142987, -103.82604000000002);
        ctx.bezierCurveTo(32.211227, -103.71454000000001, 30.715456999999997, -101.85417000000002, 30.557577, -101.85417000000002);
        ctx.bezierCurveTo(30.502536999999997, -101.85417000000002, 30.487676999999998, -101.95017000000003, 30.524547, -102.06744000000002);
        ctx.bezierCurveTo(30.665992999999997, -102.51749000000002, 30.464136999999997, -102.77269000000003, 28.988822999999996, -104.00896000000002);
        ctx.bezierCurveTo(28.173808999999995, -104.69192000000001, 27.465118999999998, -105.25070000000002, 27.413955999999995, -105.25070000000002);
        ctx.bezierCurveTo(27.321495999999996, -105.25070000000002, 26.288714999999996, -104.01536000000003, 26.296570999999997, -103.91416000000002);
        ctx.bezierCurveTo(26.300370999999995, -103.86536000000002, 26.609544999999997, -103.60690000000002, 28.668260999999998, -101.93136000000003);
        ctx.bezierCurveTo(29.374458999999998, -101.35660000000003, 29.853448999999998, -101.18241000000003, 30.012603999999996, -101.44246000000003);
        ctx.bezierCurveTo(30.086193999999995, -101.56270000000002, 30.267407999999996, -101.58083000000002, 30.267407999999996, -101.46796000000002);
        ctx.bezierCurveTo(30.267407999999996, -101.42536000000003, 29.920452999999995, -100.96221000000001, 29.496397999999996, -100.43871000000001);
        ctx.bezierCurveTo(28.796892999999997, -99.57515600000002, 28.534738999999995, -99.33812900000001, 28.534738999999995, -99.56922200000001);
        ctx.closePath();
        ctx.moveTo(32.407777, -104.11267999999998);
        ctx.bezierCurveTo(32.407777, -104.17417999999998, 32.464347000000004, -104.31594999999999, 32.533497000000004, -104.42775999999998);
        ctx.bezierCurveTo(32.63693000000001, -104.59501999999998, 32.626727, -104.69055999999998, 32.475967000000004, -104.96671999999998);
        ctx.bezierCurveTo(32.279287000000004, -105.32699999999998, 27.072313000000005, -111.08110999999998, 26.779196000000006, -111.26209999999998);
        ctx.bezierCurveTo(26.654720000000005, -111.33899999999997, 26.513567000000005, -111.33639999999997, 26.295508000000005, -111.25309999999998);
        ctx.bezierCurveTo(26.126154000000007, -111.18849999999998, 25.966477000000005, -111.17019999999998, 25.940671000000005, -111.21239999999997);
        ctx.bezierCurveTo(25.872981000000006, -111.32299999999998, 27.940749000000004, -113.17928999999998, 28.392144000000005, -113.41314999999997);
        ctx.bezierCurveTo(29.073513000000005, -113.76615999999997, 29.894014000000006, -113.50554999999997, 30.834879000000004, -112.63712999999997);
        ctx.bezierCurveTo(31.575776000000005, -111.95332999999997, 32.034608000000006, -111.02355999999997, 31.984948000000003, -110.30664999999998);
        ctx.lineTo(31.949128, -109.78955999999998);
        ctx.lineTo(33.827945, -108.79327999999998);
        ctx.bezierCurveTo(34.861292999999996, -108.24531999999998, 35.845376, -107.78597999999998, 36.014793, -107.77251999999999);
        ctx.bezierCurveTo(36.184211, -107.75911999999998, 36.330994999999994, -107.70721999999999, 36.340979999999995, -107.65731999999998);
        ctx.bezierCurveTo(36.35097999999999, -107.60741999999999, 36.122243999999995, -107.34924999999998, 35.832713, -107.08359999999999);
        ctx.lineTo(35.306294, -106.60060999999999);
        ctx.lineTo(33.220023, -107.71677999999999);
        ctx.bezierCurveTo(31.455486999999998, -108.66080999999998, 31.111576999999997, -108.81153999999998, 30.989943999999998, -108.69414999999998);
        ctx.bezierCurveTo(30.867423999999996, -108.57589999999998, 31.000683999999996, -108.38741999999998, 31.890157999999996, -107.42090999999998);
        ctx.bezierCurveTo(33.467057, -105.70742999999997, 33.73472699999999, -105.49977999999997, 34.009257999999996, -105.77701999999998);
        ctx.bezierCurveTo(34.07163799999999, -105.84001999999998, 34.176536, -105.85791999999998, 34.242355999999994, -105.81691999999998);
        ctx.bezierCurveTo(34.31975599999999, -105.76861999999998, 34.10024599999999, -105.50091999999998, 33.62093599999999, -105.05908999999998);
        ctx.bezierCurveTo(32.657712, -104.17119999999998, 32.407774999999994, -103.97618999999999, 32.407774999999994, -104.11256999999998);
        ctx.closePath();
        ctx.moveTo(31.129410000000004, -109.74733999999998);
        ctx.bezierCurveTo(31.231933000000005, -110.15984999999998, 30.769095000000004, -111.01981999999998, 30.049420000000005, -111.75401999999998);
        ctx.bezierCurveTo(29.031526000000007, -112.79243999999998, 28.481044000000004, -112.95915999999998, 27.857789000000004, -112.41777999999998);
        ctx.lineTo(27.578839000000006, -112.17547999999998);
        ctx.lineTo(29.042938000000007, -110.56390999999998);
        ctx.lineTo(30.507037000000008, -108.95233999999998);
        ctx.lineTo(30.786669000000007, -109.22288999999998);
        ctx.bezierCurveTo(30.940468000000006, -109.37167999999998, 31.094701000000008, -109.60768999999998, 31.129410000000007, -109.74733999999998);
        ctx.closePath();
        ctx.moveTo(36.64399, -107.91643999999998);
        ctx.bezierCurveTo(36.613640000000004, -107.96603999999998, 36.6571, -108.06382999999998, 36.740570000000005, -108.13377999999997);
        ctx.bezierCurveTo(36.946130000000004, -108.30605999999997, 36.930834000000004, -108.63390999999997, 36.69935, -109.01724999999998);
        ctx.bezierCurveTo(36.252233000000004, -109.75769999999997, 32.173654, -115.60663999999997, 32.017771, -115.73092999999997);
        ctx.bezierCurveTo(31.917503000000004, -115.81082999999997, 31.711447000000003, -115.84548999999997, 31.517824000000005, -115.81492999999998);
        ctx.bezierCurveTo(31.336667000000006, -115.78632999999998, 31.168866000000005, -115.79492999999998, 31.144933000000005, -115.83402999999997);
        ctx.bezierCurveTo(31.121003000000005, -115.87312999999997, 31.544409000000005, -116.21330999999996, 32.085841, -116.58996999999997);
        ctx.bezierCurveTo(32.627274, -116.96662999999997, 33.393237, -117.50497999999996, 33.787983000000004, -117.78629999999997);
        ctx.lineTo(34.50570200000001, -118.29778999999996);
        ctx.lineTo(35.223248000000005, -117.25516999999996);
        ctx.bezierCurveTo(36.166290000000004, -115.88488999999997, 36.195840000000004, -115.81768999999997, 35.60735100000001, -116.38158999999996);
        ctx.bezierCurveTo(35.03559700000001, -116.92946999999997, 34.57573200000001, -117.19033999999996, 34.18167100000001, -117.19033999999996);
        ctx.bezierCurveTo(33.886241000000005, -117.19033999999996, 33.01935900000001, -116.69102999999997, 33.02014300000001, -116.52131999999996);
        ctx.bezierCurveTo(33.02075400000001, -116.38776999999996, 35.13666700000001, -113.34071999999996, 35.258097000000014, -113.29850999999996);
        ctx.bezierCurveTo(35.30892700000001, -113.28080999999996, 35.42750800000001, -113.38510999999997, 35.52161800000001, -113.53009999999996);
        ctx.bezierCurveTo(35.68197400000001, -113.77724999999997, 35.68174700000001, -113.82770999999997, 35.51801800000001, -114.33325999999997);
        ctx.bezierCurveTo(35.42191800000001, -114.62995999999997, 35.22882600000001, -115.06995999999997, 35.088918000000014, -115.31103999999996);
        ctx.bezierCurveTo(34.56953400000001, -116.20602999999997, 34.97919000000002, -115.69782999999997, 36.208238000000016, -113.92244999999997);
        ctx.bezierCurveTo(37.786518000000015, -111.64260999999996, 37.978195000000014, -111.32611999999997, 37.366005000000015, -112.01079999999997);
        ctx.bezierCurveTo(36.631802000000015, -112.83193999999997, 36.065139000000016, -113.12258999999997, 35.679344000000015, -112.87592999999997);
        ctx.bezierCurveTo(35.567281000000015, -112.80422999999996, 35.76068400000001, -112.46064999999997, 36.577382000000014, -111.28040999999997);
        ctx.bezierCurveTo(37.149856000000014, -110.45310999999998, 37.731980000000014, -109.70095999999998, 37.87099100000002, -109.60897999999997);
        ctx.bezierCurveTo(38.11328800000002, -109.44865999999998, 38.139369000000016, -109.45446999999997, 38.501778000000016, -109.74942999999998);
        ctx.bezierCurveTo(38.70970100000002, -109.91865999999997, 38.93906600000002, -110.16838999999997, 39.01148000000001, -110.30437999999998);
        ctx.bezierCurveTo(39.20332300000001, -110.66467999999998, 39.11125000000001, -111.57795999999998, 38.807563000000016, -112.32710999999998);
        ctx.bezierCurveTo(38.66413600000001, -112.68091999999997, 38.56138400000002, -112.97039999999997, 38.579222000000016, -112.97039999999997);
        ctx.bezierCurveTo(38.630502000000014, -112.97039999999997, 40.15425500000001, -110.39441999999997, 40.15020600000002, -110.31456999999997);
        ctx.bezierCurveTo(40.148206000000016, -110.27516999999997, 39.701025000000016, -109.93453999999997, 39.156469000000016, -109.55767999999998);
        ctx.bezierCurveTo(38.611913000000015, -109.18082999999997, 37.836250000000014, -108.63710999999998, 37.43277300000002, -108.34941999999998);
        ctx.bezierCurveTo(37.02929700000002, -108.06171999999998, 36.67434900000002, -107.86690999999998, 36.64400200000002, -107.91649999999998);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#bc9573";
        ctx.fillStyle = "rgba(188, 149, 115, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.917842;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(69.36795, 28.039293);
        ctx.bezierCurveTo(69.36795, 41.37190580954247, 56.85750410151113, 52.180124, 41.425087, 52.180124);
        ctx.bezierCurveTo(25.992669898488863, 52.180124, 13.482223999999999, 41.37190580954247, 13.482223999999999, 28.039293);
        ctx.bezierCurveTo(13.482223999999999, 14.706680190457535, 25.992669898488863, 3.898462000000002, 41.425087, 3.898462000000002);
        ctx.bezierCurveTo(56.85750410151113, 3.898462000000002, 69.36795, 14.706680190457535, 69.36795, 28.039293);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.04396;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(35.7852205, 34.816952);
        ctx.bezierCurveTo(35.7852205, 36.69233041331218, 33.962764457976355, 38.212625, 31.714651, 38.212625);
        ctx.bezierCurveTo(29.46653754202364, 38.212625, 27.6440815, 36.69233041331218, 27.6440815, 34.816952);
        ctx.bezierCurveTo(27.6440815, 32.941573586687824, 29.46653754202364, 31.421279000000002, 31.714651, 31.421279000000002);
        ctx.bezierCurveTo(33.962764457976355, 31.421279000000002, 35.7852205, 32.941573586687824, 35.7852205, 34.816952);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.00345;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(55.3420615, 34.591545);
        ctx.bezierCurveTo(55.3420615, 36.32422678584618, 53.51960545797636, 37.728842900000004, 51.271492, 37.728842900000004);
        ctx.bezierCurveTo(49.02337854202364, 37.728842900000004, 47.200922500000004, 36.32422678584618, 47.200922500000004, 34.591545);
        ctx.bezierCurveTo(47.200922500000004, 32.85886321415383, 49.02337854202364, 31.454247100000003, 51.271492, 31.454247100000003);
        ctx.bezierCurveTo(53.51960545797636, 31.454247100000003, 55.3420615, 32.85886321415383, 55.3420615, 34.591545);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#658855";
        ctx.fillStyle = "rgba(101, 136, 85, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.42328593, 0, 0, 0.39326515, -18.302105, -36.964609);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#658855";
        ctx.fillStyle = "rgba(101, 136, 85, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.42328593, 0, 0, 0.39326515, 1.2953761, -37.305786);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 0.163717)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.06432;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.globalAlpha = 0.633721;
        ctx.beginPath();
        ctx.moveTo(52.998630999999996, 19.528452);
        ctx.bezierCurveTo(52.998630999999996, 22.24671745737844, 47.66362473891622, 24.450307000000002, 41.082561, 24.450307000000002);
        ctx.bezierCurveTo(34.50149726108378, 24.450307000000002, 29.166491, 22.24671745737844, 29.166491, 19.528452);
        ctx.bezierCurveTo(29.166491, 16.81018654262156, 34.50149726108378, 14.606597, 41.082561, 14.606597);
        ctx.bezierCurveTo(47.66362473891622, 14.606597, 52.998630999999996, 16.81018654262156, 52.998630999999996, 19.528452);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 0.10177)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.525411;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(44.9866063, 18.584894);
        ctx.bezierCurveTo(44.9866063, 19.785708782302724, 42.04353250780339, 20.759161499999998, 38.413067, 20.759161499999998);
        ctx.bezierCurveTo(34.782601492196605, 20.759161499999998, 31.839527699999998, 19.785708782302724, 31.839527699999998, 18.584894);
        ctx.bezierCurveTo(31.839527699999998, 17.384079217697273, 34.782601492196605, 16.4106265, 38.413067, 16.4106265);
        ctx.bezierCurveTo(42.04353250780339, 16.4106265, 44.9866063, 17.384079217697273, 44.9866063, 18.584894);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ca9e42";
        ctx.fillStyle = "rgba(202, 158, 66, 0)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 2.03722;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(16.32949, 34.806681);
        ctx.bezierCurveTo(16.32949, 34.806681, 53.480575, 22.006778999999998, 41.79597, 11.534132999999997);
        ctx.bezierCurveTo(30.111345, 1.0614931, 25.61727, 8.0432519, 25.61727, 8.0432519);
        ctx.bezierCurveTo(25.61727, 8.0432519, 17.527912, 13.861388, 16.629103, 17.934083);
        ctx.bezierCurveTo(15.730277000000001, 22.006779, 12.434627, 29.570356, 16.32949, 34.806681);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.32436317, 0, 0, 0.30883872, 52.220363, -21.19337);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.32436317, 0, 0, 0.30883872, 71.619276, -21.432904);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(39.641262, 2.6607401, 41.561005, 36.037544);
        g.addColorStop(0, "rgba(4, 2, 1, 1)");
        g.addColorStop(1, "rgba(45, 40, 37, 1)");
        ctx.fillStyle = g;
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.256002;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(12.875558, 23.655304);
        ctx.bezierCurveTo(12.875558, 23.655304, 15.395207, 11.773510000000002, 27.568794, 6.390784200000002);
        ctx.bezierCurveTo(43.018031, -0.44031944999999784, 50.494371, 2.3969664000000024, 56.027938, 4.819069800000002);
        ctx.bezierCurveTo(62.131620999999996, 7.490719200000003, 65.48729, 10.107636000000003, 69.394971, 18.899914000000003);
        ctx.bezierCurveTo(71.472765, 21.185488000000003, 69.318341, 39.342379, 66.601068, 35.581867);
        ctx.bezierCurveTo(65.257806, 33.017452, 61.533869, 23.913827, 51.915034, 19.87453);
        ctx.bezierCurveTo(41.713326, 15.590464, 45.413447, 14.792487, 41.905775, 15.254816);
        ctx.bezierCurveTo(38.365877, 15.721392, 34.424654, 18.828306, 30.780668, 20.800867);
        ctx.bezierCurveTo(25.016329, 23.921218, 15.156085999999998, 33.059353, 13.812821, 30.739169);
        ctx.bezierCurveTo(12.469555999999999, 28.418982, 12.875558, 23.655304, 12.875558, 23.655304);
        ctx.closePath();
        ctx.fill("nonzero");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#4e4e4e";
        ctx.fillStyle = "rgba(78, 78, 78, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.256002;
        ctx.font = "   15px ''";
        ctx.globalAlpha = 0.102713;
        ctx.beginPath();
        ctx.moveTo(19.828062, 43.604361);
        ctx.bezierCurveTo(49.453387, 38.991032, 63.22364999999999, 42.544453999999995, 63.095558999999994, 42.736591);
        ctx.bezierCurveTo(63.94924699999999, 42.817890999999996, 57.078005999999995, 52.3002, 40.99621599999999, 52.266644);
        ctx.bezierCurveTo(24.67883, 52.232594, 19.828062, 43.604361, 19.828062, 43.604361);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#4e0c0c";
        ctx.fillStyle = "rgba(78, 12, 12, 1)";
        ctx.strokeStyle = "#673e00";
        ctx.strokeStyle = "rgba(103, 62, 0, 1)";
        ctx.lineWidth = 0.198912;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(33.354807, 43.972706);
        ctx.bezierCurveTo(33.354807, 43.972706, 43.519162, 41.434554000000006, 49.6717, 43.918726);
        ctx.bezierCurveTo(57.219137, 46.966105999999996, 27.301415000000002, 47.530632, 33.354807, 43.972706);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.strokeStyle = "#ffffff";
        ctx.strokeStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.308079;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(34.189931, 44.272806);
        ctx.bezierCurveTo(39.548501, 42.508341, 47.919221, 43.32134, 47.557605, 43.563103000000005);
        ctx.bezierCurveTo(52.038751000000005, 44.36167400000001, 38.97117, 48.634874, 34.189931, 44.272806);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(36.367426, 43.549873);
        ctx.lineTo(35.888812, 45.683184);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(38.098623, 43.258766);
        ctx.lineTo(37.638524000000004, 46.204341);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(39.786647, 43.091943);
        ctx.lineTo(39.771837000000005, 46.348043000000004);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(41.374141, 42.939299);
        ctx.lineTo(41.884188, 46.294393);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(43.148512, 42.992951);
        ctx.lineTo(43.938553999999996, 46.114287999999995);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(45.220763, 43.122473);
        ctx.lineTo(46.01451, 45.676412);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.0628918;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(47.255386, 43.217708);
        ctx.lineTo(47.96835, 44.832083000000004);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667115, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx9 = canvas.getContext("2d");
        ctx9.fillStyle = g;
        ctx9.save();
        ctx9.strokeStyle = "rgba(0,0,0,0)";
        ctx9.miterLimit = 4;
        ctx9.font = "";
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(0, 0);
        ctx9.lineTo(1864, 0);
        ctx9.lineTo(1864, 939);
        ctx9.lineTo(0, 939);
        ctx9.closePath();
        ctx9.clip();
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.transform(1.0601027, 0, 0, 1.1177772, 0.02253884, -8.6083099);
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(-10000, -10000);
        ctx9.lineTo(20000, -10000);
        ctx9.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx9.lineTo(20000, 20000);
        ctx9.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx9.lineTo(-10000, 20000);
        ctx9.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx9.lineTo(-10000, -10000);
        ctx9.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx9.closePath();
        ctx9.fill();
        ctx9.stroke();
        ctx9.restore();
        ctx9.restore();
        ctx9.restore();
        var p = ctx9.createPattern(ctx9.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 1.19741;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(47.844402, 29.185511);
        ctx.bezierCurveTo(50.031551, 27.37218, 55.172270000000005, 28.292878, 56.200787000000005, 30.017139);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667115, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx10 = canvas.getContext("2d");
        ctx10.fillStyle = g;
        ctx10.save();
        ctx10.strokeStyle = "rgba(0,0,0,0)";
        ctx10.miterLimit = 4;
        ctx10.font = "";
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(0, 0);
        ctx10.lineTo(1864, 0);
        ctx10.lineTo(1864, 939);
        ctx10.lineTo(0, 939);
        ctx10.closePath();
        ctx10.clip();
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.transform(-1.0601027, 0, 0, 1.1177772, 83.479544, -8.3780922);
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(-10000, -10000);
        ctx10.lineTo(20000, -10000);
        ctx10.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx10.lineTo(20000, 20000);
        ctx10.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx10.lineTo(-10000, 20000);
        ctx10.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx10.lineTo(-10000, -10000);
        ctx10.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx10.closePath();
        ctx10.fill();
        ctx10.stroke();
        ctx10.restore();
        ctx10.restore();
        ctx10.restore();
        var p = ctx10.createPattern(ctx10.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 1.19741;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(35.657681, 29.415729);
        ctx.bezierCurveTo(33.470532, 27.602397999999997, 28.329812999999998, 28.523096, 27.301295999999997, 30.247356999999997);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 0.976471)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.95029;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(65.0875034, 71.17292);
        ctx.bezierCurveTo(65.0875034, 73.21867461355563, 63.36986246768024, 74.87708640000001, 61.251045, 74.87708640000001);
        ctx.bezierCurveTo(59.13222753231975, 74.87708640000001, 57.4145866, 73.21867461355563, 57.4145866, 71.17292);
        ctx.bezierCurveTo(57.4145866, 69.12716538644437, 59.13222753231975, 67.4687536, 61.251045, 67.4687536);
        ctx.bezierCurveTo(63.36986246768024, 67.4687536, 65.0875034, 69.12716538644437, 65.0875034, 71.17292);
        ctx.closePath();
        ctx.fill("nonzero");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 0.976471)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.95029;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(23.6802104, 71.966667);
        ctx.bezierCurveTo(23.6802104, 74.01242161355563, 21.962569467680247, 75.6708334, 19.843752, 75.6708334);
        ctx.bezierCurveTo(17.72493453231975, 75.6708334, 16.007293599999997, 74.01242161355563, 16.007293599999997, 71.966667);
        ctx.bezierCurveTo(16.007293599999997, 69.92091238644437, 17.72493453231975, 68.2625006, 19.843752, 68.2625006);
        ctx.bezierCurveTo(21.962569467680247, 68.2625006, 23.6802104, 69.92091238644437, 23.6802104, 71.966667);
        ctx.closePath();
        ctx.fill("nonzero");
        ctx.stroke();
        ctx.restore();
        ctx.restore();
        ctx.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    en_player: function() {
        const patternCanvas = document.createElement('canvas');
        const ctx = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize + playerOverlap;

        ctx.save();
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.miterLimit = 4;
        ctx.font = "15px / 21.4286px ''";
        ctx.font = "   15px ''";
        ctx.scale(0.2645833333333333, 0.2645833333333333);
        ctx.translate(2.842170943040401e-14, 0);
        ctx.scale(3.779527559055118, 3.779527559055118);
        ctx.save();
        ctx.restore();
        ctx.save();
        ctx.font = "   15px ''";
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.strokeStyle = "#bfbfbf";
        ctx.strokeStyle = "rgba(191, 191, 191, 1)";
        ctx.lineWidth = 0.512035;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(57.5892665, 90.18399);
        ctx.bezierCurveTo(57.5892665, 94.68943996081794, 54.80347498564478, 98.3418288, 51.367027, 98.3418288);
        ctx.bezierCurveTo(47.93057901435522, 98.3418288, 45.1447875, 94.68943996081794, 45.1447875, 90.18399);
        ctx.bezierCurveTo(45.1447875, 85.67854003918205, 47.93057901435522, 82.02615119999999, 51.367027, 82.02615119999999);
        ctx.bezierCurveTo(54.80347498564478, 82.02615119999999, 57.5892665, 85.67854003918205, 57.5892665, 90.18399);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.strokeStyle = "#bfbfbf";
        ctx.strokeStyle = "rgba(191, 191, 191, 1)";
        ctx.lineWidth = 0.512035;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(31.8761935, 90.970558);
        ctx.bezierCurveTo(31.8761935, 95.47600796081794, 29.09040198564478, 99.12839679999999, 25.653954, 99.12839679999999);
        ctx.bezierCurveTo(22.217506014355216, 99.12839679999999, 19.4317145, 95.47600796081794, 19.4317145, 90.970558);
        ctx.bezierCurveTo(19.4317145, 86.46510803918206, 22.217506014355216, 82.8127192, 25.653954, 82.8127192);
        ctx.bezierCurveTo(29.09040198564478, 82.8127192, 31.8761935, 86.46510803918206, 31.8761935, 90.970558);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#050505";
        ctx.fillStyle = "rgba(5, 5, 5, 1)";
        var g = ctx.createLinearGradient(179.80403, 431.61713, 151.93471, 321.1073);
        g.addColorStop(0, "rgba(4, 2, 1, 1)");
        g.addColorStop(1, "rgba(45, 40, 37, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx1 = canvas.getContext("2d");
        ctx1.fillStyle = g;
        ctx1.save();
        ctx1.strokeStyle = "rgba(0,0,0,0)";
        ctx1.miterLimit = 4;
        ctx1.font = "";
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(0, 0);
        ctx1.lineTo(1864, 0);
        ctx1.lineTo(1864, 939);
        ctx1.lineTo(0, 939);
        ctx1.closePath();
        ctx1.clip();
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.transform(0.71077433, 0, 0, 0.74714347, 136.55899, 59.225274);
        ctx1.save();
        ctx1.font = "   15px ''";
        ctx1.beginPath();
        ctx1.moveTo(-10000, -10000);
        ctx1.lineTo(20000, -10000);
        ctx1.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx1.lineTo(20000, 20000);
        ctx1.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx1.lineTo(-10000, 20000);
        ctx1.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx1.lineTo(-10000, -10000);
        ctx1.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx1.closePath();
        ctx1.fill();
        ctx1.stroke();
        ctx1.restore();
        ctx1.restore();
        ctx1.restore();
        var p = ctx1.createPattern(ctx1.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.276353;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(18.225171, 75.661114);
        ctx.lineTo(60.153822000000005, 74.645913);
        ctx.lineTo(59.582582, 87.553463);
        ctx.lineTo(56.840658000000005, 91.90432299999999);
        ctx.lineTo(45.872945, 91.759301);
        ctx.lineTo(44.501981, 87.40843);
        ctx.lineTo(44.045001, 81.89734399999999);
        ctx.lineTo(33.87701, 82.04236699999998);
        ctx.lineTo(33.305774, 88.71367599999998);
        ctx.lineTo(31.363571999999998, 92.33941199999998);
        ctx.lineTo(20.053123999999997, 92.04935699999999);
        ctx.lineTo(18.910653999999997, 87.98855199999998);
        ctx.lineTo(18.225170999999996, 75.66111399999998);
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(98.670212, 318.67361, 99.737473, 225.63814);
        g.addColorStop(0, "rgba(168, 159, 159, 1)");
        g.addColorStop(1, "rgba(226, 203, 203, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx2 = canvas.getContext("2d");
        ctx2.fillStyle = g;
        ctx2.save();
        ctx2.strokeStyle = "rgba(0,0,0,0)";
        ctx2.miterLimit = 4;
        ctx2.font = "";
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(0, 0);
        ctx2.lineTo(1864, 0);
        ctx2.lineTo(1864, 939);
        ctx2.lineTo(0, 939);
        ctx2.closePath();
        ctx2.clip();
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.transform(0.26954319, 0, 0, 0.28333526, -1.256922, -15.689555);
        ctx2.save();
        ctx2.font = "   15px ''";
        ctx2.beginPath();
        ctx2.moveTo(-10000, -10000);
        ctx2.lineTo(20000, -10000);
        ctx2.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx2.lineTo(20000, 20000);
        ctx2.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx2.lineTo(-10000, 20000);
        ctx2.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx2.lineTo(-10000, -10000);
        ctx2.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx2.closePath();
        ctx2.fill();
        ctx2.stroke();
        ctx2.restore();
        ctx2.restore();
        ctx2.restore();
        var p = ctx2.createPattern(ctx2.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.276353;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(16.397221, 38.242018);
        ctx.bezierCurveTo(16.397221, 38.242018, 21.358271, 44.670733, 24.851499999999998, 46.508647);
        ctx.bezierCurveTo(29.678012, 49.048047000000004, 40.917696, 49.685681, 40.917696, 49.685681);
        ctx.lineTo(41.050062, 75.34326);
        ctx.lineTo(18.225170999999996, 75.661114);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(113.73347, 318.67361, 109.42099, 228.35292);
        g.addColorStop(0, "rgba(168, 159, 159, 1)");
        g.addColorStop(1, "rgba(226, 203, 203, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx3 = canvas.getContext("2d");
        ctx3.fillStyle = g;
        ctx3.save();
        ctx3.strokeStyle = "rgba(0,0,0,0)";
        ctx3.miterLimit = 4;
        ctx3.font = "";
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(0, 0);
        ctx3.lineTo(1864, 0);
        ctx3.lineTo(1864, 939);
        ctx3.lineTo(0, 939);
        ctx3.closePath();
        ctx3.clip();
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.transform(-0.26954319, 0, 0, 0.28333526, 79.63592, -15.743267);
        ctx3.save();
        ctx3.font = "   15px ''";
        ctx3.beginPath();
        ctx3.moveTo(-10000, -10000);
        ctx3.lineTo(20000, -10000);
        ctx3.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx3.lineTo(20000, 20000);
        ctx3.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx3.lineTo(-10000, 20000);
        ctx3.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx3.lineTo(-10000, -10000);
        ctx3.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx3.closePath();
        ctx3.fill();
        ctx3.stroke();
        ctx3.restore();
        ctx3.restore();
        ctx3.restore();
        var p = ctx3.createPattern(ctx3.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.276353;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(61.981775, 38.188306);
        ctx.bezierCurveTo(61.981775, 38.188306, 57.020725999999996, 44.617027, 53.527495, 46.454941);
        ctx.bezierCurveTo(48.700988, 48.994341999999996, 37.461301000000006, 49.631968, 37.461301000000006, 49.631968);
        ctx.lineTo(37.328934000000004, 75.289545);
        ctx.lineTo(60.153822000000005, 75.60741);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#848484";
        ctx.strokeStyle = "rgba(132, 132, 132, 1)";
        ctx.lineWidth = 0.65079;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(33.185707, 62.545729);
        ctx.lineTo(31.938259000000002, 63.848515);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#848484";
        ctx.strokeStyle = "rgba(132, 132, 132, 1)";
        ctx.lineWidth = 0.65079;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(47.119346, 65.923271);
        ctx.lineTo(47.785368, 67.226046);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.strokeStyle = "#6d0e00";
        ctx.strokeStyle = "rgba(109, 14, 0, 1)";
        ctx.lineWidth = 0.897166;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(40.917696, 49.685681);
        ctx.bezierCurveTo(40.775035, 54.337230000000005, 44.826112, 61.867252, 47.119346, 65.923271);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(92.572426, 164.20337, 101.08205, 164.20337);
        g.addColorStop(0, "rgba(79, 28, 33, 1)");
        g.addColorStop(1, "rgba(116, 39, 41, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx4 = canvas.getContext("2d");
        ctx4.fillStyle = g;
        ctx4.save();
        ctx4.strokeStyle = "rgba(0,0,0,0)";
        ctx4.miterLimit = 4;
        ctx4.font = "";
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(0, 0);
        ctx4.lineTo(1864, 0);
        ctx4.lineTo(1864, 939);
        ctx4.lineTo(0, 939);
        ctx4.closePath();
        ctx4.clip();
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.transform(0.3653721, 0, 0, 0.36339866, -0.9532158, -3.2082027);
        ctx4.save();
        ctx4.font = "   15px ''";
        ctx4.beginPath();
        ctx4.moveTo(-10000, -10000);
        ctx4.lineTo(20000, -10000);
        ctx4.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx4.lineTo(20000, 20000);
        ctx4.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx4.lineTo(-10000, 20000);
        ctx4.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx4.lineTo(-10000, -10000);
        ctx4.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx4.closePath();
        ctx4.fill();
        ctx4.stroke();
        ctx4.restore();
        ctx4.restore();
        ctx4.restore();
        var p = ctx4.createPattern(ctx4.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 0.897166;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(37.461301, 49.631968);
        ctx.bezierCurveTo(37.235541, 53.917114, 36.692855, 59.11198, 33.185707, 62.545729);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(102.07914, 113.81707, 102.8028, 127.04623);
        g.addColorStop(0, "rgba(79, 28, 33, 1)");
        g.addColorStop(1, "rgba(116, 39, 41, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx5 = canvas.getContext("2d");
        ctx5.fillStyle = g;
        ctx5.save();
        ctx5.strokeStyle = "rgba(0,0,0,0)";
        ctx5.miterLimit = 4;
        ctx5.font = "";
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(0, 0);
        ctx5.lineTo(1864, 0);
        ctx5.lineTo(1864, 939);
        ctx5.lineTo(0, 939);
        ctx5.closePath();
        ctx5.clip();
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.transform(0.36684019, 0, 0, 0.49480149, -1.0965085, -17.495397);
        ctx5.save();
        ctx5.font = "   15px ''";
        ctx5.beginPath();
        ctx5.moveTo(-10000, -10000);
        ctx5.lineTo(20000, -10000);
        ctx5.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx5.lineTo(20000, 20000);
        ctx5.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx5.lineTo(-10000, 20000);
        ctx5.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx5.lineTo(-10000, -10000);
        ctx5.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx5.closePath();
        ctx5.fill();
        ctx5.stroke();
        ctx5.restore();
        ctx5.restore();
        ctx5.restore();
        var p = ctx5.createPattern(ctx5.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.112724;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(17.226219, 57.16663);
        ctx.lineTo(16.405977, 38.869886);
        ctx.lineTo(62.091371, 38.869886);
        ctx.lineTo(61.085423, 56.76599);
        ctx.bezierCurveTo(56.789805, 51.022104, 35.268151, 44.382153, 17.226219, 57.16663);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(164.28397, 165.4808, 209.60956, 165.4808);
        g.addColorStop(0, "rgba(79, 28, 33, 1)");
        g.addColorStop(1, "rgba(116, 39, 41, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx6 = canvas.getContext("2d");
        ctx6.fillStyle = g;
        ctx6.save();
        ctx6.strokeStyle = "rgba(0,0,0,0)";
        ctx6.miterLimit = 4;
        ctx6.font = "";
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(0, 0);
        ctx6.lineTo(1864, 0);
        ctx6.lineTo(1864, 939);
        ctx6.lineTo(0, 939);
        ctx6.closePath();
        ctx6.clip();
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.transform(0.3653721, 0, 0, 0.36339866, -4.0466996, -3.2082027);
        ctx6.save();
        ctx6.font = "   15px ''";
        ctx6.beginPath();
        ctx6.moveTo(-10000, -10000);
        ctx6.lineTo(20000, -10000);
        ctx6.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx6.lineTo(20000, 20000);
        ctx6.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx6.lineTo(-10000, 20000);
        ctx6.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx6.lineTo(-10000, -10000);
        ctx6.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx6.closePath();
        ctx6.fill();
        ctx6.stroke();
        ctx6.restore();
        ctx6.restore();
        ctx6.restore();
        var p = ctx6.createPattern(ctx6.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.0964094;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(58.997871, 38.869886);
        ctx.bezierCurveTo(52.577172000000004, 42.031862000000004, 63.539194, 52.195889, 62.849861000000004, 59.288793);
        ctx.bezierCurveTo(62.28761900000001, 65.074065, 52.290034000000006, 71.28859299999999, 57.060321, 74.645913);
        ctx.bezierCurveTo(63.309596, 79.044118, 72.06019, 65.351104, 72.517, 57.750397);
        ctx.bezierCurveTo(72.98054, 50.037797, 65.959556, 35.441483, 58.997871, 38.869886);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createLinearGradient(164.28397, 165.4808, 209.60956, 165.4808);
        g.addColorStop(0, "rgba(79, 28, 33, 1)");
        g.addColorStop(1, "rgba(116, 39, 41, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx7 = canvas.getContext("2d");
        ctx7.fillStyle = g;
        ctx7.save();
        ctx7.strokeStyle = "rgba(0,0,0,0)";
        ctx7.miterLimit = 4;
        ctx7.font = "";
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(0, 0);
        ctx7.lineTo(1864, 0);
        ctx7.lineTo(1864, 939);
        ctx7.lineTo(0, 939);
        ctx7.closePath();
        ctx7.clip();
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.transform(-0.3653721, 0, 0, 0.36339866, 82.487434, -3.2082027);
        ctx7.save();
        ctx7.font = "   15px ''";
        ctx7.beginPath();
        ctx7.moveTo(-10000, -10000);
        ctx7.lineTo(20000, -10000);
        ctx7.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx7.lineTo(20000, 20000);
        ctx7.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx7.lineTo(-10000, 20000);
        ctx7.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx7.lineTo(-10000, -10000);
        ctx7.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx7.closePath();
        ctx7.fill();
        ctx7.stroke();
        ctx7.restore();
        ctx7.restore();
        ctx7.restore();
        var p = ctx7.createPattern(ctx7.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.0964094;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(19.442954, 38.869886);
        ctx.bezierCurveTo(25.863616, 42.031862000000004, 13.54827, 51.811291, 14.237596, 58.904196999999996);
        ctx.bezierCurveTo(14.799838, 64.68946799999999, 29.050893000000002, 67.731079, 24.280633, 71.088387);
        ctx.bezierCurveTo(18.031392, 75.486602, 6.3807065, 65.351104, 5.9238985, 57.750397);
        ctx.bezierCurveTo(5.4603639, 50.037797, 12.481307, 35.441483, 19.442954, 38.869886);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#bc9573";
        ctx.fillStyle = "rgba(188, 149, 115, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.881923;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(66.918226, 24.425011);
        ctx.bezierCurveTo(66.918226, 37.20121735862369, 54.864769773087595, 47.558379, 39.996078, 47.558379);
        ctx.bezierCurveTo(25.1273862269124, 47.558379, 13.073929999999997, 37.20121735862369, 13.073929999999997, 24.425011);
        ctx.bezierCurveTo(13.073929999999997, 11.648804641376316, 25.1273862269124, 1.2916430000000005, 39.996078, 1.2916430000000005);
        ctx.bezierCurveTo(54.864769773087595, 1.2916430000000005, 66.918226, 11.648804641376316, 66.918226, 24.425011);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.0031;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(34.5622307, 31.496695);
        ctx.bezierCurveTo(34.5622307, 33.29380903095671, 32.806346692126716, 34.7506578, 30.640354, 34.7506578);
        ctx.bezierCurveTo(28.47436130787328, 34.7506578, 26.7184773, 33.29380903095671, 26.7184773, 31.496695);
        ctx.bezierCurveTo(26.7184773, 29.69958096904329, 28.47436130787328, 28.2427322, 30.640354, 28.2427322);
        ctx.bezierCurveTo(32.806346692126716, 28.2427322, 34.5622307, 29.69958096904329, 34.5622307, 31.496695);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#f3ecc5";
        ctx.fillStyle = "rgba(243, 236, 197, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.96418;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(53.4046957, 31.280735);
        ctx.bezierCurveTo(53.4046957, 32.94110746903423, 51.64881169212672, 34.2871053, 49.482819, 34.2871053);
        ctx.bezierCurveTo(47.31682630787328, 34.2871053, 45.5609423, 32.94110746903423, 45.5609423, 31.280735);
        ctx.bezierCurveTo(45.5609423, 29.62036253096577, 47.31682630787328, 28.2743647, 49.482819, 28.2743647);
        ctx.bezierCurveTo(51.64881169212672, 28.2743647, 53.4046957, 29.62036253096577, 53.4046957, 31.280735);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883, 181.14001, 0, -63.142883, 181.14001, 5.2169404);
        g.addColorStop(0, "rgba(183, 176, 176, 1)");
        g.addColorStop(1, "rgba(43, 109, 167, 0.64966741)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx8 = canvas.getContext("2d");
        ctx8.fillStyle = g;
        ctx8.save();
        ctx8.strokeStyle = "rgba(0,0,0,0)";
        ctx8.miterLimit = 4;
        ctx8.font = "";
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(0, 0);
        ctx8.lineTo(1864, 0);
        ctx8.lineTo(1864, 939);
        ctx8.lineTo(0, 939);
        ctx8.closePath();
        ctx8.clip();
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.transform(0.45002833, 2.0034692, -0.92148322, 0.20698773, 313.35834, 272.19747);
        ctx8.save();
        ctx8.font = "   15px ''";
        ctx8.beginPath();
        ctx8.moveTo(-10000, -10000);
        ctx8.lineTo(20000, -10000);
        ctx8.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx8.lineTo(20000, 20000);
        ctx8.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx8.lineTo(-10000, 20000);
        ctx8.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx8.lineTo(-10000, -10000);
        ctx8.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx8.closePath();
        ctx8.fill();
        ctx8.stroke();
        ctx8.restore();
        ctx8.restore();
        ctx8.restore();
        var p = ctx8.createPattern(ctx8.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.4078238, 0, 0, 0.37685315, -17.54935, -37.28921);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(-63.142883, 181.14001, 0, -63.142883, 181.14001, 5.2169404);
        g.addColorStop(0, "rgba(183, 176, 176, 1)");
        g.addColorStop(1, "rgba(43, 109, 167, 0.64966741)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx9 = canvas.getContext("2d");
        ctx9.fillStyle = g;
        ctx9.save();
        ctx9.strokeStyle = "rgba(0,0,0,0)";
        ctx9.miterLimit = 4;
        ctx9.font = "";
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(0, 0);
        ctx9.lineTo(1864, 0);
        ctx9.lineTo(1864, 939);
        ctx9.lineTo(0, 939);
        ctx9.closePath();
        ctx9.clip();
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.transform(0.45002833, 2.0034692, -0.92148322, 0.20698773, 313.35834, 272.19747);
        ctx9.save();
        ctx9.font = "   15px ''";
        ctx9.beginPath();
        ctx9.moveTo(-10000, -10000);
        ctx9.lineTo(20000, -10000);
        ctx9.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx9.lineTo(20000, 20000);
        ctx9.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx9.lineTo(-10000, 20000);
        ctx9.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx9.lineTo(-10000, -10000);
        ctx9.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx9.closePath();
        ctx9.fill();
        ctx9.stroke();
        ctx9.restore();
        ctx9.restore();
        ctx9.restore();
        var p = ctx9.createPattern(ctx9.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.4078238, 0, 0, 0.37685315, 1.3322596, -37.616149);
        ctx.beginPath();
        ctx.moveTo(123.2417104, 183.13518);
        ctx.bezierCurveTo(123.2417104, 185.85634782419575, 120.90600662369616, 188.06229019999998, 118.02477, 188.06229019999998);
        ctx.bezierCurveTo(115.14353337630385, 188.06229019999998, 112.8078296, 185.85634782419575, 112.8078296, 183.13518);
        ctx.bezierCurveTo(112.8078296, 180.41401217580423, 115.14353337630385, 178.2080698, 118.02477, 178.2080698);
        ctx.bezierCurveTo(120.90600662369616, 178.2080698, 123.2417104, 180.41401217580423, 123.2417104, 183.13518);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ca9e42";
        ctx.fillStyle = "rgba(202, 158, 66, 0)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 1.95749;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(15.817195, 31.486847);
        ctx.bezierCurveTo(15.817195, 31.486847, 51.611193, 19.221141000000003, 40.353413, 9.185546200000001);
        ctx.bezierCurveTo(29.095616, -0.85003677, 24.765705, 5.840345, 24.765705, 5.840345);
        ctx.bezierCurveTo(24.765705, 5.840345, 16.971841, 11.415682, 16.105864, 15.318404999999998);
        ctx.bezierCurveTo(15.23987, 19.221141, 12.064606000000001, 26.469071, 15.817195, 31.486846999999997);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.31251459, 0, 0, 0.29595004, 50.397017, -22.176152);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#040404";
        ctx.fillStyle = "rgba(4, 4, 4, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 3.29575;
        ctx.font = "   15px ''";
        ctx.transform(0.31251459, 0, 0, 0.29595004, 69.087305, -22.405689);
        ctx.beginPath();
        ctx.moveTo(-59.6680223, 181.74757);
        ctx.bezierCurveTo(-59.6680223, 183.33216933272828, -61.04434898881358, 184.6167409, -62.742134, 184.6167409);
        ctx.bezierCurveTo(-64.43991901118642, 184.6167409, -65.8162457, 183.33216933272828, -65.8162457, 181.74757);
        ctx.bezierCurveTo(-65.8162457, 180.1629706672717, -64.43991901118642, 178.8783991, -62.742134, 178.8783991);
        ctx.bezierCurveTo(-61.04434898881358, 178.8783991, -59.6680223, 180.1629706672717, -59.6680223, 181.74757);
        ctx.closePath();
        ctx.fill("evenodd");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#4e0c0c";
        ctx.fillStyle = "rgba(78, 12, 12, 1)";
        ctx.strokeStyle = "#9a5d00";
        ctx.strokeStyle = "rgba(154, 93, 0, 1)";
        ctx.lineWidth = 0.409931;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(31.829315, 39.816321);
        ctx.bezierCurveTo(35.713452000000004, 50.503183, 54.315731, 40.307249, 47.941454, 40.218605000000004);
        ctx.bezierCurveTo(38.299001000000004, 40.084512000000004, 35.224273, 39.950414, 31.829315, 39.816321);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667114, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx10 = canvas.getContext("2d");
        ctx10.fillStyle = g;
        ctx10.save();
        ctx10.strokeStyle = "rgba(0,0,0,0)";
        ctx10.miterLimit = 4;
        ctx10.font = "";
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(0, 0);
        ctx10.lineTo(1864, 0);
        ctx10.lineTo(1864, 939);
        ctx10.lineTo(0, 939);
        ctx10.closePath();
        ctx10.clip();
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.transform(1.233724, 0, 0, 1.0299783, -9.646554, -6.6179819);
        ctx10.save();
        ctx10.font = "   15px ''";
        ctx10.beginPath();
        ctx10.moveTo(-10000, -10000);
        ctx10.lineTo(20000, -10000);
        ctx10.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx10.lineTo(20000, 20000);
        ctx10.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx10.lineTo(-10000, 20000);
        ctx10.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx10.lineTo(-10000, -10000);
        ctx10.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx10.closePath();
        ctx10.fill();
        ctx10.stroke();
        ctx10.restore();
        ctx10.restore();
        ctx10.restore();
        var p = ctx10.createPattern(ctx10.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 1.23998;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(45.427431, 27.822616);
        ctx.bezierCurveTo(48.079729, 26.896251, 53.718104999999994, 27.559141, 54.765724999999996, 28.108171);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(0,0,0,0)";
        var g = ctx.createLinearGradient(43.667114, 33.72583, 55.57711, 35.332199);
        g.addColorStop(0, "rgba(0, 0, 0, 1)");
        g.addColorStop(1, "rgba(0, 0, 0, 0)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx11 = canvas.getContext("2d");
        ctx11.fillStyle = g;
        ctx11.save();
        ctx11.strokeStyle = "rgba(0,0,0,0)";
        ctx11.miterLimit = 4;
        ctx11.font = "";
        ctx11.font = "   15px ''";
        ctx11.beginPath();
        ctx11.moveTo(0, 0);
        ctx11.lineTo(1864, 0);
        ctx11.lineTo(1864, 939);
        ctx11.lineTo(0, 939);
        ctx11.closePath();
        ctx11.clip();
        ctx11.save();
        ctx11.font = "   15px ''";
        ctx11.transform(-1.0131607, 0, 0, 1.0711294, 79.692163, -8.1649969);
        ctx11.save();
        ctx11.font = "   15px ''";
        ctx11.beginPath();
        ctx11.moveTo(-10000, -10000);
        ctx11.lineTo(20000, -10000);
        ctx11.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx11.lineTo(20000, 20000);
        ctx11.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx11.lineTo(-10000, 20000);
        ctx11.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx11.lineTo(-10000, -10000);
        ctx11.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx11.closePath();
        ctx11.fill();
        ctx11.stroke();
        ctx11.restore();
        ctx11.restore();
        ctx11.restore();
        var p = ctx11.createPattern(ctx11.canvas, "no-repeat");
        ctx.strokeStyle = p;
        ctx.lineWidth = 1.14591;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(33.987887, 28.051585);
        ctx.bezierCurveTo(32.141238, 26.475484, 27.49352, 27.53372, 26.001529, 28.848509);
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.913097;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(63.784308100000004, 71.719803);
        ctx.bezierCurveTo(63.784308100000004, 74.0181204119909, 61.94578373673389, 75.8812748, 59.677849, 75.8812748);
        ctx.bezierCurveTo(57.40991426326612, 75.8812748, 55.5713899, 74.0181204119909, 55.5713899, 71.719803);
        ctx.bezierCurveTo(55.5713899, 69.42148558800909, 57.40991426326612, 67.5583312, 59.677849, 67.5583312);
        ctx.bezierCurveTo(61.94578373673389, 67.5583312, 63.784308100000004, 69.42148558800909, 63.784308100000004, 71.719803);
        ctx.closePath();
        ctx.fill("nonzero");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#b1845c";
        ctx.fillStyle = "rgba(177, 132, 92, 1)";
        ctx.strokeStyle = "rgba(0,0,0,0)";
        ctx.lineWidth = 0.974309;
        ctx.miterLimit = "4";
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(26.8751569, 69.165733);
        ctx.bezierCurveTo(26.8751569, 71.25753302908937, 25.109318301711404, 72.953272, 22.931046, 72.953272);
        ctx.bezierCurveTo(20.752773698288593, 72.953272, 18.986935099999997, 71.25753302908937, 18.986935099999997, 69.165733);
        ctx.bezierCurveTo(18.986935099999997, 67.07393297091063, 20.752773698288593, 65.37819400000001, 22.931046, 65.37819400000001);
        ctx.bezierCurveTo(25.109318301711404, 65.37819400000001, 26.8751569, 67.07393297091063, 26.8751569, 69.165733);
        ctx.closePath();
        ctx.fill("nonzero");
        ctx.stroke();
        ctx.restore();
        ctx.save();
        var g = ctx.createRadialGradient(112.25054, 63.055725, 0, 112.25054, 63.055725, 94.497108);
        g.addColorStop(0, "rgba(4, 2, 1, 1)");
        g.addColorStop(1, "rgba(45, 40, 37, 1)");
        var canvas = document.createElement("canvas");
        canvas.width = 1864;
        canvas.height = 939;
        var ctx12 = canvas.getContext("2d");
        ctx12.fillStyle = g;
        ctx12.save();
        ctx12.strokeStyle = "rgba(0,0,0,0)";
        ctx12.miterLimit = 4;
        ctx12.font = "";
        ctx12.font = "   15px ''";
        ctx12.beginPath();
        ctx12.moveTo(0, 0);
        ctx12.lineTo(1864, 0);
        ctx12.lineTo(1864, 939);
        ctx12.lineTo(0, 939);
        ctx12.closePath();
        ctx12.clip();
        ctx12.save();
        ctx12.font = "   15px ''";
        ctx12.transform(-0.24133889, -0.27283988, 0.72224418, -0.63197425, 21.608792, 87.297692);
        ctx12.save();
        ctx12.font = "   15px ''";
        ctx12.beginPath();
        ctx12.moveTo(-10000, -10000);
        ctx12.lineTo(20000, -10000);
        ctx12.bezierCurveTo(20000, -10000, 20000, -10000, 20000, -10000);
        ctx12.lineTo(20000, 20000);
        ctx12.bezierCurveTo(20000, 20000, 20000, 20000, 20000, 20000);
        ctx12.lineTo(-10000, 20000);
        ctx12.bezierCurveTo(-10000, 20000, -10000, 20000, -10000, 20000);
        ctx12.lineTo(-10000, -10000);
        ctx12.bezierCurveTo(-10000, -10000, -10000, -10000, -10000, -10000);
        ctx12.closePath();
        ctx12.fill();
        ctx12.stroke();
        ctx12.restore();
        ctx12.restore();
        ctx12.restore();
        var p = ctx12.createPattern(ctx12.canvas, "no-repeat");
        ctx.fillStyle = p;
        ctx.strokeStyle = "#000000";
        ctx.strokeStyle = "rgba(0, 0, 0, 1)";
        ctx.lineWidth = 0.443171;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(15.216732, 32.075427);
        ctx.bezierCurveTo(16.57366, 31.0585, 14.334839, 26.988836, 15.035126, 25.154407);
        ctx.bezierCurveTo(15.627912, 23.601587, 18.643765000000002, 23.32365, 19.464098, 21.96115);
        ctx.bezierCurveTo(20.710456999999998, 19.891057, 25.770058, 17.23641, 27.370276, 15.640426999999999);
        ctx.bezierCurveTo(32.457059, 10.567108, 39.442988, 14.808972999999998, 39.442988, 14.808972999999998);
        ctx.bezierCurveTo(39.442988, 14.808972999999998, 42.843579, 17.042068999999998, 45.256364, 17.395767);
        ctx.bezierCurveTo(48.127227, 17.816613999999998, 52.134112, 15.098488999999999, 55.048581, 14.850297);
        ctx.bezierCurveTo(57.221253, 14.665267, 58.105664, 17.032224, 60.063135, 18.233369);
        ctx.bezierCurveTo(61.327897, 19.009456, 62.045007000000005, 20.292194, 62.577165, 21.860283);
        ctx.bezierCurveTo(63.83674, 25.571821, 62.029826, 30.879896, 65.511335, 31.521349999999998);
        ctx.bezierCurveTo(68.243823, 32.024799, 66.781097, 24.159419, 68.59864, 21.432333);
        ctx.bezierCurveTo(70.018846, 19.301429, 73.557322, 19.940545, 74.228431, 17.249081);
        ctx.bezierCurveTo(74.825249, 14.855589, 73.308949, 12.019846000000001, 71.867549, 10.359021);
        ctx.bezierCurveTo(70.726976, 9.0448174, 67.509005, 8.6365044, 67.509005, 8.6365044);
        ctx.bezierCurveTo(67.509005, 8.6365044, 64.99800400000001, 5.9512823, 63.513655, 5.191464);
        ctx.bezierCurveTo(59.912877, 3.3482777, 55.911034, 3.3179662, 52.072468, 2.7307373);
        ctx.bezierCurveTo(47.612124, 2.0483804, 43.110028, 1.0338871, 38.6336, 1.5003475);
        ctx.bezierCurveTo(28.164436, 2.5912742, 15.444838, 1.1979489, 7.942134, 10.851155);
        ctx.bezierCurveTo(6.0091028, 13.338253, 5.4103279, 17.701849, 5.9444634, 21.186256);
        ctx.bezierCurveTo(6.2223452, 22.998997, 8.4869541, 25.615602, 8.4869541, 25.615602);
        ctx.bezierCurveTo(8.4869541, 25.615602, 13.214824, 33.575727, 15.216732, 32.075427);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "#ffffff";
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.font = "   15px ''";
        ctx.transform(0.05127862, -0.00944932, 0.00950064, 0.05100165, 74.009878, 66.41066);
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-431.99254, 205.92847);
        ctx.bezierCurveTo(-431.96934000000005, 205.91947000000002, -431.94154000000003, 205.92047, -431.93084000000005, 205.93147);
        ctx.bezierCurveTo(-431.92014000000006, 205.94217, -431.93884, 205.94977, -431.97304, 205.94836999999998);
        ctx.bezierCurveTo(-432.01054000000005, 205.94636999999997, -432.01814, 205.93937, -431.99244000000004, 205.92897);
        ctx.closePath();
        ctx.moveTo(-415.97326000000004, 205.92847);
        ctx.bezierCurveTo(-415.95006000000006, 205.91947000000002, -415.92226000000005, 205.92047, -415.91166000000004, 205.93147);
        ctx.bezierCurveTo(-415.90096000000005, 205.94217, -415.91966, 205.94977, -415.95386, 205.94836999999998);
        ctx.bezierCurveTo(-415.99136000000004, 205.94636999999997, -415.99896, 205.93937, -415.97326000000004, 205.92897);
        ctx.closePath();
        ctx.moveTo(-394.58205000000004, 205.92847);
        ctx.bezierCurveTo(-394.55885000000006, 205.91947000000002, -394.53105000000005, 205.92047, -394.52035000000006, 205.93147);
        ctx.bezierCurveTo(-394.5096500000001, 205.94217, -394.52835000000005, 205.94977, -394.56255000000004, 205.94836999999998);
        ctx.bezierCurveTo(-394.60005000000007, 205.94636999999997, -394.60765000000004, 205.93937, -394.58195000000006, 205.92897);
        ctx.closePath();
        ctx.moveTo(-378.75577000000004, 205.92847);
        ctx.bezierCurveTo(-378.73257000000007, 205.91947000000002, -378.70477000000005, 205.92047, -378.69417000000004, 205.93147);
        ctx.bezierCurveTo(-378.68347000000006, 205.94217, -378.70217, 205.94977, -378.73637, 205.94836999999998);
        ctx.bezierCurveTo(-378.77387000000004, 205.94636999999997, -378.78147, 205.93937, -378.75577000000004, 205.92897);
        ctx.closePath();
        ctx.moveTo(-363.34766, 205.89627000000002);
        ctx.bezierCurveTo(-363.32446000000004, 205.88727000000003, -363.29666000000003, 205.88827, -363.28596000000005, 205.89927);
        ctx.bezierCurveTo(-363.27526000000006, 205.90997000000002, -363.29396, 205.91757, -363.32816, 205.91617);
        ctx.bezierCurveTo(-363.36566000000005, 205.91416999999998, -363.37326, 205.90717, -363.34756000000004, 205.89677);
        ctx.closePath();
        ctx.moveTo(-428.39004, 205.21051000000003);
        ctx.bezierCurveTo(-428.39504, 204.98049000000003, -428.38904, 204.79231000000001, -428.37574, 204.79234000000002);
        ctx.bezierCurveTo(-428.36244, 204.79237000000003, -428.35164000000003, 204.98057000000003, -428.35164000000003, 205.21057000000002);
        ctx.bezierCurveTo(-428.35164000000003, 205.44056, -428.35764, 205.62874000000002, -428.36594, 205.62874000000002);
        ctx.bezierCurveTo(-428.37394, 205.62874000000002, -428.38464000000005, 205.44054000000003, -428.39004, 205.21051000000003);
        ctx.closePath();
        ctx.moveTo(-424.86176, 198.69670000000002);
        ctx.bezierCurveTo(-424.86176, 194.87524000000002, -424.85776, 193.31668000000002, -424.85376, 195.23325000000003);
        ctx.bezierCurveTo(-424.84876, 197.14983000000004, -424.84876, 200.27648000000002, -424.85376, 202.18138000000002);
        ctx.bezierCurveTo(-424.85876, 204.08628000000002, -424.86176, 202.51817000000003, -424.86176, 198.69670000000002);
        ctx.closePath();
        ctx.moveTo(-412.3519, 205.21057000000002);
        ctx.bezierCurveTo(-412.3519, 204.97173, -412.3469, 204.87402000000003, -412.3406, 204.99344000000002);
        ctx.bezierCurveTo(-412.3346, 205.11286, -412.3346, 205.30828000000002, -412.3406, 205.42770000000002);
        ctx.bezierCurveTo(-412.34659999999997, 205.54712, -412.3519, 205.44940000000003, -412.3519, 205.21057000000002);
        ctx.closePath();
        ctx.moveTo(-387.61203, 196.31633000000002);
        ctx.bezierCurveTo(-387.61203, 191.18565, -387.60803, 189.09153000000003, -387.60403, 191.66272000000004);
        ctx.bezierCurveTo(-387.59903, 194.23391000000004, -387.59903, 198.43173000000004, -387.60403, 200.99122000000003);
        ctx.bezierCurveTo(-387.60903, 203.55070000000003, -387.61203, 201.44700000000003, -387.61203, 196.31633000000002);
        ctx.closePath();
        ctx.moveTo(-371.78582, 198.69670000000002);
        ctx.bezierCurveTo(-371.78582, 194.87524000000002, -371.78182, 193.31668000000002, -371.77782, 195.23325000000003);
        ctx.bezierCurveTo(-371.77282, 197.14983000000004, -371.77282, 200.27648000000002, -371.77782, 202.18138000000002);
        ctx.bezierCurveTo(-371.78282, 204.08628000000002, -371.78582, 202.51817000000003, -371.78582, 198.69670000000002);
        ctx.closePath();
        ctx.moveTo(-359.25639, 204.49074000000002);
        ctx.bezierCurveTo(-359.25639, 204.48374, -359.23109, 204.45874, -359.20009, 204.43444000000002);
        ctx.bezierCurveTo(-359.14909, 204.39444000000003, -359.14788999999996, 204.39554, -359.18799, 204.44654000000003);
        ctx.bezierCurveTo(-359.22999, 204.50014000000002, -359.25639, 204.51714000000004, -359.25639, 204.49064);
        ctx.closePath();
        ctx.moveTo(-369.09957, 204.1973);
        ctx.bezierCurveTo(-369.17767000000003, 204.1177, -369.23439, 204.05255000000002, -369.22555000000006, 204.05255000000002);
        ctx.bezierCurveTo(-369.21655000000004, 204.05255000000002, -369.14555000000007, 204.11765000000003, -369.0674000000001, 204.1973);
        ctx.bezierCurveTo(-368.98930000000007, 204.2769, -368.9325800000001, 204.34205, -368.94142000000005, 204.34205);
        ctx.bezierCurveTo(-368.95042000000007, 204.34205, -369.02142000000003, 204.27695, -369.09957, 204.1973);
        ctx.closePath();
        ctx.moveTo(-383.99710000000005, 204.1893);
        ctx.bezierCurveTo(-384.03710000000007, 204.13830000000002, -384.03600000000006, 204.1371, -383.98500000000007, 204.1772);
        ctx.bezierCurveTo(-383.93140000000005, 204.2192, -383.91440000000006, 204.2456, -383.9408000000001, 204.2456);
        ctx.bezierCurveTo(-383.9478000000001, 204.2456, -383.97280000000006, 204.2203, -383.9971000000001, 204.1893);
        ctx.closePath();
        ctx.moveTo(-421.37543000000005, 204.06063);
        ctx.bezierCurveTo(-421.4154300000001, 204.00963000000002, -421.41433000000006, 204.00843, -421.36323000000004, 204.04853);
        ctx.bezierCurveTo(-421.30963, 204.09053, -421.29263000000003, 204.11693, -421.31913000000003, 204.11693);
        ctx.bezierCurveTo(-421.32613000000003, 204.11693, -421.35113, 204.09163, -421.37543000000005, 204.06063);
        ctx.closePath();
        ctx.moveTo(-400.04855000000003, 204.06063);
        ctx.bezierCurveTo(-400.08855000000005, 204.00963000000002, -400.08745000000005, 204.00843, -400.03645000000006, 204.04853);
        ctx.bezierCurveTo(-400.00545000000005, 204.07283, -399.98015000000004, 204.09813, -399.98015000000004, 204.10483);
        ctx.bezierCurveTo(-399.98015000000004, 204.13133, -400.00655000000006, 204.11382999999998, -400.04855000000003, 204.06063);
        ctx.closePath();
        ctx.moveTo(-437.45738000000006, 203.93196);
        ctx.lineTo(-437.53538000000003, 203.84346);
        ctx.lineTo(-437.44688, 203.92146);
        ctx.bezierCurveTo(-437.36418000000003, 203.99436, -437.34367000000003, 204.02035999999998, -437.36888000000005, 204.02035999999998);
        ctx.bezierCurveTo(-437.37488, 204.02035999999998, -437.41448, 203.98055999999997, -437.45738000000006, 203.93185999999997);
        ctx.closePath();
        ctx.moveTo(-437.66605000000004, 203.72287);
        ctx.lineTo(-437.76055, 203.61833000000001);
        ctx.lineTo(-437.65601000000004, 203.71283000000003);
        ctx.bezierCurveTo(-437.55861000000004, 203.80093000000002, -437.53668000000005, 203.82744000000002, -437.56151000000006, 203.82744000000002);
        ctx.bezierCurveTo(-437.56751, 203.82744000000002, -437.61411000000004, 203.78044000000003, -437.66605000000004, 203.72289000000004);
        ctx.closePath();
        ctx.moveTo(-421.77647, 203.65857);
        ctx.lineTo(-421.83777000000003, 203.58617);
        ctx.lineTo(-421.76537, 203.64747);
        ctx.bezierCurveTo(-421.69737000000003, 203.70507, -421.67837000000003, 203.73096999999999, -421.70407, 203.73096999999999);
        ctx.bezierCurveTo(-421.71007, 203.73096999999999, -421.74277, 203.69836999999998, -421.77647, 203.65857);
        ctx.closePath();
        ctx.moveTo(-364.08751, 203.3873);
        ctx.bezierCurveTo(-364.06431000000003, 203.37830000000002, -364.03651, 203.3793, -364.02591, 203.3903);
        ctx.bezierCurveTo(-364.01521, 203.401, -364.03391, 203.4086, -364.06811, 203.4072);
        ctx.bezierCurveTo(-364.10561, 203.40519999999998, -364.11321, 203.3982, -364.08751, 203.3878);
        ctx.closePath();
        ctx.moveTo(-432.37855, 202.71179);
        ctx.bezierCurveTo(-432.35535000000004, 202.70279000000002, -432.32755000000003, 202.70379, -432.31685000000004, 202.71479);
        ctx.bezierCurveTo(-432.30615000000006, 202.72549, -432.32485, 202.73309, -432.35905, 202.73169);
        ctx.bezierCurveTo(-432.39655000000005, 202.72968999999998, -432.40415, 202.72269, -432.37845000000004, 202.71229);
        ctx.closePath();
        ctx.moveTo(-416.35927000000004, 202.71179);
        ctx.bezierCurveTo(-416.33607000000006, 202.70279000000002, -416.30827000000005, 202.70379, -416.29757000000006, 202.71479);
        ctx.bezierCurveTo(-416.2868700000001, 202.72549, -416.30557000000005, 202.73309, -416.33977000000004, 202.73169);
        ctx.bezierCurveTo(-416.37727000000007, 202.72968999999998, -416.38487000000003, 202.72269, -416.35917000000006, 202.71229);
        ctx.closePath();
        ctx.moveTo(-395.12889, 202.71179);
        ctx.bezierCurveTo(-395.10569000000004, 202.70279000000002, -395.07789, 202.70379, -395.06729, 202.71479);
        ctx.bezierCurveTo(-395.05659, 202.72549, -395.07529, 202.73309, -395.10949, 202.73169);
        ctx.bezierCurveTo(-395.14699, 202.72968999999998, -395.15459, 202.72269, -395.12889, 202.71229);
        ctx.closePath();
        ctx.moveTo(-419.18395000000004, 201.55966);
        ctx.bezierCurveTo(-419.26205000000004, 201.48006, -419.31878000000006, 201.41490000000002, -419.30993000000007, 201.41490000000002);
        ctx.bezierCurveTo(-419.30093000000005, 201.41490000000002, -419.2299300000001, 201.48000000000002, -419.15179000000006, 201.55966);
        ctx.bezierCurveTo(-419.07369000000006, 201.63926, -419.01696000000004, 201.70441, -419.02581000000004, 201.70441);
        ctx.bezierCurveTo(-419.03481000000005, 201.70441, -419.10581, 201.63931, -419.18395000000004, 201.55966);
        ctx.closePath();
        ctx.moveTo(-392.27606000000003, 201.54356);
        ctx.bezierCurveTo(-392.24406000000005, 201.50816, -392.21056000000004, 201.47926, -392.20176000000004, 201.47926);
        ctx.bezierCurveTo(-392.19276, 201.47926, -392.21186000000006, 201.50826, -392.24386000000004, 201.54356);
        ctx.bezierCurveTo(-392.27586, 201.57896000000002, -392.30936, 201.60786000000002, -392.31816000000003, 201.60786000000002);
        ctx.bezierCurveTo(-392.32716000000005, 201.60786000000002, -392.30806, 201.57896000000002, -392.27606000000003, 201.54356);
        ctx.closePath();
        ctx.moveTo(-435.17517000000004, 201.51946);
        ctx.bezierCurveTo(-435.21517000000006, 201.46846000000002, -435.21407000000005, 201.46726, -435.16307000000006, 201.50736);
        ctx.bezierCurveTo(-435.13207000000006, 201.53166000000002, -435.10677000000004, 201.55696, -435.10677000000004, 201.56366);
        ctx.bezierCurveTo(-435.10677000000004, 201.59016, -435.13317000000006, 201.57265999999998, -435.17517000000004, 201.51956);
        ctx.closePath();
        ctx.moveTo(-397.94055000000003, 201.50336000000001);
        ctx.lineTo(-398.00185000000005, 201.43096000000003);
        ctx.lineTo(-397.92945000000003, 201.49226000000002);
        ctx.bezierCurveTo(-397.86145000000005, 201.54986000000002, -397.84245000000004, 201.57576, -397.86815, 201.57576);
        ctx.bezierCurveTo(-397.87415, 201.57576, -397.90685, 201.54316, -397.94055000000003, 201.50336000000001);
        ctx.closePath();
        ctx.moveTo(-357.86574, 201.25407);
        ctx.bezierCurveTo(-357.86574, 201.19217, -357.85874, 201.16677, -357.85104, 201.19777000000002);
        ctx.bezierCurveTo(-357.84304000000003, 201.22877000000003, -357.84304000000003, 201.27937000000003, -357.85104, 201.31035000000003);
        ctx.bezierCurveTo(-357.85904, 201.34135000000003, -357.86574, 201.31635000000003, -357.86574, 201.25405000000003);
        ctx.closePath();
        ctx.moveTo(-357.86674, 201.04498);
        ctx.bezierCurveTo(-357.8661, 200.99188, -357.85874, 200.97408000000001, -357.85074, 201.00538);
        ctx.bezierCurveTo(-357.84274, 201.03668, -357.84274, 201.08008, -357.85173999999995, 201.10188);
        ctx.bezierCurveTo(-357.86073999999996, 201.12368, -357.8672399999999, 201.09788, -357.86653999999993, 201.04497999999998);
        ctx.closePath();
        ctx.moveTo(-386.43005999999997, 198.90586000000002);
        ctx.bezierCurveTo(-386.43005999999997, 198.84396, -386.42305999999996, 198.81856000000002, -386.41535999999996, 198.84956000000003);
        ctx.bezierCurveTo(-386.40736, 198.88056000000003, -386.40736, 198.93116000000003, -386.41535999999996, 198.96214000000003);
        ctx.bezierCurveTo(-386.42335999999995, 198.99314000000004, -386.43005999999997, 198.96814000000003, -386.43005999999997, 198.90584000000004);
        ctx.closePath();
        ctx.moveTo(-436.35598999999996, 198.90586000000002);
        ctx.bezierCurveTo(-436.35598999999996, 198.86166000000003, -436.34898999999996, 198.84356000000002, -436.33978999999994, 198.86566000000002);
        ctx.bezierCurveTo(-436.3307899999999, 198.88776000000001, -436.3307899999999, 198.92396000000002, -436.33978999999994, 198.94606000000002);
        ctx.bezierCurveTo(-436.34878999999995, 198.96816, -436.35598999999996, 198.95006, -436.35598999999996, 198.90586000000002);
        ctx.closePath();
        ctx.moveTo(-399.10886999999997, 198.91926);
        ctx.bezierCurveTo(-399.10686999999996, 198.88176, -399.09986999999995, 198.87416000000002, -399.08946999999995, 198.89986000000002);
        ctx.bezierCurveTo(-399.08046999999993, 198.92306000000002, -399.08146999999997, 198.95086, -399.09246999999993, 198.96156000000002);
        ctx.bezierCurveTo(-399.1031699999999, 198.97226000000003, -399.11076999999995, 198.95356, -399.10936999999996, 198.91936);
        ctx.closePath();
        ctx.moveTo(-391.12886, 198.90586000000002);
        ctx.bezierCurveTo(-391.12886, 198.86166000000003, -391.12185999999997, 198.84356000000002, -391.11265999999995, 198.86566000000002);
        ctx.bezierCurveTo(-391.10365999999993, 198.88776000000001, -391.10365999999993, 198.92396000000002, -391.11265999999995, 198.94606000000002);
        ctx.bezierCurveTo(-391.12165999999996, 198.96816, -391.12886, 198.95006, -391.12886, 198.90586000000002);
        ctx.closePath();
        ctx.moveTo(-368.87831, 198.91386000000003);
        ctx.bezierCurveTo(-368.91831, 198.86286000000004, -368.91721, 198.86166000000003, -368.86621, 198.90176000000002);
        ctx.bezierCurveTo(-368.83521, 198.92606000000004, -368.80991, 198.95136000000002, -368.80991, 198.95806000000002);
        ctx.bezierCurveTo(-368.80991, 198.98456000000002, -368.83631, 198.96706, -368.87831, 198.91386000000003);
        ctx.closePath();
        ctx.moveTo(-412.35555, 198.74498000000003);
        ctx.bezierCurveTo(-412.35555, 198.66538000000003, -412.34955, 198.63280000000003, -412.34165, 198.67258000000004);
        ctx.bezierCurveTo(-412.33365000000003, 198.71238000000005, -412.33365000000003, 198.77752000000004, -412.34165, 198.81733000000003);
        ctx.bezierCurveTo(-412.34965, 198.85713000000004, -412.35555, 198.82433000000003, -412.35555, 198.74493000000004);
        ctx.closePath();
        ctx.moveTo(-428.37548, 198.72888000000003);
        ctx.bezierCurveTo(-428.37512, 198.65808000000004, -428.36848, 198.63298000000003, -428.36088, 198.67298000000002);
        ctx.bezierCurveTo(-428.35288, 198.71298000000002, -428.35388, 198.77088000000003, -428.36153, 198.80165000000002);
        ctx.bezierCurveTo(-428.36953, 198.83245000000002, -428.37593000000004, 198.79965, -428.37553, 198.72895000000003);
        ctx.closePath();
        ctx.moveTo(-369.07131999999996, 198.72088000000002);
        ctx.bezierCurveTo(-369.11132, 198.66988000000003, -369.11021999999997, 198.66868000000002, -369.05922, 198.70878000000002);
        ctx.bezierCurveTo(-369.02822, 198.73308000000003, -369.00291999999996, 198.75838000000002, -369.00291999999996, 198.76508);
        ctx.bezierCurveTo(-369.00291999999996, 198.79158, -369.02932, 198.77408, -369.07131999999996, 198.72098000000003);
        ctx.closePath();
        ctx.moveTo(-386.43005999999997, 198.58417000000003);
        ctx.bezierCurveTo(-386.43005999999997, 198.52227000000002, -386.42305999999996, 198.49687000000003, -386.41535999999996, 198.52787000000004);
        ctx.bezierCurveTo(-386.40736, 198.55887000000004, -386.40736, 198.60947000000004, -386.41535999999996, 198.64045000000004);
        ctx.bezierCurveTo(-386.42335999999995, 198.67145000000005, -386.43005999999997, 198.64645000000004, -386.43005999999997, 198.58415000000005);
        ctx.closePath();
        ctx.moveTo(-436.35598999999996, 198.58417000000003);
        ctx.bezierCurveTo(-436.35598999999996, 198.53997000000004, -436.34898999999996, 198.52187000000004, -436.33978999999994, 198.54397000000003);
        ctx.bezierCurveTo(-436.3307899999999, 198.56607000000002, -436.3307899999999, 198.60227000000003, -436.33978999999994, 198.62437000000003);
        ctx.bezierCurveTo(-436.34878999999995, 198.64647000000002, -436.35598999999996, 198.62837000000002, -436.35598999999996, 198.58417000000003);
        ctx.closePath();
        ctx.moveTo(-391.12886, 198.58417000000003);
        ctx.bezierCurveTo(-391.12886, 198.53997000000004, -391.12185999999997, 198.52187000000004, -391.11265999999995, 198.54397000000003);
        ctx.bezierCurveTo(-391.10365999999993, 198.56607000000002, -391.10365999999993, 198.60227000000003, -391.11265999999995, 198.62437000000003);
        ctx.bezierCurveTo(-391.12165999999996, 198.64647000000002, -391.12886, 198.62837000000002, -391.12886, 198.58417000000003);
        ctx.closePath();
        ctx.moveTo(-399.10886999999997, 198.53327000000002);
        ctx.bezierCurveTo(-399.10686999999996, 198.49577000000002, -399.09986999999995, 198.48817000000003, -399.08946999999995, 198.51387000000003);
        ctx.bezierCurveTo(-399.08046999999993, 198.53707000000003, -399.08146999999997, 198.56487, -399.09246999999993, 198.57557000000003);
        ctx.bezierCurveTo(-399.1031699999999, 198.58627000000004, -399.11076999999995, 198.56757000000002, -399.10936999999996, 198.53337000000002);
        ctx.closePath();
        ctx.moveTo(-382.09493999999995, 196.09517000000002);
        ctx.bezierCurveTo(-382.09493999999995, 196.08817000000002, -382.06963999999994, 196.06317, -382.03863999999993, 196.03887000000003);
        ctx.bezierCurveTo(-381.98763999999994, 195.99887000000004, -381.9864399999999, 195.99997000000002, -382.0264399999999, 196.05107000000004);
        ctx.bezierCurveTo(-382.0684399999999, 196.10467000000003, -382.0948399999999, 196.12167000000005, -382.0948399999999, 196.09517000000002);
        ctx.closePath();
        ctx.moveTo(-376.33874, 195.95453000000003);
        ctx.lineTo(-376.44959, 195.83390000000003);
        ctx.lineTo(-376.32896, 195.94475000000003);
        ctx.bezierCurveTo(-376.21668999999997, 196.04793000000004, -376.19355, 196.07515000000004, -376.21810999999997, 196.07515000000004);
        ctx.bezierCurveTo(-376.22310999999996, 196.07515000000004, -376.27781, 196.02085000000002, -376.33874, 195.95453000000003);
        ctx.closePath();
        ctx.moveTo(-364.28148999999996, 194.25019000000003);
        ctx.bezierCurveTo(-364.20579, 194.24319000000003, -364.09002, 194.24319000000003, -364.02414999999996, 194.25052000000002);
        ctx.bezierCurveTo(-363.95824999999996, 194.25752000000003, -364.02014999999994, 194.26302, -364.16170999999997, 194.26282000000003);
        ctx.bezierCurveTo(-364.30323999999996, 194.26282000000003, -364.35713999999996, 194.25682000000003, -364.28148999999996, 194.25022000000004);
        ctx.closePath();
        ctx.moveTo(-384.57181999999995, 193.87772000000004);
        ctx.bezierCurveTo(-384.57181999999995, 193.87172000000004, -384.5248199999999, 193.82512000000003, -384.4672699999999, 193.77317000000005);
        ctx.lineTo(-384.36272999999994, 193.67867000000004);
        ctx.lineTo(-384.4572299999999, 193.78322000000003);
        ctx.bezierCurveTo(-384.5453299999999, 193.88072000000003, -384.57183999999995, 193.90255000000002, -384.57183999999995, 193.87772000000004);
        ctx.closePath();
        ctx.moveTo(-400.31767999999994, 193.69478000000004);
        ctx.bezierCurveTo(-400.28567999999996, 193.65938000000003, -400.25217999999995, 193.63048000000003, -400.24337999999995, 193.63048000000003);
        ctx.bezierCurveTo(-400.23437999999993, 193.63048000000003, -400.25347999999997, 193.65938000000003, -400.28547999999995, 193.69478000000004);
        ctx.bezierCurveTo(-400.31747999999993, 193.73018000000005, -400.35097999999994, 193.75908000000004, -400.35977999999994, 193.75908000000004);
        ctx.bezierCurveTo(-400.36877999999996, 193.75908000000004, -400.3496799999999, 193.73008000000004, -400.31767999999994, 193.69478000000004);
        ctx.closePath();
        ctx.moveTo(-384.25014999999996, 193.55003000000005);
        ctx.bezierCurveTo(-384.20865, 193.50583000000006, -384.16734999999994, 193.46963000000005, -384.15854999999993, 193.46963000000005);
        ctx.bezierCurveTo(-384.1495499999999, 193.46963000000005, -384.17644999999993, 193.50583000000006, -384.21804999999995, 193.55003000000005);
        ctx.bezierCurveTo(-384.25964999999997, 193.59423000000004, -384.30084999999997, 193.63043000000005, -384.30965, 193.63043000000005);
        ctx.bezierCurveTo(-384.31865, 193.63043000000005, -384.29175, 193.59423000000004, -384.25014999999996, 193.55003000000005);
        ctx.closePath();
        ctx.moveTo(-428.37042999999994, 192.29550000000006);
        ctx.bezierCurveTo(-428.3704599999999, 191.99474000000006, -428.36542999999995, 191.86737000000005, -428.35972999999996, 192.01246000000006);
        ctx.bezierCurveTo(-428.35373, 192.15755000000007, -428.35373, 192.40363000000005, -428.35965999999996, 192.55930000000006);
        ctx.bezierCurveTo(-428.36565999999993, 192.71498000000005, -428.37046, 192.59630000000007, -428.37046, 192.29550000000006);
        ctx.closePath();
        ctx.moveTo(-412.3488899999999, 189.91513000000006);
        ctx.bezierCurveTo(-412.3488899999999, 188.30516000000006, -412.3448899999999, 187.65125000000006, -412.3398899999999, 188.46199000000007);
        ctx.bezierCurveTo(-412.3348899999999, 189.27273000000008, -412.3348899999999, 190.58998000000008, -412.3398899999999, 191.38921000000008);
        ctx.bezierCurveTo(-412.3448899999999, 192.18843000000007, -412.3488899999999, 191.52510000000007, -412.3488899999999, 189.9151300000001);
        ctx.closePath();
        ctx.moveTo(-364.89149999999995, 191.58193000000006);
        ctx.bezierCurveTo(-364.8683, 191.57293000000007, -364.84049999999996, 191.57393000000005, -364.82989999999995, 191.58493000000004);
        ctx.bezierCurveTo(-364.81919999999997, 191.59563000000006, -364.83789999999993, 191.60323000000005, -364.87209999999993, 191.60183000000004);
        ctx.bezierCurveTo(-364.90959999999995, 191.59983000000003, -364.9171999999999, 191.59283000000005, -364.89149999999995, 191.58243000000004);
        ctx.closePath();
        ctx.moveTo(-363.76564999999994, 191.58193000000006);
        ctx.bezierCurveTo(-363.74244999999996, 191.57293000000007, -363.71464999999995, 191.57393000000005, -363.70394999999996, 191.58493000000004);
        ctx.bezierCurveTo(-363.69325, 191.59563000000006, -363.71194999999994, 191.60323000000005, -363.74614999999994, 191.60183000000004);
        ctx.bezierCurveTo(-363.78364999999997, 191.59983000000003, -363.79124999999993, 191.59283000000005, -363.76554999999996, 191.58243000000004);
        ctx.closePath();
        ctx.moveTo(-407.29905999999994, 188.59627000000006);
        ctx.bezierCurveTo(-407.29904999999997, 187.64090000000007, -407.2950599999999, 187.25471000000007, -407.2900599999999, 187.73807000000005);
        ctx.bezierCurveTo(-407.28505999999993, 188.22142000000005, -407.28505999999993, 189.00309000000004, -407.2900599999999, 189.47510000000005);
        ctx.bezierCurveTo(-407.2950599999999, 189.94711000000007, -407.29905999999994, 189.55160000000006, -407.29905999999994, 188.59627000000006);
        ctx.closePath();
        ctx.moveTo(-358.3795799999999, 188.69277000000005);
        ctx.bezierCurveTo(-358.3792199999999, 188.62197000000006, -358.3725799999999, 188.59687000000005, -358.36497999999995, 188.63687000000004);
        ctx.bezierCurveTo(-358.35697999999996, 188.67687000000004, -358.35797999999994, 188.73477000000005, -358.3656199999999, 188.76554000000004);
        ctx.bezierCurveTo(-358.3736199999999, 188.79634000000004, -358.3799199999999, 188.76354000000003, -358.37961999999993, 188.69274000000004);
        ctx.closePath();
        ctx.moveTo(-359.6100399999999, 188.76107000000005);
        ctx.bezierCurveTo(-359.6100399999999, 188.75407000000004, -359.5847399999999, 188.72907000000004, -359.5537399999999, 188.70477000000005);
        ctx.bezierCurveTo(-359.5027399999999, 188.66477000000006, -359.5016399999999, 188.66587000000004, -359.5415399999999, 188.71687000000006);
        ctx.bezierCurveTo(-359.58353999999986, 188.77047000000005, -359.6099399999999, 188.78747000000007, -359.6099399999999, 188.76097000000004);
        ctx.closePath();
        ctx.moveTo(-359.59703999999994, 187.92883000000003);
        ctx.lineTo(-359.65833999999995, 187.85643000000005);
        ctx.lineTo(-359.58593999999994, 187.91773000000003);
        ctx.bezierCurveTo(-359.51793999999995, 187.97533000000004, -359.49893999999995, 188.00123000000002, -359.5246399999999, 188.00123000000002);
        ctx.bezierCurveTo(-359.5306399999999, 188.00123000000002, -359.5633399999999, 187.96863000000002, -359.59703999999994, 187.92883000000003);
        ctx.closePath();
        ctx.moveTo(-361.18625999999995, 187.69956000000002);
        ctx.bezierCurveTo(-361.18625999999995, 187.69256000000001, -361.16095999999993, 187.66756, -361.1299599999999, 187.64326000000003);
        ctx.bezierCurveTo(-361.07895999999994, 187.60326000000003, -361.0777599999999, 187.60436, -361.11785999999995, 187.65536000000003);
        ctx.bezierCurveTo(-361.1598599999999, 187.70896000000002, -361.18625999999995, 187.72596000000004, -361.18625999999995, 187.69956000000002);
        ctx.closePath();
        ctx.moveTo(-358.88935999999995, 187.44632000000001);
        ctx.lineTo(-358.95065999999997, 187.37392000000003);
        ctx.lineTo(-358.87825999999995, 187.43522000000002);
        ctx.bezierCurveTo(-358.81025999999997, 187.49282000000002, -358.79125999999997, 187.51872, -358.81695999999994, 187.51872);
        ctx.bezierCurveTo(-358.8229599999999, 187.51872, -358.85565999999994, 187.48612, -358.88935999999995, 187.44632000000001);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-432.08905, 205.92847);
        ctx.bezierCurveTo(-432.06585, 205.91947000000002, -432.03805, 205.92047, -432.02735, 205.93147);
        ctx.bezierCurveTo(-432.01665, 205.94217, -432.03535, 205.94977, -432.06955, 205.94836999999998);
        ctx.bezierCurveTo(-432.10705, 205.94636999999997, -432.11465, 205.93937, -432.08895, 205.92897);
        ctx.closePath();
        ctx.moveTo(-416.06976, 205.92847);
        ctx.bezierCurveTo(-416.04656, 205.91947000000002, -416.01876, 205.92047, -416.00816, 205.93147);
        ctx.bezierCurveTo(-415.99746, 205.94217, -416.01615999999996, 205.94977, -416.05035999999996, 205.94836999999998);
        ctx.bezierCurveTo(-416.08786, 205.94636999999997, -416.09545999999995, 205.93937, -416.06976, 205.92897);
        ctx.closePath();
        ctx.moveTo(-364.82736, 205.89627000000002);
        ctx.bezierCurveTo(-364.80416, 205.88727000000003, -364.77636, 205.88827, -364.76566, 205.89927);
        ctx.bezierCurveTo(-364.75496000000004, 205.90997000000002, -364.77366, 205.91757, -364.80786, 205.91617);
        ctx.bezierCurveTo(-364.84536, 205.91416999999998, -364.85296, 205.90717, -364.82726, 205.89677);
        ctx.closePath();
        ctx.moveTo(-407.29845, 198.53587000000002);
        ctx.bezierCurveTo(-407.29845, 194.69671000000002, -407.29445, 193.13092, -407.29045, 195.05634);
        ctx.bezierCurveTo(-407.28545, 196.98175, -407.28545, 200.12288, -407.29045, 202.03663);
        ctx.bezierCurveTo(-407.29545, 203.95037, -407.29845, 202.37503, -407.29845, 198.53587);
        ctx.closePath();
        ctx.moveTo(-359.01514, 204.24555);
        ctx.bezierCurveTo(-358.98314, 204.21015, -358.94964, 204.18125, -358.94084, 204.18125);
        ctx.bezierCurveTo(-358.93183999999997, 204.18125, -358.95094, 204.21015, -358.98294, 204.24555);
        ctx.bezierCurveTo(-359.01493999999997, 204.28095000000002, -359.04843999999997, 204.30985, -359.05724, 204.30985);
        ctx.bezierCurveTo(-359.06624, 204.30985, -359.04713999999996, 204.28085000000002, -359.01514, 204.24555);
        ctx.closePath();
        ctx.moveTo(-421.50243, 203.93192000000002);
        ctx.lineTo(-421.58043, 203.84342);
        ctx.lineTo(-421.49192999999997, 203.92142);
        ctx.bezierCurveTo(-421.44332999999995, 203.96432000000001, -421.40342999999996, 204.00412, -421.40342999999996, 204.00992000000002);
        ctx.bezierCurveTo(-421.40342999999996, 204.03512000000003, -421.42942999999997, 204.01492000000002, -421.50233, 203.93192000000002);
        ctx.closePath();
        ctx.moveTo(-400.14505, 203.96412);
        ctx.bezierCurveTo(-400.18505000000005, 203.91312000000002, -400.18395000000004, 203.91192, -400.13295000000005, 203.95192);
        ctx.bezierCurveTo(-400.07935000000003, 203.99392, -400.06235000000004, 204.02032, -400.08875000000006, 204.02032);
        ctx.bezierCurveTo(-400.09575000000007, 204.02032, -400.12075000000004, 203.99502, -400.1450500000001, 203.96402);
        ctx.closePath();
        ctx.moveTo(-421.66493, 203.77111000000002);
        ctx.bezierCurveTo(-421.70493000000005, 203.72011000000003, -421.70383000000004, 203.71901000000003, -421.65283000000005, 203.75901000000002);
        ctx.bezierCurveTo(-421.62183000000005, 203.78331000000003, -421.59653000000003, 203.80861000000002, -421.59653000000003, 203.81531);
        ctx.bezierCurveTo(-421.59653000000003, 203.84181, -421.62293000000005, 203.82431, -421.66493, 203.77111000000002);
        ctx.closePath();
        ctx.moveTo(-400.53106, 203.57811);
        ctx.bezierCurveTo(-400.57106000000005, 203.52711000000002, -400.56996000000004, 203.52591, -400.51896000000005, 203.56591);
        ctx.bezierCurveTo(-400.48796000000004, 203.59021, -400.46266, 203.61551, -400.46266, 203.62221);
        ctx.bezierCurveTo(-400.46266, 203.64871, -400.48906000000005, 203.63120999999998, -400.53106, 203.57801);
        ctx.closePath();
        ctx.moveTo(-432.52470000000005, 202.71143);
        ctx.bezierCurveTo(-432.49340000000007, 202.70343, -432.45000000000005, 202.70343, -432.42820000000006, 202.71243);
        ctx.bezierCurveTo(-432.4064000000001, 202.72143, -432.4322000000001, 202.72793000000001, -432.48510000000005, 202.72723000000002);
        ctx.bezierCurveTo(-432.5382, 202.72659000000002, -432.55600000000004, 202.71923, -432.52470000000005, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-432.26736000000005, 202.71143);
        ctx.bezierCurveTo(-432.23606000000007, 202.70343, -432.19266000000005, 202.70343, -432.17086000000006, 202.71243);
        ctx.bezierCurveTo(-432.1490600000001, 202.72143, -432.1748600000001, 202.72793000000001, -432.22776000000005, 202.72723000000002);
        ctx.bezierCurveTo(-432.28086, 202.72659000000002, -432.29866000000004, 202.71923, -432.26736000000005, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-416.5054200000001, 202.71143);
        ctx.bezierCurveTo(-416.4741200000001, 202.70343, -416.43072000000006, 202.70343, -416.4089200000001, 202.71243);
        ctx.bezierCurveTo(-416.3871200000001, 202.72143, -416.4129200000001, 202.72793000000001, -416.46582000000006, 202.72723000000002);
        ctx.bezierCurveTo(-416.51892000000004, 202.72659000000002, -416.53672000000006, 202.71923, -416.5054200000001, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-416.2647800000001, 202.71243);
        ctx.bezierCurveTo(-416.24268000000006, 202.70343000000003, -416.2064800000001, 202.70343000000003, -416.1843800000001, 202.71243);
        ctx.bezierCurveTo(-416.16228000000007, 202.72143, -416.18038000000007, 202.72863, -416.2245800000001, 202.72863);
        ctx.bezierCurveTo(-416.2687800000001, 202.72863, -416.2868800000001, 202.72163, -416.26478000000014, 202.71243);
        ctx.closePath();
        ctx.moveTo(-395.2750400000001, 202.71143);
        ctx.bezierCurveTo(-395.2437400000001, 202.70343, -395.2003400000001, 202.70343, -395.1785400000001, 202.71243);
        ctx.bezierCurveTo(-395.1567400000001, 202.72143, -395.18254000000013, 202.72793000000001, -395.2354400000001, 202.72723000000002);
        ctx.bezierCurveTo(-395.28854000000007, 202.72659000000002, -395.3063400000001, 202.71923, -395.2750400000001, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-395.0177100000001, 202.71143);
        ctx.bezierCurveTo(-394.9864100000001, 202.70343, -394.9430100000001, 202.70343, -394.9212100000001, 202.71243);
        ctx.bezierCurveTo(-394.8994100000001, 202.72143, -394.9252100000001, 202.72793000000001, -394.9781100000001, 202.72723000000002);
        ctx.bezierCurveTo(-395.03121000000004, 202.72659000000002, -395.04901000000007, 202.71923, -395.0177100000001, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-379.28854000000007, 202.71143);
        ctx.bezierCurveTo(-379.25754000000006, 202.70343, -379.2069400000001, 202.70343, -379.17595000000006, 202.71143);
        ctx.bezierCurveTo(-379.14495000000005, 202.71943000000002, -379.1699500000001, 202.72613, -379.2322500000001, 202.72613);
        ctx.bezierCurveTo(-379.29415000000006, 202.72613, -379.3194500000001, 202.71913, -379.2885500000001, 202.71143);
        ctx.closePath();
        ctx.moveTo(-379.0305900000001, 202.71143);
        ctx.bezierCurveTo(-378.9992900000001, 202.70343, -378.95589000000007, 202.70343, -378.9340900000001, 202.71243);
        ctx.bezierCurveTo(-378.9122900000001, 202.72143, -378.9380900000001, 202.72793000000001, -378.99099000000007, 202.72723000000002);
        ctx.bezierCurveTo(-379.04409000000004, 202.72659000000002, -379.06189000000006, 202.71923, -379.0305900000001, 202.71123000000003);
        ctx.closePath();
        ctx.moveTo(-361.9745300000001, 202.66943);
        ctx.bezierCurveTo(-361.9425300000001, 202.63403, -361.9090300000001, 202.60513, -361.9002300000001, 202.60513);
        ctx.bezierCurveTo(-361.89123000000006, 202.60513, -361.9103300000001, 202.63403, -361.9423300000001, 202.66943);
        ctx.bezierCurveTo(-361.97433000000007, 202.70483000000002, -362.00783000000007, 202.73373, -362.0166300000001, 202.73373);
        ctx.bezierCurveTo(-362.0256300000001, 202.73373, -362.00653000000005, 202.70473, -361.9745300000001, 202.66943);
        ctx.closePath();
        ctx.moveTo(-392.4208100000001, 201.69226);
        ctx.bezierCurveTo(-392.4208100000001, 201.68526, -392.39551000000006, 201.66026, -392.36451000000005, 201.63596);
        ctx.bezierCurveTo(-392.31351000000006, 201.59596000000002, -392.31231, 201.59706, -392.35231000000005, 201.64806000000002);
        ctx.bezierCurveTo(-392.39431, 201.70166, -392.42071000000004, 201.71866000000003, -392.42071000000004, 201.69216);
        ctx.closePath();
        ctx.moveTo(-429.5418000000001, 201.55966);
        ctx.bezierCurveTo(-429.4818000000001, 201.49776, -429.4254400000001, 201.44707, -429.4166000000001, 201.44707);
        ctx.bezierCurveTo(-429.40760000000006, 201.44707, -429.4496000000001, 201.49777, -429.5096000000001, 201.55966);
        ctx.bezierCurveTo(-429.5696000000001, 201.62156000000002, -429.6259600000001, 201.67224000000002, -429.6348000000001, 201.67224000000002);
        ctx.bezierCurveTo(-429.6438000000001, 201.67224000000002, -429.6018000000001, 201.62154, -429.5418000000001, 201.55966);
        ctx.closePath();
        ctx.moveTo(-397.8290100000001, 201.61596);
        ctx.bezierCurveTo(-397.8690100000001, 201.56496, -397.8679100000001, 201.56376, -397.8169100000001, 201.60376);
        ctx.bezierCurveTo(-397.7633100000001, 201.64576, -397.7463100000001, 201.67216, -397.77271000000013, 201.67216);
        ctx.bezierCurveTo(-397.77971000000014, 201.67216, -397.8047100000001, 201.64686, -397.82901000000015, 201.61586);
        ctx.closePath();
        ctx.moveTo(-413.5868500000001, 201.56356);
        ctx.bezierCurveTo(-413.5868500000001, 201.55656, -413.56155000000007, 201.53155999999998, -413.53055000000006, 201.50726);
        ctx.bezierCurveTo(-413.4795500000001, 201.46726, -413.47835000000003, 201.46836, -413.5184500000001, 201.51936);
        ctx.bezierCurveTo(-413.56045000000006, 201.57296, -413.5868500000001, 201.58996000000002, -413.5868500000001, 201.56346);
        ctx.closePath();
        ctx.moveTo(-435.2716700000001, 201.42292);
        ctx.bezierCurveTo(-435.3116700000001, 201.37192000000002, -435.3105700000001, 201.37072, -435.2595700000001, 201.41082);
        ctx.bezierCurveTo(-435.2059700000001, 201.45282, -435.1889700000001, 201.47922, -435.2153700000001, 201.47922);
        ctx.bezierCurveTo(-435.2223700000001, 201.47922, -435.2473700000001, 201.45392, -435.27167000000014, 201.42292);
        ctx.closePath();
        ctx.moveTo(-398.0541800000001, 201.39072000000002);
        ctx.bezierCurveTo(-398.0941800000001, 201.33972000000003, -398.0930800000001, 201.33852000000002, -398.0420800000001, 201.37862);
        ctx.bezierCurveTo(-398.0110800000001, 201.40292000000002, -397.9857800000001, 201.42822, -397.9857800000001, 201.43492);
        ctx.bezierCurveTo(-397.9857800000001, 201.46142, -398.0121800000001, 201.44392, -398.0541800000001, 201.39072000000002);
        ctx.closePath();
        ctx.moveTo(-366.7488200000001, 201.20308000000003);
        ctx.bezierCurveTo(-366.74682000000007, 201.16558000000003, -366.73982000000007, 201.15798000000004, -366.72942000000006, 201.18368000000004);
        ctx.bezierCurveTo(-366.72042000000005, 201.20688000000004, -366.7214200000001, 201.23468000000003, -366.73242000000005, 201.24538000000004);
        ctx.bezierCurveTo(-366.74312000000003, 201.25608000000005, -366.75072000000006, 201.23738000000003, -366.74932000000007, 201.20318000000003);
        ctx.closePath();
        ctx.moveTo(-428.3787000000001, 198.90580000000003);
        ctx.bezierCurveTo(-428.3787000000001, 198.86160000000004, -428.3717000000001, 198.84350000000003, -428.36250000000007, 198.86560000000003);
        ctx.bezierCurveTo(-428.35350000000005, 198.88770000000002, -428.35350000000005, 198.92390000000003, -428.36250000000007, 198.94600000000003);
        ctx.bezierCurveTo(-428.3715000000001, 198.96810000000002, -428.3787000000001, 198.95000000000002, -428.3787000000001, 198.90580000000003);
        ctx.closePath();
        ctx.moveTo(-412.36196000000007, 198.91920000000002);
        ctx.bezierCurveTo(-412.35996000000006, 198.88170000000002, -412.35296000000005, 198.87410000000003, -412.34256000000005, 198.89980000000003);
        ctx.bezierCurveTo(-412.33356000000003, 198.92300000000003, -412.33456000000007, 198.95080000000002, -412.34556000000003, 198.96150000000003);
        ctx.bezierCurveTo(-412.35626, 198.97220000000004, -412.36386000000005, 198.95350000000002, -412.36246000000006, 198.91930000000002);
        ctx.closePath();
        ctx.moveTo(-368.9750000000001, 198.81734000000003);
        ctx.bezierCurveTo(-369.0150000000001, 198.76634000000004, -369.0139000000001, 198.76514000000003, -368.9629000000001, 198.80514000000002);
        ctx.bezierCurveTo(-368.9093000000001, 198.84714000000002, -368.8923000000001, 198.87354000000002, -368.9187000000001, 198.87354000000002);
        ctx.bezierCurveTo(-368.9257000000001, 198.87354000000002, -368.9507000000001, 198.84824000000003, -368.97500000000014, 198.81724000000003);
        ctx.closePath();
        ctx.moveTo(-386.4326300000001, 198.74494000000004);
        ctx.bezierCurveTo(-386.4326300000001, 198.70074000000005, -386.42563000000007, 198.68264000000005, -386.41643000000005, 198.70474000000004);
        ctx.bezierCurveTo(-386.40743000000003, 198.72684000000004, -386.40743000000003, 198.76304000000005, -386.41643000000005, 198.78514000000004);
        ctx.bezierCurveTo(-386.42543000000006, 198.80724000000004, -386.4326300000001, 198.78914000000003, -386.4326300000001, 198.74494000000004);
        ctx.closePath();
        ctx.moveTo(-428.38124000000005, 198.56534000000005);
        ctx.bezierCurveTo(-428.37924000000004, 198.52784000000005, -428.37224000000003, 198.52024000000006, -428.36184000000003, 198.54594000000006);
        ctx.bezierCurveTo(-428.35284, 198.56914000000006, -428.35384000000005, 198.59694000000005, -428.36484, 198.60754000000006);
        ctx.bezierCurveTo(-428.37554, 198.61824000000007, -428.38314, 198.59954000000005, -428.38174000000004, 198.56534000000005);
        ctx.closePath();
        ctx.moveTo(-412.36196000000007, 198.56534000000005);
        ctx.bezierCurveTo(-412.35996000000006, 198.52784000000005, -412.35296000000005, 198.52024000000006, -412.34256000000005, 198.54594000000006);
        ctx.bezierCurveTo(-412.33356000000003, 198.56914000000006, -412.33456000000007, 198.59694000000005, -412.34556000000003, 198.60754000000006);
        ctx.bezierCurveTo(-412.35626, 198.61824000000007, -412.36386000000005, 198.59954000000005, -412.36246000000006, 198.56534000000005);
        ctx.closePath();
        ctx.moveTo(-361.88903000000005, 196.04290000000006);
        ctx.bezierCurveTo(-361.88903000000005, 195.99870000000007, -361.88203000000004, 195.98060000000007, -361.87283, 196.00270000000006);
        ctx.bezierCurveTo(-361.86383, 196.02480000000006, -361.86383, 196.06100000000006, -361.87283, 196.08310000000006);
        ctx.bezierCurveTo(-361.88183000000004, 196.10520000000005, -361.88903000000005, 196.08710000000005, -361.88903000000005, 196.04290000000006);
        ctx.closePath();
        ctx.moveTo(-419.15179000000006, 195.89814000000007);
        ctx.bezierCurveTo(-419.09179000000006, 195.83624000000006, -419.0354300000001, 195.78556000000006, -419.0265800000001, 195.78556000000006);
        ctx.bezierCurveTo(-419.01758000000007, 195.78556000000006, -419.0595800000001, 195.83626000000007, -419.1195800000001, 195.89814000000007);
        ctx.bezierCurveTo(-419.1795800000001, 195.96004000000008, -419.2359400000001, 196.01073000000008, -419.2447800000001, 196.01073000000008);
        ctx.bezierCurveTo(-419.2537800000001, 196.01073000000008, -419.2117800000001, 195.96003000000007, -419.1517800000001, 195.89814000000007);
        ctx.closePath();
        ctx.moveTo(-364.50770000000006, 194.25239000000008);
        ctx.bezierCurveTo(-364.48560000000003, 194.2433900000001, -364.4494000000001, 194.2433900000001, -364.42730000000006, 194.25239000000008);
        ctx.bezierCurveTo(-364.40520000000004, 194.26139000000006, -364.42330000000004, 194.26859000000007, -364.4675000000001, 194.26859000000007);
        ctx.bezierCurveTo(-364.5117000000001, 194.26859000000007, -364.5298000000001, 194.26159000000007, -364.5077000000001, 194.25239000000008);
        ctx.closePath();
        ctx.moveTo(-437.39061000000004, 193.52171000000007);
        ctx.bezierCurveTo(-437.39061000000004, 193.51471000000006, -437.36531, 193.48971000000006, -437.33431, 193.46541000000008);
        ctx.bezierCurveTo(-437.28331000000003, 193.42541000000008, -437.28211, 193.42651000000006, -437.32221000000004, 193.47751000000008);
        ctx.bezierCurveTo(-437.36421, 193.53111000000007, -437.39061000000004, 193.5481100000001, -437.39061000000004, 193.52171000000007);
        ctx.closePath();
        ctx.moveTo(-364.79519000000005, 191.58184000000006);
        ctx.bezierCurveTo(-364.7719900000001, 191.57284000000007, -364.74419000000006, 191.57384000000005, -364.73359000000005, 191.58484000000004);
        ctx.bezierCurveTo(-364.72289000000006, 191.59554000000006, -364.74159000000003, 191.60314000000005, -364.77579000000003, 191.60174000000004);
        ctx.bezierCurveTo(-364.81329000000005, 191.59974000000003, -364.82089, 191.59274000000005, -364.79519000000005, 191.58234000000004);
        ctx.closePath();
        ctx.moveTo(-363.8623400000001, 191.58184000000006);
        ctx.bezierCurveTo(-363.8391400000001, 191.57284000000007, -363.8113400000001, 191.57384000000005, -363.8006400000001, 191.58484000000004);
        ctx.bezierCurveTo(-363.7899400000001, 191.59554000000006, -363.8086400000001, 191.60314000000005, -363.8428400000001, 191.60174000000004);
        ctx.bezierCurveTo(-363.8803400000001, 191.59974000000003, -363.88794000000007, 191.59274000000005, -363.8622400000001, 191.58234000000004);
        ctx.closePath();
        ctx.moveTo(-360.18120000000005, 190.16629000000006);
        ctx.bezierCurveTo(-360.15020000000004, 190.15829000000005, -360.09960000000007, 190.15829000000005, -360.06862000000007, 190.16629000000006);
        ctx.bezierCurveTo(-360.03762000000006, 190.17429000000007, -360.0626200000001, 190.18099000000007, -360.1249200000001, 190.18099000000007);
        ctx.bezierCurveTo(-360.18682000000007, 190.18099000000007, -360.2121200000001, 190.17399000000006, -360.1812200000001, 190.16629000000006);
        ctx.closePath();
        ctx.moveTo(-360.13090000000005, 187.20710000000005);
        ctx.bezierCurveTo(-360.1077000000001, 187.19810000000007, -360.07990000000007, 187.19910000000004, -360.06930000000006, 187.21010000000004);
        ctx.bezierCurveTo(-360.05860000000007, 187.22080000000005, -360.07730000000004, 187.22840000000005, -360.11150000000004, 187.22700000000003);
        ctx.bezierCurveTo(-360.14900000000006, 187.22500000000002, -360.1566, 187.21800000000005, -360.13090000000005, 187.20760000000004);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-432.89524, 205.92914);
        ctx.bezierCurveTo(-432.87314, 205.92014, -432.83694, 205.92014, -432.81484, 205.92914);
        ctx.bezierCurveTo(-432.79274, 205.93813999999998, -432.81084, 205.94534, -432.85504000000003, 205.94534);
        ctx.bezierCurveTo(-432.89924, 205.94534, -432.91734, 205.93833999999998, -432.89524000000006, 205.92914);
        ctx.closePath();
        ctx.moveTo(-416.87394, 205.92846);
        ctx.bezierCurveTo(-416.85074000000003, 205.91946000000002, -416.82294, 205.92046, -416.81234, 205.93146);
        ctx.bezierCurveTo(-416.80164, 205.94216, -416.82034, 205.94976, -416.85454, 205.94835999999998);
        ctx.bezierCurveTo(-416.89204, 205.94635999999997, -416.89964, 205.93936, -416.87394, 205.92896);
        ctx.closePath();
        ctx.moveTo(-416.16626, 205.92846);
        ctx.bezierCurveTo(-416.14306000000005, 205.91946000000002, -416.11526000000003, 205.92046, -416.10456000000005, 205.93146);
        ctx.bezierCurveTo(-416.09386000000006, 205.94216, -416.11256000000003, 205.94976, -416.14676000000003, 205.94835999999998);
        ctx.bezierCurveTo(-416.18426000000005, 205.94635999999997, -416.19186, 205.93936, -416.16616000000005, 205.92896);
        ctx.closePath();
        ctx.moveTo(-395.48474000000004, 205.92914);
        ctx.bezierCurveTo(-395.46264, 205.92014, -395.42644000000007, 205.92014, -395.40434000000005, 205.92914);
        ctx.bezierCurveTo(-395.38224, 205.93813999999998, -395.40034, 205.94534, -395.4445400000001, 205.94534);
        ctx.bezierCurveTo(-395.48874000000006, 205.94534, -395.50684000000007, 205.93833999999998, -395.4847400000001, 205.92914);
        ctx.closePath();
        ctx.moveTo(-394.74289000000005, 205.92846);
        ctx.bezierCurveTo(-394.71969000000007, 205.91946000000002, -394.69189000000006, 205.92046, -394.6811900000001, 205.93146);
        ctx.bezierCurveTo(-394.6704900000001, 205.94216, -394.68919000000005, 205.94976, -394.72339000000005, 205.94835999999998);
        ctx.bezierCurveTo(-394.7608900000001, 205.94635999999997, -394.76849000000004, 205.93936, -394.74279000000007, 205.92896);
        ctx.closePath();
        ctx.moveTo(-379.65846000000005, 205.92914);
        ctx.bezierCurveTo(-379.63636, 205.92014, -379.6001600000001, 205.92014, -379.57806000000005, 205.92914);
        ctx.bezierCurveTo(-379.55596, 205.93813999999998, -379.57406000000003, 205.94534, -379.6182600000001, 205.94534);
        ctx.bezierCurveTo(-379.66246000000007, 205.94534, -379.68056000000007, 205.93833999999998, -379.6584600000001, 205.92914);
        ctx.closePath();
        ctx.moveTo(-378.91661000000005, 205.92846);
        ctx.bezierCurveTo(-378.8934100000001, 205.91946000000002, -378.86561000000006, 205.92046, -378.8549100000001, 205.93146);
        ctx.bezierCurveTo(-378.8442100000001, 205.94216, -378.86291000000006, 205.94976, -378.89711000000005, 205.94835999999998);
        ctx.bezierCurveTo(-378.9346100000001, 205.94635999999997, -378.94221000000005, 205.93936, -378.9165100000001, 205.92896);
        ctx.closePath();
        ctx.moveTo(-400.41743, 203.69069);
        ctx.lineTo(-400.47873000000004, 203.61829);
        ctx.lineTo(-400.40633, 203.67959);
        ctx.bezierCurveTo(-400.33833000000004, 203.73719, -400.31933000000004, 203.76308999999998, -400.34503, 203.76308999999998);
        ctx.bezierCurveTo(-400.35103, 203.76308999999998, -400.38373, 203.73048999999997, -400.41743, 203.69069);
        ctx.closePath();
        ctx.moveTo(-413.49035000000003, 201.46705);
        ctx.bezierCurveTo(-413.49035000000003, 201.46005, -413.46505, 201.43505, -413.43405, 201.41075);
        ctx.bezierCurveTo(-413.38305, 201.37075000000002, -413.38185, 201.37185, -413.42195000000004, 201.42285);
        ctx.bezierCurveTo(-413.46395, 201.47645, -413.49035000000003, 201.49345000000002, -413.49035000000003, 201.46695);
        ctx.closePath();
        ctx.moveTo(-366.74882, 201.2996);
        ctx.bezierCurveTo(-366.74682, 201.2621, -366.73982, 201.2545, -366.72942, 201.2802);
        ctx.bezierCurveTo(-366.72042, 201.3034, -366.72142, 201.3312, -366.73242, 201.3419);
        ctx.bezierCurveTo(-366.74312, 201.35260000000002, -366.75072, 201.3339, -366.74932, 201.2997);
        ctx.closePath();
        ctx.moveTo(-439.6694, 199.06665999999998);
        ctx.bezierCurveTo(-439.6694, 199.02246, -439.6624, 199.00436, -439.65319999999997, 199.02646);
        ctx.bezierCurveTo(-439.64419999999996, 199.04855999999998, -439.64419999999996, 199.08476, -439.65319999999997, 199.10685999999998);
        ctx.bezierCurveTo(-439.6622, 199.12895999999998, -439.6694, 199.11085999999997, -439.6694, 199.06665999999998);
        ctx.closePath();
        ctx.moveTo(-383.11821, 198.72889999999998);
        ctx.bezierCurveTo(-383.11757, 198.67579999999998, -383.11021, 198.658, -383.10220999999996, 198.68929999999997);
        ctx.bezierCurveTo(-383.09421, 198.72059999999996, -383.09421, 198.76399999999998, -383.10320999999993, 198.78579999999997);
        ctx.bezierCurveTo(-383.11220999999995, 198.80759999999998, -383.1187099999999, 198.78179999999998, -383.1180099999999, 198.72889999999995);
        ctx.closePath();
        ctx.moveTo(-439.67193999999995, 198.40454999999997);
        ctx.bezierCurveTo(-439.66993999999994, 198.36704999999998, -439.66293999999994, 198.35944999999998, -439.65253999999993, 198.38514999999998);
        ctx.bezierCurveTo(-439.6435399999999, 198.40834999999998, -439.64453999999995, 198.43614999999997, -439.6555399999999, 198.44684999999998);
        ctx.bezierCurveTo(-439.6662399999999, 198.45755, -439.6738399999999, 198.43884999999997, -439.67243999999994, 198.40464999999998);
        ctx.closePath();
        ctx.moveTo(-402.42229, 198.37234999999998);
        ctx.bezierCurveTo(-402.42028999999997, 198.33485, -402.41328999999996, 198.32725, -402.40288999999996, 198.35295);
        ctx.bezierCurveTo(-402.39388999999994, 198.37615, -402.39489, 198.40394999999998, -402.40588999999994, 198.41465);
        ctx.bezierCurveTo(-402.4165899999999, 198.42535, -402.42418999999995, 198.40664999999998, -402.42278999999996, 198.37245);
        ctx.closePath();
        ctx.moveTo(-370.05951, 196.26807999999997);
        ctx.bezierCurveTo(-370.05951, 196.22387999999998, -370.05251, 196.20577999999998, -370.04330999999996, 196.22787999999997);
        ctx.bezierCurveTo(-370.03430999999995, 196.24997999999997, -370.03430999999995, 196.28617999999997, -370.04330999999996, 196.30827999999997);
        ctx.bezierCurveTo(-370.05231, 196.33037999999996, -370.05951, 196.31227999999996, -370.05951, 196.26807999999997);
        ctx.closePath();
        ctx.moveTo(-435.26757, 196.06500999999997);
        ctx.bezierCurveTo(-435.26757, 196.05900999999997, -435.22056999999995, 196.01240999999996, -435.16303, 195.96045999999998);
        ctx.lineTo(-435.05848, 195.86595999999997);
        ctx.lineTo(-435.15297999999996, 195.97049999999996);
        ctx.bezierCurveTo(-435.24107999999995, 196.06789999999995, -435.26759, 196.08982999999995, -435.26759, 196.06499999999997);
        ctx.closePath();
        ctx.moveTo(-398.01791, 196.06500999999997);
        ctx.bezierCurveTo(-398.01791, 196.05900999999997, -397.97090999999995, 196.01240999999996, -397.91337, 195.96045999999998);
        ctx.lineTo(-397.80883, 195.86595999999997);
        ctx.lineTo(-397.90333, 195.97049999999996);
        ctx.bezierCurveTo(-397.99143, 196.06789999999995, -398.01794, 196.08982999999995, -398.01794, 196.06499999999997);
        ctx.closePath();
        ctx.moveTo(-392.31025, 195.90619999999998);
        ctx.lineTo(-392.40475, 195.80165);
        ctx.lineTo(-392.30021, 195.89615);
        ctx.bezierCurveTo(-392.20281, 195.98425, -392.18088, 196.01076, -392.20571, 196.01076);
        ctx.bezierCurveTo(-392.21171, 196.01076, -392.25831, 195.96366, -392.31025, 195.90622000000002);
        ctx.closePath();
        ctx.moveTo(-429.56094, 195.90619999999998);
        ctx.lineTo(-429.62224000000003, 195.8338);
        ctx.lineTo(-429.54984, 195.89509999999999);
        ctx.bezierCurveTo(-429.48184000000003, 195.9527, -429.46284, 195.97859999999997, -429.48854, 195.97859999999997);
        ctx.bezierCurveTo(-429.49454, 195.97859999999997, -429.52724, 195.94599999999997, -429.56094, 195.90619999999998);
        ctx.closePath();
        ctx.moveTo(-362.34688, 194.79643);
        ctx.lineTo(-362.42488, 194.70792999999998);
        ctx.lineTo(-362.33637999999996, 194.78592999999998);
        ctx.bezierCurveTo(-362.25368, 194.85882999999998, -362.23317, 194.88482999999997, -362.25838, 194.88482999999997);
        ctx.bezierCurveTo(-362.26437999999996, 194.88482999999997, -362.30397999999997, 194.84502999999995, -362.34688, 194.79632999999995);
        ctx.closePath();
        ctx.moveTo(-364.60219, 194.25172999999998);
        ctx.bezierCurveTo(-364.57899000000003, 194.24273, -364.55119, 194.24372999999997, -364.54049000000003, 194.25472999999997);
        ctx.bezierCurveTo(-364.52979000000005, 194.26542999999998, -364.54849, 194.27302999999998, -364.58269, 194.27162999999996);
        ctx.bezierCurveTo(-364.62019000000004, 194.26962999999995, -364.62779, 194.26262999999997, -364.60209000000003, 194.25222999999997);
        ctx.closePath();
        ctx.moveTo(-432.02471, 191.61401999999998);
        ctx.bezierCurveTo(-432.00151000000005, 191.60502, -431.97371000000004, 191.60601999999997, -431.96301000000005, 191.61701999999997);
        ctx.bezierCurveTo(-431.95231000000007, 191.62771999999998, -431.97101000000004, 191.63531999999998, -432.00521000000003, 191.63391999999996);
        ctx.bezierCurveTo(-432.04271000000006, 191.63191999999995, -432.05031, 191.62491999999997, -432.02461000000005, 191.61451999999997);
        ctx.closePath();
        ctx.moveTo(-416.00543000000005, 191.61401999999998);
        ctx.bezierCurveTo(-415.9822300000001, 191.60502, -415.95443000000006, 191.60601999999997, -415.9437300000001, 191.61701999999997);
        ctx.bezierCurveTo(-415.9330300000001, 191.62771999999998, -415.95173000000005, 191.63531999999998, -415.98593000000005, 191.63391999999996);
        ctx.bezierCurveTo(-416.0234300000001, 191.63191999999995, -416.03103000000004, 191.62491999999997, -416.0053300000001, 191.61451999999997);
        ctx.closePath();
        ctx.moveTo(-394.61422000000005, 191.61401999999998);
        ctx.bezierCurveTo(-394.59102000000007, 191.60502, -394.56322000000006, 191.60601999999997, -394.5525200000001, 191.61701999999997);
        ctx.bezierCurveTo(-394.5418200000001, 191.62771999999998, -394.56052000000005, 191.63531999999998, -394.59472000000005, 191.63391999999996);
        ctx.bezierCurveTo(-394.6322200000001, 191.63191999999995, -394.63982000000004, 191.62491999999997, -394.61412000000007, 191.61451999999997);
        ctx.closePath();
        ctx.moveTo(-378.78794000000005, 191.61401999999998);
        ctx.bezierCurveTo(-378.7647400000001, 191.60502, -378.73694000000006, 191.60601999999997, -378.7262400000001, 191.61701999999997);
        ctx.bezierCurveTo(-378.7155400000001, 191.62771999999998, -378.73424000000006, 191.63531999999998, -378.76844000000006, 191.63391999999996);
        ctx.bezierCurveTo(-378.8059400000001, 191.63191999999995, -378.81354000000005, 191.62491999999997, -378.7878400000001, 191.61451999999997);
        ctx.closePath();
        ctx.moveTo(-363.95884000000007, 191.58182);
        ctx.bezierCurveTo(-363.9356400000001, 191.57282, -363.9078400000001, 191.57381999999998, -363.89724000000007, 191.58481999999998);
        ctx.bezierCurveTo(-363.8865400000001, 191.59552, -363.90524000000005, 191.60312, -363.93944000000005, 191.60171999999997);
        ctx.bezierCurveTo(-363.97694000000007, 191.59971999999996, -363.98454000000004, 191.59271999999999, -363.95884000000007, 191.58231999999998);
        ctx.closePath();
        ctx.moveTo(-360.37421000000006, 188.84654);
        ctx.bezierCurveTo(-360.32551000000007, 188.83954, -360.2459400000001, 188.83954, -360.19729000000007, 188.84654);
        ctx.bezierCurveTo(-360.14859000000007, 188.85354, -360.18829000000005, 188.85994, -360.2857900000001, 188.85994);
        ctx.bezierCurveTo(-360.3830900000001, 188.85994, -360.4229000000001, 188.85394, -360.3742900000001, 188.84654);
        ctx.closePath();
        ctx.moveTo(-360.22744000000006, 187.20708);
        ctx.bezierCurveTo(-360.2042400000001, 187.19808, -360.17644000000007, 187.19907999999998, -360.16584000000006, 187.21007999999998);
        ctx.bezierCurveTo(-360.1551400000001, 187.22078, -360.17384000000004, 187.22838, -360.20804000000004, 187.22697999999997);
        ctx.bezierCurveTo(-360.24554000000006, 187.22497999999996, -360.25314000000003, 187.21797999999998, -360.22744000000006, 187.20757999999998);
        ctx.closePath();
        ctx.moveTo(-401.54022000000003, 186.85132);
        ctx.bezierCurveTo(-395.46180000000004, 186.82942, -391.10195000000004, 186.82932, -391.10196, 186.851);
        ctx.bezierCurveTo(-391.10196, 186.8643, -393.96444, 186.8716, -397.46303, 186.8673);
        ctx.bezierCurveTo(-400.96162, 186.8633, -402.79636, 186.8558, -401.54022, 186.8512);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-432.76657, 205.92914);
        ctx.bezierCurveTo(-432.74447, 205.92014, -432.70827, 205.92014, -432.68617, 205.92914);
        ctx.bezierCurveTo(-432.66407, 205.93813999999998, -432.68217, 205.94534, -432.72637000000003, 205.94534);
        ctx.bezierCurveTo(-432.77057, 205.94534, -432.78867, 205.93833999999998, -432.76657000000006, 205.92914);
        ctx.closePath();
        ctx.moveTo(-432.29953, 205.92813999999998);
        ctx.bezierCurveTo(-432.26823, 205.92013999999998, -432.22483, 205.92013999999998, -432.20303, 205.92914);
        ctx.bezierCurveTo(-432.18123, 205.93813999999998, -432.20703000000003, 205.94464, -432.25993, 205.94394);
        ctx.bezierCurveTo(-432.31302999999997, 205.9433, -432.33083, 205.93594, -432.29953, 205.92794);
        ctx.closePath();
        ctx.moveTo(-416.76276, 205.92813999999998);
        ctx.bezierCurveTo(-416.73146, 205.92013999999998, -416.68806, 205.92013999999998, -416.66626, 205.92914);
        ctx.bezierCurveTo(-416.64446000000004, 205.93813999999998, -416.67026000000004, 205.94464, -416.72316, 205.94394);
        ctx.bezierCurveTo(-416.77626, 205.9433, -416.79406, 205.93594, -416.76276, 205.92794);
        ctx.closePath();
        ctx.moveTo(-416.29694, 205.92914);
        ctx.bezierCurveTo(-416.27484, 205.92014, -416.23864000000003, 205.92014, -416.21654, 205.92914);
        ctx.bezierCurveTo(-416.19444, 205.93813999999998, -416.21254, 205.94534, -416.25674000000004, 205.94534);
        ctx.bezierCurveTo(-416.30094, 205.94534, -416.31904000000003, 205.93833999999998, -416.29694000000006, 205.92914);
        ctx.closePath();
        ctx.moveTo(-395.33938, 205.92813999999998);
        ctx.bezierCurveTo(-395.30808, 205.92013999999998, -395.26468, 205.92013999999998, -395.24288, 205.92914);
        ctx.bezierCurveTo(-395.22108000000003, 205.93813999999998, -395.24688000000003, 205.94464, -395.29978, 205.94394);
        ctx.bezierCurveTo(-395.35287999999997, 205.9433, -395.37068, 205.93594, -395.33938, 205.92794);
        ctx.closePath();
        ctx.moveTo(-394.88904, 205.92813999999998);
        ctx.bezierCurveTo(-394.85774000000004, 205.92013999999998, -394.81434, 205.92013999999998, -394.79254000000003, 205.92914);
        ctx.bezierCurveTo(-394.77074000000005, 205.93813999999998, -394.79654000000005, 205.94464, -394.84944, 205.94394);
        ctx.bezierCurveTo(-394.90254, 205.9433, -394.92034, 205.93594, -394.88904, 205.92794);
        ctx.closePath();
        ctx.moveTo(-379.5131, 205.92813999999998);
        ctx.bezierCurveTo(-379.4818, 205.92013999999998, -379.4384, 205.92013999999998, -379.4166, 205.92914);
        ctx.bezierCurveTo(-379.39480000000003, 205.93813999999998, -379.42060000000004, 205.94464, -379.4735, 205.94394);
        ctx.bezierCurveTo(-379.5266, 205.9433, -379.5444, 205.93594, -379.5131, 205.92794);
        ctx.closePath();
        ctx.moveTo(-379.06276, 205.92813999999998);
        ctx.bezierCurveTo(-379.03146000000004, 205.92013999999998, -378.98806, 205.92013999999998, -378.96626000000003, 205.92914);
        ctx.bezierCurveTo(-378.94446000000005, 205.93813999999998, -378.97026000000005, 205.94464, -379.02316, 205.94394);
        ctx.bezierCurveTo(-379.07626, 205.9433, -379.09406, 205.93594, -379.06276, 205.92794);
        ctx.closePath();
        ctx.moveTo(-364.66652000000005, 205.89623999999998);
        ctx.bezierCurveTo(-364.6433200000001, 205.88724, -364.61552000000006, 205.88823999999997, -364.60492000000005, 205.89923999999996);
        ctx.bezierCurveTo(-364.59422000000006, 205.90993999999998, -364.61292000000003, 205.91753999999997, -364.64712000000003, 205.91613999999996);
        ctx.bezierCurveTo(-364.68462000000005, 205.91413999999995, -364.69222, 205.90713999999997, -364.66652000000005, 205.89673999999997);
        ctx.closePath();
        ctx.moveTo(-363.60701000000006, 205.89691999999997);
        ctx.bezierCurveTo(-363.58491000000004, 205.88791999999998, -363.5487100000001, 205.88791999999998, -363.52661000000006, 205.89691999999997);
        ctx.bezierCurveTo(-363.50451000000004, 205.90591999999995, -363.52261000000004, 205.91311999999996, -363.5668100000001, 205.91311999999996);
        ctx.bezierCurveTo(-363.6110100000001, 205.91311999999996, -363.6291100000001, 205.90611999999996, -363.6070100000001, 205.89691999999997);
        ctx.closePath();
        ctx.moveTo(-384.15794000000005, 204.02839999999998);
        ctx.bezierCurveTo(-384.1979400000001, 203.9774, -384.19684000000007, 203.97629999999998, -384.14574000000005, 204.01629999999997);
        ctx.bezierCurveTo(-384.09214000000003, 204.05829999999997, -384.07514000000003, 204.08469999999997, -384.10164000000003, 204.08469999999997);
        ctx.bezierCurveTo(-384.10864000000004, 204.08469999999997, -384.13364, 204.05939999999998, -384.15794000000005, 204.02839999999998);
        ctx.closePath();
        ctx.moveTo(-400.30589000000003, 203.80322999999999);
        ctx.bezierCurveTo(-400.34589000000005, 203.75223, -400.34479000000005, 203.75103, -400.29379000000006, 203.79112999999998);
        ctx.bezierCurveTo(-400.24019000000004, 203.83312999999998, -400.22319000000005, 203.85952999999998, -400.24969000000004, 203.85952999999998);
        ctx.bezierCurveTo(-400.25669000000005, 203.85952999999998, -400.28169, 203.83423, -400.30599000000007, 203.80322999999999);
        ctx.closePath();
        ctx.moveTo(-381.97057, 201.55152999999999);
        ctx.bezierCurveTo(-382.01057000000003, 201.50053, -382.00947, 201.49933, -381.95837, 201.53942999999998);
        ctx.bezierCurveTo(-381.92737, 201.56373, -381.90207, 201.58902999999998, -381.90207, 201.59572999999997);
        ctx.bezierCurveTo(-381.90207, 201.62222999999997, -381.92847, 201.60472999999996, -381.97047, 201.55163);
        ctx.closePath();
        ctx.moveTo(-369.49591, 201.13338);
        ctx.bezierCurveTo(-368.99737, 201.12838, -368.17228, 201.12838, -367.66236999999995, 201.13336999999999);
        ctx.bezierCurveTo(-367.15246999999994, 201.13836999999998, -367.56037, 201.14236999999997, -368.5688099999999, 201.14236999999997);
        ctx.bezierCurveTo(-369.57724999999994, 201.14236999999997, -369.99443999999994, 201.13836999999998, -369.4959099999999, 201.13336999999999);
        ctx.closePath();
        ctx.moveTo(-423.65265999999997, 199.11218);
        ctx.bezierCurveTo(-423.65065999999996, 199.07468, -423.64365999999995, 199.06708, -423.63325999999995, 199.09278);
        ctx.bezierCurveTo(-423.62425999999994, 199.11598, -423.62525999999997, 199.14378, -423.63625999999994, 199.15448);
        ctx.bezierCurveTo(-423.6469599999999, 199.16518000000002, -423.65455999999995, 199.14648, -423.65315999999996, 199.11228);
        ctx.closePath();
        ctx.moveTo(-402.41855, 198.98619);
        ctx.bezierCurveTo(-402.41791, 198.93309, -402.41055, 198.91529, -402.40254999999996, 198.94659);
        ctx.bezierCurveTo(-402.39455, 198.97788999999997, -402.39455, 199.02129, -402.40354999999994, 199.04308999999998);
        ctx.bezierCurveTo(-402.41254999999995, 199.06489, -402.4190499999999, 199.03909, -402.4183499999999, 198.98618999999997);
        ctx.closePath();
        ctx.moveTo(-439.66821, 198.92189);
        ctx.bezierCurveTo(-439.66756, 198.86879, -439.66021, 198.85099, -439.65220999999997, 198.88228999999998);
        ctx.bezierCurveTo(-439.64421, 198.91358999999997, -439.64421, 198.95699, -439.65320999999994, 198.97878999999998);
        ctx.bezierCurveTo(-439.66220999999996, 199.00059, -439.6687099999999, 198.97478999999998, -439.6680099999999, 198.92188999999996);
        ctx.closePath();
        ctx.moveTo(-383.1194, 198.87368999999998);
        ctx.bezierCurveTo(-383.1194, 198.82949, -383.1124, 198.81139, -383.10319999999996, 198.83348999999998);
        ctx.bezierCurveTo(-383.09419999999994, 198.85558999999998, -383.09419999999994, 198.89179, -383.10319999999996, 198.91388999999998);
        ctx.bezierCurveTo(-383.1122, 198.93598999999998, -383.1194, 198.91788999999997, -383.1194, 198.87368999999998);
        ctx.closePath();
        ctx.moveTo(-358.90499, 198.68873);
        ctx.lineTo(-358.98299, 198.60022999999998);
        ctx.lineTo(-358.89448999999996, 198.67822999999999);
        ctx.bezierCurveTo(-358.81179, 198.75113, -358.79128, 198.77712999999997, -358.81649, 198.77712999999997);
        ctx.bezierCurveTo(-358.82248999999996, 198.77712999999997, -358.86208999999997, 198.73732999999996, -358.90499, 198.68862999999996);
        ctx.closePath();
        ctx.moveTo(-383.1194, 198.58419);
        ctx.bezierCurveTo(-383.1194, 198.53999000000002, -383.1124, 198.52189, -383.10319999999996, 198.54399);
        ctx.bezierCurveTo(-383.09419999999994, 198.56609, -383.09419999999994, 198.60229, -383.10319999999996, 198.62439);
        ctx.bezierCurveTo(-383.1122, 198.64649, -383.1194, 198.62839, -383.1194, 198.58419);
        ctx.closePath();
        ctx.moveTo(-439.66821, 198.53599);
        ctx.bezierCurveTo(-439.66756, 198.48289, -439.66021, 198.46509, -439.65220999999997, 198.49639);
        ctx.bezierCurveTo(-439.64421, 198.52768999999998, -439.64421, 198.57109, -439.65320999999994, 198.59288999999998);
        ctx.bezierCurveTo(-439.66220999999996, 198.61469, -439.6687099999999, 198.58889, -439.6680099999999, 198.53598999999997);
        ctx.closePath();
        ctx.moveTo(-402.41855, 198.50379);
        ctx.bezierCurveTo(-402.41791, 198.45069, -402.41055, 198.43289000000001, -402.40254999999996, 198.46419);
        ctx.bezierCurveTo(-402.39455, 198.49549, -402.39455, 198.53889, -402.40354999999994, 198.56069);
        ctx.bezierCurveTo(-402.41254999999995, 198.58249, -402.4190499999999, 198.55669, -402.4183499999999, 198.50378999999998);
        ctx.closePath();
        ctx.moveTo(-370.05951, 196.1395);
        ctx.bezierCurveTo(-370.05951, 196.0953, -370.05251, 196.0772, -370.04330999999996, 196.0993);
        ctx.bezierCurveTo(-370.03430999999995, 196.1214, -370.03430999999995, 196.1576, -370.04330999999996, 196.1797);
        ctx.bezierCurveTo(-370.05231, 196.2018, -370.05951, 196.1837, -370.05951, 196.1395);
        ctx.closePath();
        ctx.moveTo(-361.01982, 196.1154);
        ctx.bezierCurveTo(-360.54780999999997, 196.1104, -359.76615, 196.1104, -359.28279, 196.11539);
        ctx.bezierCurveTo(-358.79944, 196.12039, -359.18559, 196.12438999999998, -360.14099, 196.12438999999998);
        ctx.bezierCurveTo(-361.09636, 196.12439999999998, -361.49183, 196.12039, -361.01982, 196.11539);
        ctx.closePath();
        ctx.moveTo(-370.05832, 195.93041);
        ctx.bezierCurveTo(-370.05767, 195.87731, -370.05032, 195.85951, -370.04231999999996, 195.89081);
        ctx.bezierCurveTo(-370.03432, 195.92210999999998, -370.03432, 195.96551, -370.04331999999994, 195.98730999999998);
        ctx.bezierCurveTo(-370.05231999999995, 196.00911, -370.0588199999999, 195.98331, -370.0581199999999, 195.93040999999997);
        ctx.closePath();
        ctx.moveTo(-435.07457, 195.87001);
        ctx.bezierCurveTo(-435.07457, 195.86301, -435.04927, 195.83801, -435.01827, 195.81371000000001);
        ctx.bezierCurveTo(-434.96727, 195.77371000000002, -434.96617, 195.77481, -435.00617, 195.82581000000002);
        ctx.bezierCurveTo(-435.04816999999997, 195.87941, -435.07457, 195.89641000000003, -435.07457, 195.86991);
        ctx.closePath();
        ctx.moveTo(-397.82491, 195.87001);
        ctx.bezierCurveTo(-397.82491, 195.86301, -397.79961, 195.83801, -397.76860999999997, 195.81371000000001);
        ctx.bezierCurveTo(-397.71761, 195.77371000000002, -397.71640999999994, 195.77481, -397.75640999999996, 195.82581000000002);
        ctx.bezierCurveTo(-397.79840999999993, 195.87941, -397.82480999999996, 195.89641000000003, -397.82480999999996, 195.86991);
        ctx.closePath();
        ctx.moveTo(-432.39603, 194.73401);
        ctx.bezierCurveTo(-432.36473, 194.72601, -432.32133, 194.72601, -432.29953, 194.73501000000002);
        ctx.bezierCurveTo(-432.27773, 194.74401, -432.30353, 194.75051000000002, -432.35643, 194.74981000000002);
        ctx.bezierCurveTo(-432.40952999999996, 194.74917000000002, -432.42733, 194.74181000000002, -432.39603, 194.73381000000003);
        ctx.closePath();
        ctx.moveTo(-416.37675, 194.73401);
        ctx.bezierCurveTo(-416.34545, 194.72601, -416.30205, 194.72601, -416.28025, 194.73501000000002);
        ctx.bezierCurveTo(-416.25845000000004, 194.74401, -416.28425000000004, 194.75051000000002, -416.33715, 194.74981000000002);
        ctx.bezierCurveTo(-416.39025, 194.74917000000002, -416.40805, 194.74181000000002, -416.37675, 194.73381000000003);
        ctx.closePath();
        ctx.moveTo(-395.14638, 194.73401);
        ctx.bezierCurveTo(-395.11508000000003, 194.72601, -395.07168, 194.72601, -395.04988000000003, 194.73501000000002);
        ctx.bezierCurveTo(-395.02808000000005, 194.74401, -395.05388000000005, 194.75051000000002, -395.10678, 194.74981000000002);
        ctx.bezierCurveTo(-395.15988, 194.74917000000002, -395.17768, 194.74181000000002, -395.14638, 194.73381000000003);
        ctx.closePath();
        ctx.moveTo(-379.14379, 194.73501000000002);
        ctx.bezierCurveTo(-379.12169, 194.72601000000003, -379.08549000000005, 194.72601000000003, -379.06339, 194.73501000000002);
        ctx.bezierCurveTo(-379.04129, 194.74401, -379.05939, 194.75121000000001, -379.10359000000005, 194.75121000000001);
        ctx.bezierCurveTo(-379.14779000000004, 194.75121000000001, -379.16589000000005, 194.74421, -379.1437900000001, 194.73501000000002);
        ctx.closePath();
        ctx.moveTo(-421.78950000000003, 193.87565);
        ctx.bezierCurveTo(-421.78950000000003, 193.86865, -421.7642, 193.84365, -421.7332, 193.81935000000001);
        ctx.bezierCurveTo(-421.6822, 193.77935000000002, -421.681, 193.78045, -421.72110000000004, 193.83145000000002);
        ctx.bezierCurveTo(-421.7631, 193.88505, -421.78950000000003, 193.90205000000003, -421.78950000000003, 193.87565);
        ctx.closePath();
        ctx.moveTo(-437.64795000000004, 193.77521000000002);
        ctx.bezierCurveTo(-437.60635, 193.73101000000003, -437.56515, 193.69481000000002, -437.55635, 193.69481000000002);
        ctx.bezierCurveTo(-437.54735, 193.69481000000002, -437.57425, 193.73101000000003, -437.61585, 193.77521000000002);
        ctx.bezierCurveTo(-437.65745000000004, 193.81941, -437.69865000000004, 193.85561, -437.70745000000005, 193.85561);
        ctx.bezierCurveTo(-437.71645000000007, 193.85561, -437.68955000000005, 193.81941, -437.64795000000004, 193.77521000000002);
        ctx.closePath();
        ctx.moveTo(-421.46783000000005, 193.55397000000002);
        ctx.bezierCurveTo(-421.46783000000005, 193.54697000000002, -421.44253000000003, 193.52197, -421.41153, 193.49767000000003);
        ctx.bezierCurveTo(-421.36053000000004, 193.45767000000004, -421.35933, 193.45877000000002, -421.39943000000005, 193.50977000000003);
        ctx.bezierCurveTo(-421.44143, 193.56337000000002, -421.46783000000005, 193.58037000000004, -421.46783000000005, 193.55387000000002);
        ctx.closePath();
        ctx.moveTo(-432.1212100000001, 191.61411);
        ctx.bezierCurveTo(-432.0980100000001, 191.60511000000002, -432.0702100000001, 191.60611, -432.0595100000001, 191.61711);
        ctx.bezierCurveTo(-432.0488100000001, 191.62781, -432.0675100000001, 191.63541, -432.1017100000001, 191.63401);
        ctx.bezierCurveTo(-432.1392100000001, 191.63200999999998, -432.1468100000001, 191.62501, -432.1211100000001, 191.61461);
        ctx.closePath();
        ctx.moveTo(-416.1019300000001, 191.61411);
        ctx.bezierCurveTo(-416.0787300000001, 191.60511000000002, -416.0509300000001, 191.60611, -416.0403300000001, 191.61711);
        ctx.bezierCurveTo(-416.0296300000001, 191.62781, -416.0483300000001, 191.63541, -416.0825300000001, 191.63401);
        ctx.bezierCurveTo(-416.1200300000001, 191.63200999999998, -416.12763000000007, 191.62501, -416.1019300000001, 191.61461);
        ctx.closePath();
        ctx.moveTo(-364.6042000000001, 191.58121);
        ctx.bezierCurveTo(-364.5644000000001, 191.57321, -364.49925000000013, 191.57321, -364.4594400000001, 191.58121);
        ctx.bezierCurveTo(-364.4196400000001, 191.58921, -364.4524400000001, 191.59511, -364.5318400000001, 191.59511);
        ctx.bezierCurveTo(-364.61144000000013, 191.59511, -364.6440200000001, 191.58911, -364.6042400000001, 191.58121);
        ctx.closePath();
        ctx.moveTo(-364.1534800000001, 191.58121);
        ctx.bezierCurveTo(-364.1134800000001, 191.57321, -364.05558000000013, 191.57421, -364.0248100000001, 191.58185);
        ctx.bezierCurveTo(-363.9940100000001, 191.58985, -364.0268100000001, 191.59625, -364.0975100000001, 191.59585);
        ctx.bezierCurveTo(-364.16831000000013, 191.59550000000002, -364.1934100000001, 191.58885, -364.1534100000001, 191.58125);
        ctx.closePath();
        ctx.moveTo(-406.4216000000001, 191.54771);
        ctx.bezierCurveTo(-405.9395000000001, 191.54271, -405.15059000000014, 191.54271, -404.66849000000013, 191.54771);
        ctx.bezierCurveTo(-404.18638000000016, 191.55271, -404.58079000000015, 191.55670999999998, -405.5450500000001, 191.55670999999998);
        ctx.bezierCurveTo(-406.5092600000001, 191.55670999999998, -406.9037100000001, 191.55271, -406.4216000000001, 191.54771);
        ctx.closePath();
        ctx.moveTo(-360.72076000000015, 188.68482);
        ctx.lineTo(-360.72002000000015, 187.75999000000002);
        ctx.lineTo(-360.3098400000001, 187.75799);
        ctx.lineTo(-359.8996600000001, 187.75599);
        ctx.lineTo(-360.3013000000001, 187.76649);
        ctx.lineTo(-360.7029500000001, 187.77699);
        ctx.lineTo(-360.7119500000001, 188.69281);
        ctx.lineTo(-360.72095000000013, 189.60863);
        ctx.lineTo(-360.7202100000001, 188.68382);
        ctx.closePath();
        ctx.moveTo(-411.47186000000016, 186.97991);
        ctx.bezierCurveTo(-410.9897500000002, 186.97491, -410.2008500000002, 186.97491, -409.71874000000014, 186.97991);
        ctx.bezierCurveTo(-409.23664000000014, 186.98490999999999, -409.63104000000016, 186.98890999999998, -410.5953000000001, 186.98890999999998);
        ctx.bezierCurveTo(-411.5595100000001, 186.98890999999998, -411.95397000000014, 186.98490999999999, -411.4718600000001, 186.97991);
        ctx.closePath();
        ctx.moveTo(-390.24148000000014, 186.97991);
        ctx.bezierCurveTo(-389.75938000000014, 186.97491, -388.9704800000001, 186.97491, -388.48837000000015, 186.97991);
        ctx.bezierCurveTo(-388.00626000000017, 186.98490999999999, -388.40067000000016, 186.98890999999998, -389.36493000000013, 186.98890999999998);
        ctx.bezierCurveTo(-390.3291400000001, 186.98890999999998, -390.7235900000001, 186.98490999999999, -390.24148000000014, 186.97991);
        ctx.closePath();
        ctx.moveTo(-424.48351000000014, 186.85121999999998);
        ctx.bezierCurveTo(-422.25874000000016, 186.84622, -418.61821000000015, 186.84622, -416.39345000000014, 186.85121999999998);
        ctx.bezierCurveTo(-414.16868000000017, 186.85621999999998, -415.9889400000001, 186.85922, -420.43848000000014, 186.85922);
        ctx.bezierCurveTo(-424.8880100000001, 186.85922, -426.70827000000014, 186.85522, -424.48351000000014, 186.85121999999998);
        ctx.closePath();
        ctx.moveTo(-383.14057000000014, 186.85153999999997);
        ctx.bezierCurveTo(-375.32041000000015, 186.82963999999998, -369.87158000000017, 186.82953999999998, -369.87158000000017, 186.85121999999998);
        ctx.bezierCurveTo(-369.87158000000017, 186.86451999999997, -373.5157300000002, 186.87181999999999, -377.96968000000015, 186.86751999999998);
        ctx.bezierCurveTo(-382.42364000000015, 186.86352, -384.75054000000017, 186.85601999999997, -383.14057000000014, 186.85142);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-432.58965, 205.9274);
        ctx.bezierCurveTo(-432.54095, 205.9204, -432.46138, 205.9204, -432.41273, 205.9274);
        ctx.bezierCurveTo(-432.36403, 205.9344, -432.40373, 205.9408, -432.50123, 205.9408);
        ctx.bezierCurveTo(-432.59853000000004, 205.9408, -432.63834, 205.9348, -432.58973000000003, 205.9274);
        ctx.closePath();
        ctx.moveTo(-416.57037, 205.9274);
        ctx.bezierCurveTo(-416.52167000000003, 205.9204, -416.44210000000004, 205.9204, -416.39345000000003, 205.9274);
        ctx.bezierCurveTo(-416.34475000000003, 205.9344, -416.38445, 205.9408, -416.48195000000004, 205.9408);
        ctx.bezierCurveTo(-416.57925000000006, 205.9408, -416.61906000000005, 205.9348, -416.57045000000005, 205.9274);
        ctx.closePath();
        ctx.moveTo(-395.14655000000005, 205.9274);
        ctx.bezierCurveTo(-395.09765000000004, 205.9204, -395.02527000000003, 205.9204, -394.98571000000004, 205.92785);
        ctx.bezierCurveTo(-394.94611000000003, 205.93585000000002, -394.98616000000004, 205.94155, -395.07461000000006, 205.94135);
        ctx.bezierCurveTo(-395.1631100000001, 205.94102, -395.1954400000001, 205.93535, -395.1465100000001, 205.92745);
        ctx.closePath();
        ctx.moveTo(-379.32027000000005, 205.9274);
        ctx.bezierCurveTo(-379.27137000000005, 205.9204, -379.19899000000004, 205.9204, -379.15943000000004, 205.92785);
        ctx.bezierCurveTo(-379.11983000000004, 205.93585000000002, -379.15988000000004, 205.94155, -379.24833000000007, 205.94135);
        ctx.bezierCurveTo(-379.3368300000001, 205.94102, -379.3691600000001, 205.93535, -379.3202300000001, 205.92745);
        ctx.closePath();
        ctx.moveTo(-364.57002000000006, 205.8964);
        ctx.bezierCurveTo(-364.5468200000001, 205.8874, -364.51902000000007, 205.8884, -364.5083200000001, 205.89939999999999);
        ctx.bezierCurveTo(-364.4976200000001, 205.9101, -364.51632000000006, 205.9177, -364.55052000000006, 205.91629999999998);
        ctx.bezierCurveTo(-364.5880200000001, 205.91429999999997, -364.59562000000005, 205.9073, -364.5699200000001, 205.8969);
        ctx.closePath();
        ctx.moveTo(-363.70150000000007, 205.8964);
        ctx.bezierCurveTo(-363.6783000000001, 205.8874, -363.6505000000001, 205.8884, -363.63990000000007, 205.89939999999999);
        ctx.bezierCurveTo(-363.6292000000001, 205.9101, -363.64790000000005, 205.9177, -363.68210000000005, 205.91629999999998);
        ctx.bezierCurveTo(-363.71960000000007, 205.91429999999997, -363.72720000000004, 205.9073, -363.70150000000007, 205.8969);
        ctx.closePath();
        ctx.moveTo(-375.10224000000005, 205.21065);
        ctx.bezierCurveTo(-375.10224000000005, 204.97180999999998, -375.09724000000006, 204.8741, -375.09094000000005, 204.99352);
        ctx.bezierCurveTo(-375.0849400000001, 205.11293999999998, -375.0849400000001, 205.30836, -375.09094000000005, 205.42777999999998);
        ctx.bezierCurveTo(-375.09694, 205.54719999999998, -375.10224000000005, 205.44948, -375.10224000000005, 205.21065);
        ctx.closePath();
        ctx.moveTo(-384.26948000000004, 203.91592);
        ctx.lineTo(-384.33078000000006, 203.84352);
        ctx.lineTo(-384.25838000000005, 203.90482);
        ctx.bezierCurveTo(-384.19038000000006, 203.96242, -384.17138000000006, 203.98832, -384.19708, 203.98832);
        ctx.bezierCurveTo(-384.20308, 203.98832, -384.23578000000003, 203.95571999999999, -384.26948000000004, 203.91592);
        ctx.closePath();
        ctx.moveTo(-384.41528000000005, 203.77116);
        ctx.bezierCurveTo(-384.4552800000001, 203.72016000000002, -384.45418000000006, 203.71906, -384.40308000000005, 203.75906);
        ctx.bezierCurveTo(-384.37208000000004, 203.78336000000002, -384.34678, 203.80866, -384.34678, 203.81536);
        ctx.bezierCurveTo(-384.34678, 203.84186, -384.37318000000005, 203.82435999999998, -384.41518, 203.77116);
        ctx.closePath();
        ctx.moveTo(-381.8740700000001, 201.64813);
        ctx.bezierCurveTo(-381.9140700000001, 201.59713000000002, -381.9129700000001, 201.59593, -381.86187000000007, 201.63603);
        ctx.bezierCurveTo(-381.80827000000005, 201.67803, -381.79127000000005, 201.70443, -381.8176700000001, 201.70443);
        ctx.bezierCurveTo(-381.8246700000001, 201.70443, -381.84967000000006, 201.67913000000001, -381.8739700000001, 201.64813);
        ctx.closePath();
        ctx.moveTo(-376.33720000000005, 201.56363000000002);
        ctx.bezierCurveTo(-376.33720000000005, 201.55663, -376.31190000000004, 201.53163, -376.28090000000003, 201.50733000000002);
        ctx.bezierCurveTo(-376.22990000000004, 201.46733000000003, -376.22880000000004, 201.46843, -376.26880000000006, 201.51943000000003);
        ctx.bezierCurveTo(-376.31080000000003, 201.57303000000002, -376.33720000000005, 201.59003000000004, -376.33720000000005, 201.56353000000001);
        ctx.closePath();
        ctx.moveTo(-382.06707000000006, 201.45515000000003);
        ctx.bezierCurveTo(-382.1070700000001, 201.40415000000004, -382.10597000000007, 201.40295000000003, -382.05487000000005, 201.44305000000003);
        ctx.bezierCurveTo(-382.02387000000004, 201.46735000000004, -381.99857000000003, 201.49265000000003, -381.99857000000003, 201.49935000000002);
        ctx.bezierCurveTo(-381.99857000000003, 201.52585000000002, -382.02497000000005, 201.50835, -382.06697, 201.45515000000003);
        ctx.closePath();
        ctx.moveTo(-423.64893000000006, 198.98632000000003);
        ctx.bezierCurveTo(-423.6482700000001, 198.93322000000003, -423.6409300000001, 198.91542000000004, -423.63293000000004, 198.94672000000003);
        ctx.bezierCurveTo(-423.62493000000006, 198.97802000000001, -423.62493000000006, 199.02142000000003, -423.63393, 199.04322000000002);
        ctx.bezierCurveTo(-423.64293000000004, 199.06502000000003, -423.64943, 199.03922000000003, -423.64873, 198.98632);
        ctx.closePath();
        ctx.moveTo(-402.4151800000001, 198.74506000000002);
        ctx.bezierCurveTo(-402.4151800000001, 198.64776000000003, -402.4091800000001, 198.60795000000002, -402.4017800000001, 198.65656);
        ctx.bezierCurveTo(-402.3947800000001, 198.70526, -402.3947800000001, 198.78483, -402.4017800000001, 198.83348);
        ctx.bezierCurveTo(-402.4087800000001, 198.88218, -402.4151800000001, 198.84248, -402.4151800000001, 198.74498);
        ctx.closePath();
        ctx.moveTo(-439.6663700000001, 198.72896000000003);
        ctx.bezierCurveTo(-439.6660100000001, 198.65816000000004, -439.6593700000001, 198.63306000000003, -439.6517700000001, 198.67306000000002);
        ctx.bezierCurveTo(-439.64377000000013, 198.71306, -439.6447700000001, 198.77096000000003, -439.6524200000001, 198.80173000000002);
        ctx.bezierCurveTo(-439.6604200000001, 198.83253000000002, -439.6667200000001, 198.79973, -439.66642000000013, 198.72903000000002);
        ctx.closePath();
        ctx.moveTo(-423.6477400000001, 198.48771000000002);
        ctx.bezierCurveTo(-423.6477400000001, 198.42581, -423.6407400000001, 198.40041000000002, -423.6330400000001, 198.43141000000003);
        ctx.bezierCurveTo(-423.6250400000001, 198.46241000000003, -423.6250400000001, 198.51301000000004, -423.6330400000001, 198.54400000000004);
        ctx.bezierCurveTo(-423.6410400000001, 198.57500000000005, -423.6477400000001, 198.55000000000004, -423.6477400000001, 198.48770000000005);
        ctx.closePath();
        ctx.moveTo(-413.4773300000001, 196.03495);
        ctx.lineTo(-413.5386300000001, 195.96255000000002);
        ctx.lineTo(-413.4662300000001, 196.02385);
        ctx.bezierCurveTo(-413.3982300000001, 196.08145000000002, -413.3792300000001, 196.10735, -413.4049300000001, 196.10735);
        ctx.bezierCurveTo(-413.41093000000006, 196.10735, -413.4436300000001, 196.07475, -413.4773300000001, 196.03495);
        ctx.closePath();
        ctx.moveTo(-413.6552900000001, 195.85803);
        ctx.bezierCurveTo(-413.6952900000001, 195.80703000000003, -413.6941900000001, 195.80593000000002, -413.6431900000001, 195.84593);
        ctx.bezierCurveTo(-413.6121900000001, 195.87023000000002, -413.5868900000001, 195.89553, -413.5868900000001, 195.90223);
        ctx.bezierCurveTo(-413.5868900000001, 195.92873, -413.6132900000001, 195.91123, -413.6552900000001, 195.85803);
        ctx.closePath();
        ctx.moveTo(-366.5879900000001, 195.50956000000002);
        ctx.bezierCurveTo(-366.5859900000001, 195.47206000000003, -366.5789900000001, 195.46446000000003, -366.5685900000001, 195.49016000000003);
        ctx.bezierCurveTo(-366.55959000000007, 195.51336000000003, -366.5605900000001, 195.54116000000002, -366.57159000000007, 195.55186000000003);
        ctx.bezierCurveTo(-366.58229000000006, 195.56256000000005, -366.5898900000001, 195.54386000000002, -366.5884900000001, 195.50966000000003);
        ctx.closePath();
        ctx.moveTo(-432.5414, 194.735);
        ctx.bezierCurveTo(-432.5193, 194.72600000000003, -432.48310000000004, 194.72600000000003, -432.461, 194.735);
        ctx.bezierCurveTo(-432.4389, 194.744, -432.457, 194.7512, -432.50120000000004, 194.7512);
        ctx.bezierCurveTo(-432.54540000000003, 194.7512, -432.56350000000003, 194.7442, -432.54140000000007, 194.735);
        ctx.closePath();
        ctx.moveTo(-432.25189, 194.735);
        ctx.bezierCurveTo(-432.22979, 194.72600000000003, -432.19359000000003, 194.72600000000003, -432.17149, 194.735);
        ctx.bezierCurveTo(-432.14939, 194.744, -432.16749, 194.7512, -432.21169000000003, 194.7512);
        ctx.bezierCurveTo(-432.25589, 194.7512, -432.27399, 194.7442, -432.25189000000006, 194.735);
        ctx.closePath();
        ctx.moveTo(-416.52211, 194.735);
        ctx.bezierCurveTo(-416.50001, 194.72600000000003, -416.46381, 194.72600000000003, -416.44171, 194.735);
        ctx.bezierCurveTo(-416.41961, 194.744, -416.43771, 194.7512, -416.48191, 194.7512);
        ctx.bezierCurveTo(-416.52611, 194.7512, -416.54421, 194.7442, -416.52211000000005, 194.735);
        ctx.closePath();
        ctx.moveTo(-416.23261, 194.735);
        ctx.bezierCurveTo(-416.21051, 194.72600000000003, -416.17431000000005, 194.72600000000003, -416.15221, 194.735);
        ctx.bezierCurveTo(-416.13011, 194.744, -416.14821, 194.7512, -416.19241000000005, 194.7512);
        ctx.bezierCurveTo(-416.23661000000004, 194.7512, -416.25471000000005, 194.7442, -416.2326100000001, 194.735);
        ctx.closePath();
        ctx.moveTo(-395.29174, 194.735);
        ctx.bezierCurveTo(-395.26964, 194.72600000000003, -395.23344000000003, 194.72600000000003, -395.21134, 194.735);
        ctx.bezierCurveTo(-395.18924, 194.744, -395.20734, 194.7512, -395.25154000000003, 194.7512);
        ctx.bezierCurveTo(-395.29574, 194.7512, -395.31384, 194.7442, -395.29174000000006, 194.735);
        ctx.closePath();
        ctx.moveTo(-395.00223, 194.735);
        ctx.bezierCurveTo(-394.98013, 194.72600000000003, -394.94393, 194.72600000000003, -394.92183, 194.735);
        ctx.bezierCurveTo(-394.89973, 194.744, -394.91783, 194.7512, -394.96203, 194.7512);
        ctx.bezierCurveTo(-395.00623, 194.7512, -395.02433, 194.7442, -395.00223000000005, 194.735);
        ctx.closePath();
        ctx.moveTo(-379.28793, 194.73401);
        ctx.bezierCurveTo(-379.25663000000003, 194.72601, -379.21323, 194.72601, -379.19143, 194.73501000000002);
        ctx.bezierCurveTo(-379.16963000000004, 194.74401, -379.19543000000004, 194.75051000000002, -379.24833, 194.74981000000002);
        ctx.bezierCurveTo(-379.30143, 194.74917000000002, -379.31923, 194.74181000000002, -379.28793, 194.73381000000003);
        ctx.closePath();
        ctx.moveTo(-379.01512, 194.735);
        ctx.bezierCurveTo(-378.99302, 194.72600000000003, -378.95682000000005, 194.72600000000003, -378.93472, 194.735);
        ctx.bezierCurveTo(-378.91262, 194.744, -378.93072, 194.7512, -378.97492000000005, 194.7512);
        ctx.bezierCurveTo(-379.01912000000004, 194.7512, -379.03722000000005, 194.7442, -379.0151200000001, 194.735);
        ctx.closePath();
        ctx.moveTo(-421.69300000000004, 193.77914);
        ctx.bezierCurveTo(-421.69300000000004, 193.77214, -421.6677, 193.74714, -421.6367, 193.72284000000002);
        ctx.bezierCurveTo(-421.58570000000003, 193.68284000000003, -421.5845, 193.68394, -421.6245, 193.73494000000002);
        ctx.bezierCurveTo(-421.6665, 193.78854, -421.6929, 193.80554000000004, -421.6929, 193.77904);
        ctx.closePath();
        ctx.moveTo(-421.56433000000004, 193.65047);
        ctx.bezierCurveTo(-421.56433000000004, 193.64347, -421.53903, 193.61847, -421.50803, 193.59417000000002);
        ctx.bezierCurveTo(-421.45703000000003, 193.55417000000003, -421.45583, 193.55527, -421.49583, 193.60627000000002);
        ctx.bezierCurveTo(-421.53783, 193.65987, -421.56423, 193.67687000000004, -421.56423, 193.65037);
        ctx.closePath();
        ctx.moveTo(-369.00307000000004, 193.29663000000002);
        ctx.bezierCurveTo(-369.00307000000004, 193.28963000000002, -368.97777, 193.26463, -368.94677, 193.24033000000003);
        ctx.bezierCurveTo(-368.89577, 193.20033000000004, -368.89457, 193.20143000000002, -368.93467000000004, 193.25243000000003);
        ctx.bezierCurveTo(-368.97667, 193.30603000000002, -369.00307000000004, 193.32303000000005, -369.00307000000004, 193.29653000000002);
        ctx.closePath();
        ctx.moveTo(-359.69268000000005, 193.20423000000002);
        ctx.lineTo(-359.78718000000003, 193.09968000000003);
        ctx.lineTo(-359.68264000000005, 193.19418000000005);
        ctx.bezierCurveTo(-359.58514, 193.28228000000004, -359.56331000000006, 193.30879000000004, -359.58814000000007, 193.30879000000004);
        ctx.bezierCurveTo(-359.59414000000004, 193.30879000000004, -359.64074000000005, 193.26179000000005, -359.6926900000001, 193.20425000000006);
        ctx.closePath();
        ctx.moveTo(-368.8100600000001, 193.10362000000003);
        ctx.bezierCurveTo(-368.8100600000001, 193.09662000000003, -368.78476000000006, 193.07162000000002, -368.75376000000006, 193.04732000000004);
        ctx.bezierCurveTo(-368.70276000000007, 193.00732000000005, -368.70156000000003, 193.00842000000003, -368.7416600000001, 193.05942000000005);
        ctx.bezierCurveTo(-368.78366000000005, 193.11302000000003, -368.8100600000001, 193.13002000000006, -368.8100600000001, 193.10352000000003);
        ctx.closePath();
        ctx.moveTo(-375.1016800000001, 192.29550000000003);
        ctx.bezierCurveTo(-375.1016800000001, 191.99474000000004, -375.0966800000001, 191.86737000000002, -375.0909800000001, 192.01246000000003);
        ctx.bezierCurveTo(-375.08498000000014, 192.15755000000004, -375.08498000000014, 192.40363000000002, -375.0909800000001, 192.55930000000004);
        ctx.bezierCurveTo(-375.0969800000001, 192.71498000000003, -375.10178000000013, 192.59630000000004, -375.10178000000013, 192.29550000000003);
        ctx.closePath();
        ctx.moveTo(-432.8785400000001, 191.61378000000002);
        ctx.bezierCurveTo(-432.8472400000001, 191.60578, -432.8038400000001, 191.60578, -432.7820400000001, 191.61478000000002);
        ctx.bezierCurveTo(-432.7602400000001, 191.62378, -432.7860400000001, 191.63028000000003, -432.8389400000001, 191.62958000000003);
        ctx.bezierCurveTo(-432.89204000000007, 191.62894000000003, -432.9098400000001, 191.62158000000002, -432.8785400000001, 191.61358000000004);
        ctx.closePath();
        ctx.moveTo(-416.8592600000001, 191.61378000000002);
        ctx.bezierCurveTo(-416.82796000000013, 191.60578, -416.7845600000001, 191.60578, -416.7627600000001, 191.61478000000002);
        ctx.bezierCurveTo(-416.74096000000014, 191.62378, -416.76676000000015, 191.63028000000003, -416.8196600000001, 191.62958000000003);
        ctx.bezierCurveTo(-416.8727600000001, 191.62894000000003, -416.8905600000001, 191.62158000000002, -416.8592600000001, 191.61358000000004);
        ctx.closePath();
        ctx.moveTo(-395.4680500000001, 191.61378000000002);
        ctx.bezierCurveTo(-395.43675000000013, 191.60578, -395.3933500000001, 191.60578, -395.3715500000001, 191.61478000000002);
        ctx.bezierCurveTo(-395.34975000000014, 191.62378, -395.37555000000015, 191.63028000000003, -395.4284500000001, 191.62958000000003);
        ctx.bezierCurveTo(-395.4815500000001, 191.62894000000003, -395.4993500000001, 191.62158000000002, -395.4680500000001, 191.61358000000004);
        ctx.closePath();
        ctx.moveTo(-394.77505000000014, 191.6141);
        ctx.bezierCurveTo(-394.75185000000016, 191.60510000000002, -394.72405000000015, 191.6061, -394.71335000000016, 191.6171);
        ctx.bezierCurveTo(-394.7026500000002, 191.6278, -394.72135000000014, 191.6354, -394.75555000000014, 191.634);
        ctx.bezierCurveTo(-394.79305000000016, 191.63199999999998, -394.80065000000013, 191.625, -394.77495000000016, 191.6146);
        ctx.closePath();
        ctx.moveTo(-379.6417700000001, 191.61378000000002);
        ctx.bezierCurveTo(-379.61047000000013, 191.60578, -379.5670700000001, 191.60578, -379.54527000000013, 191.61478000000002);
        ctx.bezierCurveTo(-379.52347000000015, 191.62378, -379.54927000000015, 191.63028000000003, -379.6021700000001, 191.62958000000003);
        ctx.bezierCurveTo(-379.6552700000001, 191.62894000000003, -379.6730700000001, 191.62158000000002, -379.6417700000001, 191.61358000000004);
        ctx.closePath();
        ctx.moveTo(-378.94877000000014, 191.6141);
        ctx.bezierCurveTo(-378.92557000000016, 191.60510000000002, -378.89777000000015, 191.6061, -378.88707000000016, 191.6171);
        ctx.bezierCurveTo(-378.8763700000002, 191.6278, -378.89507000000015, 191.6354, -378.92927000000014, 191.634);
        ctx.bezierCurveTo(-378.96677000000017, 191.63199999999998, -378.97437000000014, 191.625, -378.94867000000016, 191.6146);
        ctx.closePath();
        ctx.moveTo(-364.36294000000015, 191.5817);
        ctx.bezierCurveTo(-364.33194000000015, 191.5737, -364.28134000000017, 191.5737, -364.25036000000017, 191.5817);
        ctx.bezierCurveTo(-364.21936000000017, 191.58970000000002, -364.2443600000002, 191.59640000000002, -364.3066600000002, 191.59640000000002);
        ctx.bezierCurveTo(-364.3685600000002, 191.59640000000002, -364.3938600000002, 191.5894, -364.3629600000002, 191.5817);
        ctx.closePath();
        ctx.moveTo(-406.4216000000001, 190.29308);
        ctx.bezierCurveTo(-405.9395000000001, 190.28808, -405.15059000000014, 190.28808, -404.66849000000013, 190.29308);
        ctx.bezierCurveTo(-404.18638000000016, 190.29808, -404.58079000000015, 190.30208, -405.5450500000001, 190.30208);
        ctx.bezierCurveTo(-406.5092600000001, 190.30208, -406.9037100000001, 190.29808, -406.4216000000001, 190.29308);
        ctx.closePath();
        ctx.moveTo(-361.41570000000013, 189.81054);
        ctx.bezierCurveTo(-361.45570000000015, 189.75954000000002, -361.45460000000014, 189.75834, -361.40360000000015, 189.79844);
        ctx.bezierCurveTo(-361.37260000000015, 189.82274, -361.34730000000013, 189.84804, -361.34730000000013, 189.85474);
        ctx.bezierCurveTo(-361.34730000000013, 189.88124, -361.37370000000016, 189.86373999999998, -361.41570000000013, 189.81054);
        ctx.closePath();
        ctx.moveTo(-360.46647000000013, 189.23958);
        ctx.bezierCurveTo(-360.46647000000013, 189.02727, -360.46147000000013, 188.94460999999998, -360.45487000000014, 189.05588);
        ctx.bezierCurveTo(-360.44887000000017, 189.16714, -360.44887000000017, 189.34084000000001, -360.45487000000014, 189.44188);
        ctx.bezierCurveTo(-360.4608700000001, 189.54292, -360.46637000000015, 189.45188, -360.4662700000001, 189.23958);
        ctx.closePath();
        ctx.moveTo(-360.46701000000013, 188.30673);
        ctx.bezierCurveTo(-360.46701000000013, 188.12981, -360.46201000000013, 188.06152999999998, -360.45501000000013, 188.15500999999998);
        ctx.bezierCurveTo(-360.4480100000001, 188.24850999999998, -360.44901000000016, 188.39323999999996, -360.45501000000013, 188.47668);
        ctx.bezierCurveTo(-360.46201000000013, 188.56008, -360.46691000000015, 188.48368, -360.4668100000001, 188.30673);
        ctx.closePath();
        ctx.moveTo(-359.76854000000014, 188.30373);
        ctx.bezierCurveTo(-359.76654000000013, 188.26623, -359.75954000000013, 188.25863, -359.7491400000001, 188.28433);
        ctx.bezierCurveTo(-359.7401400000001, 188.30753, -359.74114000000014, 188.33533, -359.7521400000001, 188.34603);
        ctx.bezierCurveTo(-359.7628400000001, 188.35673000000003, -359.7704400000001, 188.33803, -359.76904000000013, 188.30383);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-417.16345, 205.8963);
        ctx.bezierCurveTo(-417.14025000000004, 205.8873, -417.11245, 205.8883, -417.10175000000004, 205.89929999999998);
        ctx.bezierCurveTo(-417.09105000000005, 205.91, -417.10975, 205.9176, -417.14395, 205.91619999999998);
        ctx.bezierCurveTo(-417.18145000000004, 205.91419999999997, -417.18905, 205.9072, -417.16335000000004, 205.89679999999998);
        ctx.closePath();
        ctx.moveTo(-364.44298000000003, 205.89553);
        ctx.bezierCurveTo(-364.40298, 205.88753, -364.34508000000005, 205.88853, -364.31432, 205.89618000000002);
        ctx.bezierCurveTo(-364.28352, 205.90418000000003, -364.31632, 205.91048, -364.38702, 205.91018000000003);
        ctx.bezierCurveTo(-364.45782, 205.90983000000003, -364.48292, 205.90318000000002, -364.44292, 205.89558000000002);
        ctx.closePath();
        ctx.moveTo(-363.89614000000006, 205.89553);
        ctx.bezierCurveTo(-363.85614000000004, 205.88753, -363.7982400000001, 205.88853, -363.76747000000006, 205.89618000000002);
        ctx.bezierCurveTo(-363.73667000000006, 205.90418000000003, -363.76947000000007, 205.91048, -363.84027000000003, 205.91018000000003);
        ctx.bezierCurveTo(-363.91107000000005, 205.90983000000003, -363.93617, 205.90318000000002, -363.89617000000004, 205.89558000000002);
        ctx.closePath();
        ctx.moveTo(-427.4911400000001, 205.60467);
        ctx.bezierCurveTo(-427.0090400000001, 205.59967, -426.2201300000001, 205.59967, -425.7380300000001, 205.60467);
        ctx.bezierCurveTo(-425.2559200000001, 205.60967, -425.6503300000001, 205.61366999999998, -426.6145800000001, 205.61366999999998);
        ctx.bezierCurveTo(-427.5788000000001, 205.61366999999998, -427.9732500000001, 205.60967, -427.4911400000001, 205.60467);
        ctx.closePath();
        ctx.moveTo(-411.4718600000001, 205.60467);
        ctx.bezierCurveTo(-410.98975000000013, 205.59967, -410.2008500000001, 205.59967, -409.7187400000001, 205.60467);
        ctx.bezierCurveTo(-409.2366400000001, 205.60967, -409.6310400000001, 205.61366999999998, -410.59530000000007, 205.61366999999998);
        ctx.bezierCurveTo(-411.55951000000005, 205.61366999999998, -411.9539700000001, 205.60967, -411.47186000000005, 205.60467);
        ctx.closePath();
        ctx.moveTo(-390.2414800000001, 205.60467);
        ctx.bezierCurveTo(-389.7593800000001, 205.59967, -388.97048000000007, 205.59967, -388.4883700000001, 205.60467);
        ctx.bezierCurveTo(-388.0062600000001, 205.60967, -388.4006700000001, 205.61366999999998, -389.3649300000001, 205.61366999999998);
        ctx.bezierCurveTo(-390.32914000000005, 205.61366999999998, -390.72359000000006, 205.60967, -390.2414800000001, 205.60467);
        ctx.closePath();
        ctx.moveTo(-374.2704500000001, 205.60467);
        ctx.bezierCurveTo(-373.8148800000001, 205.59967, -373.0694100000001, 205.59967, -372.6138400000001, 205.60467);
        ctx.bezierCurveTo(-372.1582700000001, 205.60967, -372.5310400000001, 205.61366999999998, -373.4421400000001, 205.61366999999998);
        ctx.bezierCurveTo(-374.3532800000001, 205.61366999999998, -374.7260200000001, 205.60967, -374.2704500000001, 205.60467);
        ctx.closePath();
        ctx.moveTo(-368.9428400000001, 204.31796);
        ctx.bezierCurveTo(-368.9828400000001, 204.26696, -368.9817400000001, 204.26576, -368.9307400000001, 204.30586);
        ctx.bezierCurveTo(-368.8771400000001, 204.34786, -368.8601400000001, 204.37426, -368.88654000000014, 204.37426);
        ctx.bezierCurveTo(-368.89354000000014, 204.37426, -368.9185400000001, 204.34896, -368.94284000000016, 204.31796);
        ctx.closePath();
        ctx.moveTo(-369.1830400000001, 204.0767);
        ctx.lineTo(-369.24434000000014, 204.0043);
        ctx.lineTo(-369.1719400000001, 204.0656);
        ctx.bezierCurveTo(-369.10394000000014, 204.1232, -369.08494000000013, 204.14909999999998, -369.1106400000001, 204.14909999999998);
        ctx.bezierCurveTo(-369.1166400000001, 204.14909999999998, -369.1493400000001, 204.11649999999997, -369.1830400000001, 204.0767);
        ctx.closePath();
        ctx.moveTo(-437.3608800000001, 203.9963);
        ctx.lineTo(-437.4388800000001, 203.90779999999998);
        ctx.lineTo(-437.3503800000001, 203.98579999999998);
        ctx.bezierCurveTo(-437.2676800000001, 204.0587, -437.2471700000001, 204.08469999999997, -437.2723800000001, 204.08469999999997);
        ctx.bezierCurveTo(-437.2783800000001, 204.08469999999997, -437.3179800000001, 204.04489999999996, -437.3608800000001, 203.99619999999996);
        ctx.closePath();
        ctx.moveTo(-437.7147200000001, 203.64246);
        ctx.lineTo(-437.7927200000001, 203.55396);
        ctx.lineTo(-437.7042200000001, 203.63196);
        ctx.bezierCurveTo(-437.6215200000001, 203.70486, -437.6010100000001, 203.73085999999998, -437.6262200000001, 203.73085999999998);
        ctx.bezierCurveTo(-437.6322200000001, 203.73085999999998, -437.6718200000001, 203.69105999999996, -437.7147200000001, 203.64235999999997);
        ctx.closePath();
        ctx.moveTo(-421.79360000000014, 203.61026);
        ctx.bezierCurveTo(-421.83360000000016, 203.55926000000002, -421.83250000000015, 203.55806, -421.78150000000016, 203.59816);
        ctx.bezierCurveTo(-421.72790000000015, 203.64016, -421.71090000000015, 203.66656, -421.7373000000002, 203.66656);
        ctx.bezierCurveTo(-421.7443000000002, 203.66656, -421.76930000000016, 203.64126000000002, -421.7936000000002, 203.61026);
        ctx.closePath();
        ctx.moveTo(-366.1740800000001, 202.64524);
        ctx.lineTo(-366.2849400000001, 202.52461);
        ctx.lineTo(-366.1643100000001, 202.63547);
        ctx.bezierCurveTo(-366.0520300000001, 202.73865, -366.0288900000001, 202.76587, -366.0534500000001, 202.76587);
        ctx.bezierCurveTo(-366.0584500000001, 202.76587, -366.11315000000013, 202.71157, -366.1740800000001, 202.64524);
        ctx.closePath();
        ctx.moveTo(-376.41761000000014, 201.64002);
        ctx.bezierCurveTo(-376.38561000000016, 201.60461999999998, -376.35211000000015, 201.57572, -376.34331000000014, 201.57572);
        ctx.bezierCurveTo(-376.33431000000013, 201.57572, -376.35341000000017, 201.60461999999998, -376.38541000000015, 201.64002);
        ctx.bezierCurveTo(-376.41741000000013, 201.67542, -376.45091000000014, 201.70432, -376.45971000000014, 201.70432);
        ctx.bezierCurveTo(-376.46871000000016, 201.70432, -376.4496100000001, 201.67532, -376.41761000000014, 201.64002);
        ctx.closePath();
        ctx.moveTo(-419.18639000000013, 201.58372);
        ctx.lineTo(-419.2643900000001, 201.49522);
        ctx.lineTo(-419.1758900000001, 201.57322);
        ctx.bezierCurveTo(-419.1271900000001, 201.61612, -419.0873900000001, 201.65591999999998, -419.0873900000001, 201.66172);
        ctx.bezierCurveTo(-419.0873900000001, 201.68692000000001, -419.1133900000001, 201.66672, -419.1862900000001, 201.58372);
        ctx.closePath();
        ctx.moveTo(-376.19244000000015, 201.41484);
        ctx.bezierCurveTo(-376.16044000000016, 201.37944, -376.12694000000016, 201.35054, -376.11814000000015, 201.35054);
        ctx.bezierCurveTo(-376.10914000000014, 201.35054, -376.1282400000002, 201.37954, -376.16024000000016, 201.41484);
        ctx.bezierCurveTo(-376.19224000000014, 201.45024, -376.22574000000014, 201.47914, -376.23454000000015, 201.47914);
        ctx.bezierCurveTo(-376.24354000000017, 201.47914, -376.22444000000013, 201.45024, -376.19244000000015, 201.41484);
        ctx.closePath();
        ctx.moveTo(-368.81417000000016, 198.94601);
        ctx.bezierCurveTo(-368.8541700000002, 198.89501, -368.8530700000002, 198.89381, -368.8020700000002, 198.93381);
        ctx.bezierCurveTo(-368.74847000000017, 198.97581, -368.7314700000002, 199.00221, -368.7578700000002, 199.00221);
        ctx.bezierCurveTo(-368.7648700000002, 199.00221, -368.7898700000002, 198.97691, -368.8141700000002, 198.94591);
        ctx.closePath();
        ctx.moveTo(-375.10738000000015, 198.84147000000002);
        ctx.bezierCurveTo(-375.10738000000015, 198.77957, -375.10038000000014, 198.75417000000002, -375.09268000000014, 198.78517000000002);
        ctx.bezierCurveTo(-375.08468000000016, 198.81617000000003, -375.08468000000016, 198.86677000000003, -375.09268000000014, 198.89776000000003);
        ctx.bezierCurveTo(-375.1006800000001, 198.92876000000004, -375.10738000000015, 198.90376000000003, -375.10738000000015, 198.84146000000004);
        ctx.closePath();
        ctx.moveTo(-423.64556000000016, 198.74497000000002);
        ctx.bezierCurveTo(-423.64556000000016, 198.64767000000003, -423.6395600000002, 198.60786000000002, -423.63216000000017, 198.65647);
        ctx.bezierCurveTo(-423.62516000000016, 198.70517, -423.62516000000016, 198.78474, -423.63216000000017, 198.83339);
        ctx.bezierCurveTo(-423.6391600000002, 198.88209, -423.64556000000016, 198.84239, -423.64556000000016, 198.74489);
        ctx.closePath();
        ctx.moveTo(-420.36787000000015, 198.72887000000003);
        ctx.bezierCurveTo(-420.36721000000017, 198.67577000000003, -420.35987000000017, 198.65797000000003, -420.35187000000013, 198.68927000000002);
        ctx.bezierCurveTo(-420.34387000000015, 198.72057, -420.34387000000015, 198.76397000000003, -420.3528700000001, 198.78577);
        ctx.bezierCurveTo(-420.3618700000001, 198.80757000000003, -420.3683700000001, 198.78177000000002, -420.3676700000001, 198.72887);
        ctx.closePath();
        ctx.moveTo(-369.0865400000001, 198.67257000000004);
        ctx.lineTo(-369.14784000000014, 198.60017000000005);
        ctx.lineTo(-369.0754400000001, 198.66147000000004);
        ctx.bezierCurveTo(-369.00744000000014, 198.71907000000004, -368.98844000000014, 198.74497000000002, -369.0141400000001, 198.74497000000002);
        ctx.bezierCurveTo(-369.0201400000001, 198.74497000000002, -369.0528400000001, 198.71237000000002, -369.0865400000001, 198.67257000000004);
        ctx.closePath();
        ctx.moveTo(-375.1085700000001, 198.63237000000004);
        ctx.bezierCurveTo(-375.1079300000001, 198.57927000000004, -375.1005700000001, 198.56147000000004, -375.0925700000001, 198.59277000000003);
        ctx.bezierCurveTo(-375.0845700000001, 198.62407000000002, -375.0845700000001, 198.66747000000004, -375.09357000000006, 198.68927000000002);
        ctx.bezierCurveTo(-375.10257000000007, 198.71107000000003, -375.10907000000003, 198.68527000000003, -375.10837000000004, 198.63237);
        ctx.closePath();
        ctx.moveTo(-366.3356200000001, 196.11528000000004);
        ctx.lineTo(-366.4136200000001, 196.02678000000003);
        ctx.lineTo(-366.3251200000001, 196.10478000000003);
        ctx.bezierCurveTo(-366.2424200000001, 196.17768000000004, -366.2219100000001, 196.20368000000002, -366.2471200000001, 196.20368000000002);
        ctx.bezierCurveTo(-366.2531200000001, 196.20368000000002, -366.2927200000001, 196.16388, -366.3356200000001, 196.11518);
        ctx.closePath();
        ctx.moveTo(-381.9503800000001, 195.91424000000004);
        ctx.bezierCurveTo(-381.8632800000001, 195.82574000000002, -381.7847200000001, 195.75340000000003, -381.7758800000001, 195.75340000000003);
        ctx.bezierCurveTo(-381.76688000000007, 195.75340000000003, -381.8310800000001, 195.82580000000002, -381.9182100000001, 195.91424000000004);
        ctx.bezierCurveTo(-382.0053100000001, 196.00274000000005, -382.0838700000001, 196.07507000000004, -382.0927100000001, 196.07507000000004);
        ctx.bezierCurveTo(-382.10171000000014, 196.07507000000004, -382.0375100000001, 196.00267000000005, -381.9503800000001, 195.91424000000004);
        ctx.closePath();
        ctx.moveTo(-376.3091300000001, 195.95444000000003);
        ctx.bezierCurveTo(-376.3491300000001, 195.90344000000005, -376.3480300000001, 195.90224000000003, -376.2970300000001, 195.94234000000003);
        ctx.bezierCurveTo(-376.2434300000001, 195.98434000000003, -376.2264300000001, 196.01074000000003, -376.25283000000013, 196.01074000000003);
        ctx.bezierCurveTo(-376.25983000000014, 196.01074000000003, -376.2848300000001, 195.98544000000004, -376.30913000000015, 195.95444000000003);
        ctx.closePath();
        ctx.moveTo(-429.7710800000001, 195.69710000000003);
        ctx.bezierCurveTo(-429.8110800000001, 195.64610000000005, -429.8099800000001, 195.64490000000004, -429.7589800000001, 195.68500000000003);
        ctx.bezierCurveTo(-429.7279800000001, 195.70930000000004, -429.7026800000001, 195.73460000000003, -429.7026800000001, 195.74130000000002);
        ctx.bezierCurveTo(-429.7026800000001, 195.76780000000002, -429.7290800000001, 195.7503, -429.7710800000001, 195.69720000000004);
        ctx.closePath();
        ctx.moveTo(-400.3661200000001, 193.77511000000004);
        ctx.bezierCurveTo(-400.2700200000001, 193.67781000000005, -400.1841600000001, 193.59819000000005, -400.1753100000001, 193.59819000000005);
        ctx.bezierCurveTo(-400.16631000000007, 193.59819000000005, -400.2378100000001, 193.67779000000004, -400.3339500000001, 193.77511000000004);
        ctx.bezierCurveTo(-400.43005000000005, 193.87241000000003, -400.5159100000001, 193.95203000000004, -400.5247600000001, 193.95203000000004);
        ctx.bezierCurveTo(-400.5337600000001, 193.95203000000004, -400.4622600000001, 193.87243000000004, -400.3661200000001, 193.77511000000004);
        ctx.closePath();
        ctx.moveTo(-384.5398400000001, 193.87161000000003);
        ctx.bezierCurveTo(-384.49824000000007, 193.82741000000004, -384.45704000000006, 193.79121000000004, -384.44824000000006, 193.79121000000004);
        ctx.bezierCurveTo(-384.43924000000004, 193.79121000000004, -384.46614000000005, 193.82741000000004, -384.50774000000007, 193.87161000000003);
        ctx.bezierCurveTo(-384.54924000000005, 193.91581000000002, -384.5905400000001, 193.95201000000003, -384.5993400000001, 193.95201000000003);
        ctx.bezierCurveTo(-384.6083400000001, 193.95201000000003, -384.5814400000001, 193.91581000000002, -384.5398400000001, 193.87161000000003);
        ctx.closePath();
        ctx.moveTo(-384.1699200000001, 193.50168000000002);
        ctx.bezierCurveTo(-384.1379200000001, 193.46628, -384.1044200000001, 193.43738000000002, -384.0956200000001, 193.43738000000002);
        ctx.bezierCurveTo(-384.0866200000001, 193.43738000000002, -384.10572000000013, 193.46638000000002, -384.1377200000001, 193.50168000000002);
        ctx.bezierCurveTo(-384.1697200000001, 193.53708000000003, -384.2032200000001, 193.56598000000002, -384.2120200000001, 193.56598000000002);
        ctx.bezierCurveTo(-384.2210200000001, 193.56598000000002, -384.2019200000001, 193.53708000000003, -384.1699200000001, 193.50168000000002);
        ctx.closePath();
        ctx.moveTo(-368.9065600000001, 193.20003000000003);
        ctx.bezierCurveTo(-368.9065600000001, 193.19303000000002, -368.8812600000001, 193.16803000000002, -368.8502600000001, 193.14373000000003);
        ctx.bezierCurveTo(-368.7992600000001, 193.10373000000004, -368.7980600000001, 193.10483000000002, -368.83816000000013, 193.15593000000004);
        ctx.bezierCurveTo(-368.8801600000001, 193.20953000000003, -368.9065600000001, 193.22653000000005, -368.9065600000001, 193.20003000000003);
        ctx.closePath();
        ctx.moveTo(-432.7183200000001, 191.61381000000003);
        ctx.bezierCurveTo(-432.6873200000001, 191.60581000000002, -432.63672000000014, 191.60581000000002, -432.6057300000001, 191.61381000000003);
        ctx.bezierCurveTo(-432.5747300000001, 191.62181000000004, -432.59973000000014, 191.62851000000003, -432.66203000000013, 191.62851000000003);
        ctx.bezierCurveTo(-432.7239300000001, 191.62851000000003, -432.74933000000016, 191.62151000000003, -432.71833000000015, 191.61381000000003);
        ctx.closePath();
        ctx.moveTo(-432.4127300000001, 191.61330000000004);
        ctx.bezierCurveTo(-432.3729300000001, 191.60530000000003, -432.30778000000015, 191.60530000000003, -432.26798000000014, 191.61330000000004);
        ctx.bezierCurveTo(-432.2281800000001, 191.62130000000005, -432.26098000000013, 191.62720000000004, -432.34038000000015, 191.62720000000004);
        ctx.bezierCurveTo(-432.4199800000002, 191.62720000000004, -432.45257000000015, 191.62120000000004, -432.41278000000017, 191.61330000000004);
        ctx.closePath();
        ctx.moveTo(-416.6990300000001, 191.61381000000003);
        ctx.bezierCurveTo(-416.6680300000001, 191.60581000000002, -416.6174300000001, 191.60581000000002, -416.5864500000001, 191.61381000000003);
        ctx.bezierCurveTo(-416.5554500000001, 191.62181000000004, -416.58045000000016, 191.62851000000003, -416.64275000000015, 191.62851000000003);
        ctx.bezierCurveTo(-416.70465000000013, 191.62851000000003, -416.7300500000002, 191.62151000000003, -416.69905000000017, 191.61381000000003);
        ctx.closePath();
        ctx.moveTo(-416.3934500000001, 191.61330000000004);
        ctx.bezierCurveTo(-416.3536500000001, 191.60530000000003, -416.2885000000001, 191.60530000000003, -416.24869000000007, 191.61330000000004);
        ctx.bezierCurveTo(-416.20889000000005, 191.62130000000005, -416.24169000000006, 191.62720000000004, -416.3210900000001, 191.62720000000004);
        ctx.bezierCurveTo(-416.4006900000001, 191.62720000000004, -416.4332700000001, 191.62120000000004, -416.3934900000001, 191.61330000000004);
        ctx.closePath();
        ctx.moveTo(-395.3078200000001, 191.61381000000003);
        ctx.bezierCurveTo(-395.2768200000001, 191.60581000000002, -395.2262200000001, 191.60581000000002, -395.1952400000001, 191.61381000000003);
        ctx.bezierCurveTo(-395.1642400000001, 191.62181000000004, -395.18924000000015, 191.62851000000003, -395.25154000000015, 191.62851000000003);
        ctx.bezierCurveTo(-395.3134400000001, 191.62851000000003, -395.33874000000014, 191.62151000000003, -395.30784000000017, 191.61381000000003);
        ctx.closePath();
        ctx.moveTo(-395.0022300000001, 191.61330000000004);
        ctx.bezierCurveTo(-394.9624300000001, 191.60530000000003, -394.8972900000001, 191.60530000000003, -394.8574800000001, 191.61330000000004);
        ctx.bezierCurveTo(-394.8176800000001, 191.62130000000005, -394.8504800000001, 191.62720000000004, -394.92988000000014, 191.62720000000004);
        ctx.bezierCurveTo(-395.00948000000017, 191.62720000000004, -395.04206000000016, 191.62120000000004, -395.00228000000016, 191.61330000000004);
        ctx.closePath();
        ctx.moveTo(-379.4815400000001, 191.61381000000003);
        ctx.bezierCurveTo(-379.4505400000001, 191.60581000000002, -379.39994000000013, 191.60581000000002, -379.36896000000013, 191.61381000000003);
        ctx.bezierCurveTo(-379.3379600000001, 191.62181000000004, -379.36296000000016, 191.62851000000003, -379.42526000000015, 191.62851000000003);
        ctx.bezierCurveTo(-379.48716000000013, 191.62851000000003, -379.51246000000015, 191.62151000000003, -379.4815600000002, 191.61381000000003);
        ctx.closePath();
        ctx.moveTo(-379.1759500000001, 191.61330000000004);
        ctx.bezierCurveTo(-379.1361500000001, 191.60530000000003, -379.0710100000001, 191.60530000000003, -379.0312000000001, 191.61330000000004);
        ctx.bezierCurveTo(-378.9914000000001, 191.62130000000005, -379.0242000000001, 191.62720000000004, -379.10360000000014, 191.62720000000004);
        ctx.bezierCurveTo(-379.18320000000017, 191.62720000000004, -379.21578000000017, 191.62120000000004, -379.17600000000016, 191.61330000000004);
        ctx.closePath();
        ctx.moveTo(-360.2596100000001, 190.39167000000003);
        ctx.bezierCurveTo(-360.23641000000015, 190.38267000000005, -360.20861000000014, 190.38367000000002, -360.19791000000015, 190.39467000000002);
        ctx.bezierCurveTo(-360.18721000000016, 190.40537000000003, -360.20591000000013, 190.41297000000003, -360.24011000000013, 190.41157);
        ctx.bezierCurveTo(-360.27761000000015, 190.40957, -360.2852100000001, 190.40257000000003, -360.25951000000015, 190.39217000000002);
        ctx.closePath();
        ctx.moveTo(-360.0022700000001, 190.39167000000003);
        ctx.bezierCurveTo(-359.97907000000015, 190.38267000000005, -359.95127000000014, 190.38367000000002, -359.9406700000001, 190.39467000000002);
        ctx.bezierCurveTo(-359.92997000000014, 190.40537000000003, -359.9486700000001, 190.41297000000003, -359.9828700000001, 190.41157);
        ctx.bezierCurveTo(-360.0203700000001, 190.40957, -360.0279700000001, 190.40257000000003, -360.0022700000001, 190.39217000000002);
        ctx.closePath();
        ctx.moveTo(-358.90255000000013, 189.91504000000003);
        ctx.bezierCurveTo(-358.8609500000001, 189.87084000000004, -358.8197500000001, 189.83464000000004, -358.8109500000001, 189.83464000000004);
        ctx.bezierCurveTo(-358.8019500000001, 189.83464000000004, -358.8288500000001, 189.87084000000004, -358.8704500000001, 189.91504000000003);
        ctx.bezierCurveTo(-358.91205000000014, 189.95924000000002, -358.95325000000014, 189.99544000000003, -358.96205000000015, 189.99544000000003);
        ctx.bezierCurveTo(-358.97105000000016, 189.99544000000003, -358.94415000000015, 189.95924000000002, -358.90255000000013, 189.91504000000003);
        ctx.closePath();
        ctx.moveTo(-361.10907000000014, 189.79441000000003);
        ctx.lineTo(-361.17037000000016, 189.72201000000004);
        ctx.lineTo(-361.09797000000015, 189.78331000000003);
        ctx.bezierCurveTo(-361.02997000000016, 189.84091000000004, -361.01097000000016, 189.86681000000002, -361.03667000000013, 189.86681000000002);
        ctx.bezierCurveTo(-361.0426700000001, 189.86681000000002, -361.07537000000013, 189.83421, -361.10907000000014, 189.79441000000003);
        ctx.closePath();
        ctx.moveTo(-359.15989000000013, 189.78641000000002);
        ctx.bezierCurveTo(-359.1182900000001, 189.74221000000003, -359.0770900000001, 189.70601000000002, -359.0682900000001, 189.70601000000002);
        ctx.bezierCurveTo(-359.0592900000001, 189.70601000000002, -359.0861900000001, 189.74221000000003, -359.1277900000001, 189.78641000000002);
        ctx.bezierCurveTo(-359.16939000000013, 189.83061, -359.21059000000014, 189.86681000000002, -359.21939000000015, 189.86681000000002);
        ctx.bezierCurveTo(-359.22839000000016, 189.86681000000002, -359.20149000000015, 189.83061, -359.15989000000013, 189.78641000000002);
        ctx.closePath();
        ctx.moveTo(-360.64725000000016, 189.61890000000002);
        ctx.bezierCurveTo(-360.60725000000014, 189.61090000000002, -360.5493500000002, 189.61190000000002, -360.51858000000016, 189.61955000000003);
        ctx.bezierCurveTo(-360.48778000000016, 189.62755000000004, -360.52058000000017, 189.63385000000002, -360.59138000000013, 189.63355000000004);
        ctx.bezierCurveTo(-360.66218000000015, 189.63319000000004, -360.6872800000001, 189.62655000000004, -360.64728000000014, 189.61895000000004);
        ctx.closePath();
        ctx.moveTo(-359.69869000000017, 189.61858000000004);
        ctx.bezierCurveTo(-359.6499900000002, 189.61158000000003, -359.57043000000016, 189.61158000000003, -359.5217700000002, 189.61858000000004);
        ctx.bezierCurveTo(-359.4730700000002, 189.62558000000004, -359.51277000000016, 189.63198000000003, -359.6102700000002, 189.63198000000003);
        ctx.bezierCurveTo(-359.7075700000002, 189.63198000000003, -359.74739000000017, 189.62598000000003, -359.6987700000002, 189.61858000000004);
        ctx.closePath();
        ctx.moveTo(-361.53519000000017, 188.77314000000004);
        ctx.bezierCurveTo(-361.53519000000017, 188.72894000000005, -361.52819000000017, 188.71084000000005, -361.51899000000014, 188.73294000000004);
        ctx.bezierCurveTo(-361.50999000000013, 188.75504000000004, -361.50999000000013, 188.79124000000004, -361.51899000000014, 188.81334000000004);
        ctx.bezierCurveTo(-361.52799000000016, 188.83544000000003, -361.53519000000017, 188.81734000000003, -361.53519000000017, 188.77314000000004);
        ctx.closePath();
        ctx.moveTo(-358.7366400000002, 188.77314000000004);
        ctx.bezierCurveTo(-358.7366400000002, 188.72894000000005, -358.7296400000002, 188.71084000000005, -358.72044000000017, 188.73294000000004);
        ctx.bezierCurveTo(-358.71144000000015, 188.75504000000004, -358.71144000000015, 188.79124000000004, -358.72044000000017, 188.81334000000004);
        ctx.bezierCurveTo(-358.7294400000002, 188.83544000000003, -358.7366400000002, 188.81734000000003, -358.7366400000002, 188.77314000000004);
        ctx.closePath();
        ctx.moveTo(-361.53519000000017, 188.61230000000003);
        ctx.bezierCurveTo(-361.53519000000017, 188.56810000000004, -361.52819000000017, 188.55000000000004, -361.51899000000014, 188.57210000000003);
        ctx.bezierCurveTo(-361.50999000000013, 188.59420000000003, -361.50999000000013, 188.63040000000004, -361.51899000000014, 188.65250000000003);
        ctx.bezierCurveTo(-361.52799000000016, 188.67460000000003, -361.53519000000017, 188.65650000000002, -361.53519000000017, 188.61230000000003);
        ctx.closePath();
        ctx.moveTo(-358.7366400000002, 188.61230000000003);
        ctx.bezierCurveTo(-358.7366400000002, 188.56810000000004, -358.7296400000002, 188.55000000000004, -358.72044000000017, 188.57210000000003);
        ctx.bezierCurveTo(-358.71144000000015, 188.59420000000003, -358.71144000000015, 188.63040000000004, -358.72044000000017, 188.65250000000003);
        ctx.bezierCurveTo(-358.7294400000002, 188.67460000000003, -358.7366400000002, 188.65650000000002, -358.7366400000002, 188.61230000000003);
        ctx.closePath();
        ctx.moveTo(-360.34204000000017, 188.62130000000002);
        ctx.bezierCurveTo(-360.27574000000016, 188.61430000000001, -360.16713000000016, 188.61430000000001, -360.10078000000016, 188.62130000000002);
        ctx.bezierCurveTo(-360.03448000000014, 188.62830000000002, -360.0886800000002, 188.6339, -360.22141000000016, 188.6339);
        ctx.bezierCurveTo(-360.3541000000002, 188.6339, -360.40838000000014, 188.6279, -360.34204000000017, 188.62130000000002);
        ctx.closePath();
        ctx.moveTo(-359.76853000000017, 188.40080000000003);
        ctx.bezierCurveTo(-359.76653000000016, 188.36330000000004, -359.75953000000015, 188.35570000000004, -359.74913000000015, 188.38140000000004);
        ctx.bezierCurveTo(-359.74013000000014, 188.40460000000004, -359.74113000000017, 188.43240000000003, -359.75213000000014, 188.44310000000004);
        ctx.bezierCurveTo(-359.7628300000001, 188.45380000000006, -359.77043000000015, 188.43510000000003, -359.76903000000016, 188.40090000000004);
        ctx.closePath();
        ctx.moveTo(-360.3575500000002, 187.97808000000003);
        ctx.bezierCurveTo(-360.2997500000002, 187.97108000000003, -360.21288000000015, 187.97108000000003, -360.16454000000016, 187.97840000000002);
        ctx.bezierCurveTo(-360.1162400000002, 187.98540000000003, -360.1635400000002, 187.99160000000003, -360.26966000000016, 187.99140000000003);
        ctx.bezierCurveTo(-360.3758100000002, 187.99108000000004, -360.41536000000013, 187.98540000000003, -360.35756000000015, 187.97810000000004);
        ctx.closePath();
        ctx.moveTo(-361.1220900000002, 187.59930000000003);
        ctx.bezierCurveTo(-361.08049000000017, 187.55510000000004, -361.03929000000016, 187.51890000000003, -361.03049000000016, 187.51890000000003);
        ctx.bezierCurveTo(-361.02149000000014, 187.51890000000003, -361.04839000000015, 187.55510000000004, -361.08999000000017, 187.59930000000003);
        ctx.bezierCurveTo(-361.1315900000002, 187.64350000000002, -361.1727900000002, 187.67970000000003, -361.1815900000002, 187.67970000000003);
        ctx.bezierCurveTo(-361.1905900000002, 187.67970000000003, -361.1636900000002, 187.64350000000002, -361.1220900000002, 187.59930000000003);
        ctx.closePath();
        ctx.moveTo(-359.16233000000017, 187.59130000000002);
        ctx.lineTo(-359.24033000000014, 187.5028);
        ctx.lineTo(-359.15183000000013, 187.5808);
        ctx.bezierCurveTo(-359.06913000000014, 187.65370000000001, -359.04862000000014, 187.6797, -359.07383000000016, 187.6797);
        ctx.bezierCurveTo(-359.07983000000013, 187.6797, -359.11943000000014, 187.63989999999998, -359.16233000000017, 187.5912);
        ctx.closePath();
        ctx.moveTo(-361.3794300000002, 187.53500000000003);
        ctx.bezierCurveTo(-361.33783000000017, 187.49080000000004, -361.29663000000016, 187.45460000000003, -361.28783000000016, 187.45460000000003);
        ctx.bezierCurveTo(-361.27883000000014, 187.45460000000003, -361.30573000000015, 187.49080000000004, -361.34733000000017, 187.53500000000003);
        ctx.bezierCurveTo(-361.38883000000015, 187.57920000000001, -361.4301300000002, 187.61540000000002, -361.4389300000002, 187.61540000000002);
        ctx.bezierCurveTo(-361.4479300000002, 187.61540000000002, -361.4210300000002, 187.57920000000001, -361.3794300000002, 187.53500000000003);
        ctx.closePath();
        ctx.moveTo(-358.9709900000002, 187.39829000000003);
        ctx.bezierCurveTo(-359.0109900000002, 187.34729000000004, -359.0098900000002, 187.34619000000004, -358.9588900000002, 187.38619000000003);
        ctx.bezierCurveTo(-358.9052900000002, 187.42819000000003, -358.8882900000002, 187.45459000000002, -358.91469000000023, 187.45459000000002);
        ctx.bezierCurveTo(-358.92169000000024, 187.45459000000002, -358.9466900000002, 187.42929000000004, -358.97099000000026, 187.39829000000003);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.save();
        ctx.fillStyle = "rgba(255, 255, 255, 1)";
        ctx.lineWidth = 0.0321672;
        ctx.font = "   15px ''";
        ctx.beginPath();
        ctx.moveTo(-433.45012, 205.86621);
        ctx.bezierCurveTo(-436.23094000000003, 205.47753, -438.58695, 203.4212, -439.37141, 200.69813);
        ctx.bezierCurveTo(-439.68313, 199.61604, -439.72781000000003, 198.39491999999998, -439.49649000000005, 197.27942);
        ctx.bezierCurveTo(-438.98829000000006, 194.82873999999998, -437.13057000000003, 192.76549999999997, -434.72355000000005, 191.97848);
        ctx.bezierCurveTo(-433.95567000000005, 191.72741, -433.34525, 191.63223, -432.50744000000003, 191.63296);
        ctx.bezierCurveTo(-431.59124, 191.63377, -430.87854000000004, 191.74072999999999, -430.10506000000004, 191.99352);
        ctx.bezierCurveTo(-429.65627000000006, 192.1402, -428.93834000000004, 192.48253, -428.60015000000004, 192.71111);
        ctx.bezierCurveTo(-428.48031000000003, 192.79210999999998, -428.37537000000003, 192.85837999999998, -428.36694000000006, 192.85837999999998);
        ctx.bezierCurveTo(-428.3589400000001, 192.85837999999998, -428.35164000000003, 192.61229999999998, -428.35164000000003, 192.31153999999998);
        ctx.lineTo(-428.35164000000003, 191.76468999999997);
        ctx.lineTo(-426.61460000000005, 191.76468999999997);
        ctx.lineTo(-424.87757000000005, 191.76468999999997);
        ctx.lineTo(-424.87757000000005, 198.68064999999999);
        ctx.lineTo(-424.87757000000005, 205.5966);
        ctx.lineTo(-426.61367000000007, 205.5966);
        ctx.lineTo(-428.3497700000001, 205.5966);
        ctx.lineTo(-428.3587700000001, 205.18003);
        ctx.lineTo(-428.3677700000001, 204.76345999999998);
        ctx.lineTo(-428.5929400000001, 204.91069);
        ctx.bezierCurveTo(-429.26699000000013, 205.35139999999998, -430.1847700000001, 205.67228, -431.2467400000001, 205.83850999999999);
        ctx.bezierCurveTo(-431.7368400000001, 205.91520999999997, -432.9870900000001, 205.93090999999998, -433.4501900000001, 205.86621);
        ctx.closePath();
        ctx.moveTo(-431.70757000000003, 202.68561);
        ctx.bezierCurveTo(-431.13923000000005, 202.59341, -430.62386000000004, 202.3935, -430.1292, 202.0733);
        ctx.bezierCurveTo(-429.75355, 201.83013, -429.19952, 201.26631999999998, -428.96788000000004, 200.89147);
        ctx.bezierCurveTo(-428.07671000000005, 199.44937, -428.15447000000006, 197.67792, -429.16803000000004, 196.33154);
        ctx.bezierCurveTo(-429.76358000000005, 195.54044, -430.59914000000003, 195.01524999999998, -431.60181000000006, 194.80181);
        ctx.bezierCurveTo(-432.01679000000007, 194.71350999999999, -432.74419000000006, 194.72171, -433.14453000000003, 194.81921);
        ctx.bezierCurveTo(-434.65853000000004, 195.18802, -435.86691, 196.3604, -436.25428000000005, 197.83631);
        ctx.bezierCurveTo(-436.36778000000004, 198.26874, -436.39299000000005, 198.93189999999998, -436.31288000000006, 199.37911);
        ctx.bezierCurveTo(-436.1640500000001, 200.21049, -435.79953000000006, 200.88945, -435.15805000000006, 201.53016);
        ctx.bezierCurveTo(-434.52940000000007, 202.15804, -433.8258000000001, 202.53179, -432.9861700000001, 202.68383);
        ctx.bezierCurveTo(-432.6579000000001, 202.74323, -432.0680500000001, 202.74413, -431.7075300000001, 202.68583);
        ctx.closePath();
        ctx.moveTo(-417.39867000000004, 205.87133);
        ctx.bezierCurveTo(-419.15105000000005, 205.6549, -420.74267000000003, 204.809, -421.87747, 203.49097);
        ctx.bezierCurveTo(-422.80582000000004, 202.41271, -423.38314, 201.11698, -423.57642000000004, 199.67783);
        ctx.bezierCurveTo(-423.63722, 199.22534, -423.63572000000005, 198.26616, -423.57342000000006, 197.79188);
        ctx.bezierCurveTo(-423.36366000000004, 196.19174999999998, -422.68948000000006, 194.81383, -421.56729000000007, 193.69163);
        ctx.bezierCurveTo(-420.46630000000005, 192.59064, -419.14634000000007, 191.93314, -417.56500000000005, 191.69801);
        ctx.bezierCurveTo(-417.07579000000004, 191.62531, -416.1215000000001, 191.61101000000002, -415.59717000000006, 191.66851);
        ctx.bezierCurveTo(-414.5271900000001, 191.78598, -413.4348800000001, 192.1591, -412.6354800000001, 192.68017);
        ctx.bezierCurveTo(-412.4851500000001, 192.77817000000002, -412.35541000000006, 192.85834, -412.34717000000006, 192.85834);
        ctx.bezierCurveTo(-412.3391700000001, 192.85834, -412.3321700000001, 191.54109, -412.3321700000001, 189.93112);
        ctx.lineTo(-412.3321700000001, 187.0039);
        ctx.lineTo(-410.5951400000001, 187.0039);
        ctx.lineTo(-408.85811000000007, 187.0039);
        ctx.lineTo(-408.85811000000007, 196.30023);
        ctx.lineTo(-408.85811000000007, 205.59656);
        ctx.lineTo(-410.5951400000001, 205.59656);
        ctx.lineTo(-412.3321700000001, 205.59656);
        ctx.lineTo(-412.3321700000001, 205.17839);
        ctx.bezierCurveTo(-412.3321700000001, 204.94840000000002, -412.33817000000005, 204.76022, -412.3449700000001, 204.76022);
        ctx.bezierCurveTo(-412.3519700000001, 204.76022, -412.4569500000001, 204.82072, -412.5781800000001, 204.89456);
        ctx.bezierCurveTo(-413.3839400000001, 205.38565000000003, -414.4791800000001, 205.74612000000002, -415.5440600000001, 205.87068000000002);
        ctx.bezierCurveTo(-416.02640000000014, 205.92708000000002, -416.9441600000001, 205.92738000000003, -417.3985100000001, 205.87130000000002);
        ctx.closePath();
        ctx.moveTo(-415.72229000000004, 202.68393);
        ctx.bezierCurveTo(-414.87456000000003, 202.5361, -414.05211, 202.08654, -413.43318000000005, 201.43268);
        ctx.bezierCurveTo(-412.71411000000006, 200.67303, -412.33233000000007, 199.74093, -412.33233000000007, 198.74498);
        ctx.bezierCurveTo(-412.33233000000007, 197.71135999999998, -412.74572000000006, 196.75735, -413.5386000000001, 195.96117999999998);
        ctx.bezierCurveTo(-414.6584000000001, 194.83675, -416.1650100000001, 194.45788, -417.6077600000001, 194.93792);
        ctx.bezierCurveTo(-418.7487400000001, 195.31756, -419.71557000000007, 196.26908, -420.1283700000001, 197.41861);
        ctx.bezierCurveTo(-420.3428800000001, 198.01598, -420.40965000000006, 198.82276, -420.29516000000007, 199.43379);
        ctx.bezierCurveTo(-420.02405000000005, 200.88061, -419.04222000000004, 202.04119, -417.69423000000006, 202.50825999999998);
        ctx.bezierCurveTo(-417.4670100000001, 202.58695999999998, -417.14796000000007, 202.66278999999997, -416.8357500000001, 202.71222999999998);
        ctx.bezierCurveTo(-416.6258600000001, 202.74542999999997, -415.98118000000005, 202.72902999999997, -415.7222900000001, 202.68392999999998);
        ctx.closePath();
        ctx.moveTo(-395.94313000000005, 205.88288);
        ctx.bezierCurveTo(-397.78986000000003, 205.65957, -399.48233000000005, 204.75936, -400.67706000000004, 203.36494);
        ctx.bezierCurveTo(-401.52056000000005, 202.38046, -402.06905000000006, 201.22261, -402.29846000000003, 199.94219999999999);
        ctx.bezierCurveTo(-402.38596, 199.45367, -402.41696, 198.50572, -402.36196, 197.9996);
        ctx.bezierCurveTo(-402.182, 196.34474999999998, -401.45991000000004, 194.86649, -400.26591, 193.70856999999998);
        ctx.bezierCurveTo(-399.69284000000005, 193.15283, -399.14033, 192.75630999999998, -398.48097, 192.42761);
        ctx.bezierCurveTo(-397.35747000000003, 191.86753, -396.35209000000003, 191.63318999999998, -395.07465, 191.63365);
        ctx.bezierCurveTo(-393.48714, 191.63423, -392.28532, 191.99765, -391.17437, 192.8131);
        ctx.lineTo(-391.10197, 192.8662);
        ctx.lineTo(-391.10197, 189.93506);
        ctx.lineTo(-391.10197, 187.00391);
        ctx.lineTo(-389.36494, 187.00391);
        ctx.lineTo(-387.62791, 187.00391);
        ctx.lineTo(-387.62791, 196.30024);
        ctx.lineTo(-387.62791, 205.59657);
        ctx.lineTo(-389.364, 205.59657);
        ctx.lineTo(-391.1001, 205.59657);
        ctx.lineTo(-391.1091, 205.17977000000002);
        ctx.lineTo(-391.1181, 204.76296000000002);
        ctx.lineTo(-391.39152, 204.94153000000003);
        ctx.bezierCurveTo(-392.06065, 205.37854000000002, -392.82872000000003, 205.66198000000003, -393.78798, 205.82590000000002);
        ctx.bezierCurveTo(-394.23428, 205.90220000000002, -395.50567, 205.93576000000002, -395.94319, 205.8829);
        ctx.closePath();
        ctx.moveTo(-394.45791, 202.68561);
        ctx.bezierCurveTo(-393.59252000000004, 202.54525999999998, -392.83152, 202.14862, -392.22709000000003, 201.52288);
        ctx.bezierCurveTo(-391.47176, 200.74095, -391.10196, 199.82162, -391.10196, 198.72582999999997);
        ctx.bezierCurveTo(-391.10196, 196.69385999999997, -392.64982000000003, 194.9859, -394.70301, 194.75231999999997);
        ctx.bezierCurveTo(-396.4636, 194.55202999999997, -398.29704, 195.76282999999998, -398.91639, 197.53480999999996);
        ctx.bezierCurveTo(-399.05158, 197.92161999999996, -399.11159999999995, 198.29365999999996, -399.11159999999995, 198.74497999999997);
        ctx.bezierCurveTo(-399.11159999999995, 199.52808999999996, -398.90040999999997, 200.21198999999996, -398.44141999999994, 200.91523999999998);
        ctx.bezierCurveTo(-398.24997999999994, 201.20854999999997, -397.6149699999999, 201.84508, -397.32373999999993, 202.03557999999998);
        ctx.bezierCurveTo(-396.82296999999994, 202.36314, -396.2783599999999, 202.58579999999998, -395.73936999999995, 202.68332999999998);
        ctx.bezierCurveTo(-395.40846999999997, 202.74322999999998, -394.81947999999994, 202.74423, -394.45790999999997, 202.68533);
        ctx.closePath();
        ctx.moveTo(-380.10076000000004, 205.88465);
        ctx.bezierCurveTo(-380.80486, 205.79945, -381.68601, 205.55107999999998, -382.29354000000006, 205.26658);
        ctx.bezierCurveTo(-384.2675300000001, 204.34221, -385.71211000000005, 202.54976, -386.21170000000006, 200.40489);
        ctx.bezierCurveTo(-386.39810000000006, 199.60464, -386.4463800000001, 198.49594, -386.32943000000006, 197.70116);
        ctx.bezierCurveTo(-385.9048900000001, 194.81608, -383.87100000000004, 192.54816, -381.07711000000006, 191.84448999999998);
        ctx.bezierCurveTo(-380.10577000000006, 191.59984999999998, -378.95826000000005, 191.56118999999998, -377.88122000000004, 191.73682999999997);
        ctx.bezierCurveTo(-377.04848000000004, 191.87262999999996, -376.1419, 192.21522999999996, -375.43128, 192.66266999999996);
        ctx.bezierCurveTo(-375.26033, 192.77030999999997, -375.11196, 192.85837999999995, -375.10157000000004, 192.85837999999995);
        ctx.bezierCurveTo(-375.09117000000003, 192.85837999999995, -375.08267000000006, 192.61229999999995, -375.08267000000006, 192.31153999999995);
        ctx.lineTo(-375.08267000000006, 191.76468999999994);
        ctx.lineTo(-373.44214000000005, 191.76468999999994);
        ctx.lineTo(-371.80162000000007, 191.76468999999994);
        ctx.lineTo(-371.80162000000007, 198.68064999999996);
        ctx.lineTo(-371.80162000000007, 205.59659999999997);
        ctx.lineTo(-373.44214000000005, 205.59659999999997);
        ctx.lineTo(-375.08267000000006, 205.59659999999997);
        ctx.lineTo(-375.08267000000006, 205.17842999999996);
        ctx.bezierCurveTo(-375.08267000000006, 204.94843999999998, -375.0916700000001, 204.76025999999996, -375.10257000000007, 204.76025999999996);
        ctx.bezierCurveTo(-375.11347000000006, 204.76025999999996, -375.20400000000006, 204.80965999999995, -375.3036200000001, 204.86998999999997);
        ctx.bezierCurveTo(-376.0734800000001, 205.33639999999997, -377.0674200000001, 205.69010999999998, -378.02596000000005, 205.83878999999996);
        ctx.bezierCurveTo(-378.43618000000004, 205.90238999999997, -379.71952000000005, 205.93078999999997, -380.10074000000003, 205.88468999999995);
        ctx.closePath();
        ctx.moveTo(-378.50536000000005, 202.686);
        ctx.bezierCurveTo(-377.6937500000001, 202.55436, -376.89934000000005, 202.1396, -376.28807000000006, 201.52832);
        ctx.bezierCurveTo(-375.52263000000005, 200.76289, -375.10657000000003, 199.79097000000002, -375.10346000000004, 198.76107000000002);
        ctx.bezierCurveTo(-375.10246000000006, 198.31719, -375.14896000000005, 198.00953, -375.27845, 197.61174000000003);
        ctx.bezierCurveTo(-375.73378, 196.21295000000003, -376.959, 195.10856000000004, -378.39590000000004, 194.80172000000002);
        ctx.bezierCurveTo(-378.76137000000006, 194.72372000000001, -379.46316, 194.72252000000003, -379.85227000000003, 194.79972);
        ctx.bezierCurveTo(-381.52854, 195.13072, -382.82029000000006, 196.48385000000002, -383.08152, 198.18239);
        ctx.bezierCurveTo(-383.13882, 198.55497, -383.12202, 199.17078, -383.04462, 199.53342);
        ctx.bezierCurveTo(-382.69396, 201.17669, -381.44756, 202.38342, -379.79216, 202.68236000000002);
        ctx.bezierCurveTo(-379.45484000000005, 202.74326000000002, -378.86761, 202.74506000000002, -378.50537, 202.68636);
        ctx.closePath();
        ctx.moveTo(-364.51574000000005, 205.89675);
        ctx.bezierCurveTo(-367.0834300000001, 205.80375, -369.02829, 204.76545, -369.88925000000006, 203.02797);
        ctx.bezierCurveTo(-370.13854000000003, 202.52491, -370.30788000000007, 201.9378, -370.37075000000004, 201.35857000000001);
        ctx.lineTo(-370.39255, 201.15753);
        ctx.lineTo(-368.57194000000004, 201.15753);
        ctx.lineTo(-366.75133000000005, 201.15753);
        ctx.lineTo(-366.75133000000005, 201.27147000000002);
        ctx.bezierCurveTo(-366.75133000000005, 201.46179000000004, -366.65473000000003, 201.86692000000002, -366.56030000000004, 202.07282000000004);
        ctx.bezierCurveTo(-366.15186000000006, 202.96320000000003, -365.11743, 203.45426000000003, -363.76343, 203.40054000000003);
        ctx.bezierCurveTo(-363.00410000000005, 203.37044000000003, -362.43942000000004, 203.14813000000004, -361.98356, 202.69992000000005);
        ctx.bezierCurveTo(-361.12095, 201.85178000000005, -361.49775, 200.97908000000004, -362.87721, 200.63015000000004);
        ctx.bezierCurveTo(-363.05525, 200.58515000000006, -363.73555999999996, 200.46021000000005, -364.38901, 200.35259000000005);
        ctx.bezierCurveTo(-365.95677, 200.09436000000005, -366.50228999999996, 199.97404000000006, -367.32972, 199.70396000000005);
        ctx.bezierCurveTo(-368.1581, 199.43358000000006, -368.50731, 199.23740000000006, -368.94599, 198.79599000000005);
        ctx.bezierCurveTo(-369.49541999999997, 198.24313000000004, -369.85067, 197.52545000000003, -369.98780999999997, 196.69130000000004);
        ctx.bezierCurveTo(-370.06400999999994, 196.22812000000005, -370.03371, 195.49245000000005, -369.92051, 195.05333000000005);
        ctx.bezierCurveTo(-369.71709, 194.26448000000005, -369.35519, 193.65078000000005, -368.76273999999995, 193.08997000000005);
        ctx.bezierCurveTo(-367.98491999999993, 192.35370000000006, -366.93353999999994, 191.88993000000005, -365.56114999999994, 191.67771000000005);
        ctx.bezierCurveTo(-365.03416999999996, 191.59621000000004, -363.57908999999995, 191.59621000000004, -363.0521099999999, 191.67771000000005);
        ctx.bezierCurveTo(-361.9696699999999, 191.84509000000006, -361.1144599999999, 192.15868000000006, -360.3486999999999, 192.66900000000004);
        ctx.bezierCurveTo(-359.9714799999999, 192.92039000000003, -359.3995899999999, 193.48608000000004, -359.1653999999999, 193.83948000000004);
        ctx.bezierCurveTo(-358.7565199999999, 194.45648000000003, -358.49722999999994, 195.17721000000003, -358.4321299999999, 195.87766000000005);
        ctx.lineTo(-358.4108299999999, 196.10727000000006);
        ctx.lineTo(-360.1363899999999, 196.10727000000006);
        ctx.lineTo(-361.8619599999999, 196.10727000000006);
        ctx.lineTo(-361.8625099999999, 195.95448000000005);
        ctx.bezierCurveTo(-361.8645099999999, 195.52064000000004, -362.03665999999987, 195.09164000000004, -362.32605999999987, 194.80208000000005);
        ctx.bezierCurveTo(-362.7105599999999, 194.41737000000003, -363.1540899999999, 194.27428000000003, -364.0374199999999, 194.24995000000004);
        ctx.bezierCurveTo(-365.6170499999999, 194.20645000000005, -366.37986999999987, 194.55328000000003, -366.5608799999999, 195.39733000000004);
        ctx.bezierCurveTo(-366.62347999999986, 195.68916000000004, -366.47807999999986, 196.02104000000003, -366.19513999999987, 196.23229000000003);
        ctx.bezierCurveTo(-365.7204599999999, 196.58667000000003, -365.2076699999999, 196.72892000000004, -363.29150999999985, 197.03774000000004);
        ctx.bezierCurveTo(-361.85130999999984, 197.26986000000005, -361.41622999999987, 197.35920000000004, -360.9130099999999, 197.52617000000004);
        ctx.bezierCurveTo(-359.5222199999999, 197.98764000000003, -358.5046199999999, 198.85069000000004, -358.1088099999999, 199.90446000000003);
        ctx.bezierCurveTo(-357.9309699999999, 200.37792000000002, -357.8945599999999, 200.59666000000004, -357.8948599999999, 201.18969000000004);
        ctx.bezierCurveTo(-357.89517999999987, 201.76956000000004, -357.9439599999999, 202.14077000000003, -358.0832599999999, 202.62134000000003);
        ctx.bezierCurveTo(-358.5640099999999, 204.28031000000004, -360.0261199999999, 205.38006000000004, -362.2479499999999, 205.75388000000004);
        ctx.bezierCurveTo(-362.86399999999986, 205.85753000000003, -363.8622299999999, 205.92042000000004, -364.5157399999999, 205.89675000000003);
        ctx.closePath();
        ctx.moveTo(-407.28208000000006, 198.5359);
        ctx.lineTo(-407.28208000000006, 191.57169);
        ctx.lineTo(-405.52896000000004, 191.57169);
        ctx.lineTo(-403.77585000000005, 191.57169);
        ctx.lineTo(-403.77585000000005, 198.5359);
        ctx.lineTo(-403.77585000000005, 205.5001);
        ctx.lineTo(-405.52896000000004, 205.5001);
        ctx.lineTo(-407.28208000000006, 205.5001);
        ctx.closePath();
        ctx.moveTo(-360.35726000000005, 190.37916);
        ctx.bezierCurveTo(-360.97102000000007, 190.28816, -361.57022000000006, 189.77682000000001, -361.76090000000005, 189.18136);
        ctx.bezierCurveTo(-361.89898000000005, 188.75013, -361.87509000000006, 188.40463000000003, -361.67930000000007, 188.00113000000002);
        ctx.bezierCurveTo(-361.5256800000001, 187.68459000000001, -361.16467000000006, 187.31612, -360.8647900000001, 187.16981);
        ctx.bezierCurveTo(-359.9995400000001, 186.74767, -358.9919700000001, 187.07861000000003, -358.5783800000001, 187.92071);
        ctx.bezierCurveTo(-357.9625800000001, 189.17458000000002, -358.9818000000001, 190.58313, -360.3572900000001, 190.37916);
        ctx.closePath();
        ctx.moveTo(-359.70007000000004, 190.12474);
        ctx.bezierCurveTo(-359.20074000000005, 189.97051, -358.87378000000007, 189.58024, -358.75571, 188.99752);
        ctx.bezierCurveTo(-358.59494, 188.20412000000002, -359.03377, 187.43434000000002, -359.75370000000004, 187.24687);
        ctx.bezierCurveTo(-360.61004, 187.02388, -361.38376000000005, 187.5619, -361.51194000000004, 188.4695);
        ctx.bezierCurveTo(-361.59284, 189.04222000000001, -361.3489, 189.64847, -360.9182, 189.94510000000002);
        ctx.bezierCurveTo(-360.57275, 190.18302000000003, -360.10981000000004, 190.25129, -359.70007000000004, 190.12474000000003);
        ctx.closePath();
        ctx.moveTo(-360.70392000000004, 188.69272);
        ctx.lineTo(-360.70392000000004, 187.77596);
        ctx.lineTo(-360.27770000000004, 187.77627999999999);
        ctx.bezierCurveTo(-359.89270000000005, 187.77627999999999, -359.84006000000005, 187.78328, -359.73330000000004, 187.84867999999997);
        ctx.bezierCurveTo(-359.33979000000005, 188.08912999999998, -359.33184000000006, 188.54518999999996, -359.71650000000005, 188.81471999999997);
        ctx.bezierCurveTo(-359.7710000000001, 188.85291999999995, -359.76460000000003, 188.87761999999998, -359.61196000000007, 189.22301999999996);
        ctx.bezierCurveTo(-359.52256000000006, 189.42523999999997, -359.44943000000006, 189.59495999999996, -359.44943000000006, 189.60017999999997);
        ctx.bezierCurveTo(-359.44943000000006, 189.60517999999996, -359.51973000000004, 189.60917999999995, -359.60561000000007, 189.60917999999995);
        ctx.lineTo(-359.76180000000005, 189.60917999999995);
        ctx.lineTo(-359.93194000000005, 189.22316999999995);
        ctx.lineTo(-360.10207, 188.83715999999995);
        ctx.lineTo(-360.29043, 188.83715999999995);
        ctx.lineTo(-360.47878000000003, 188.83715999999995);
        ctx.lineTo(-360.47878000000003, 189.22316999999995);
        ctx.lineTo(-360.47878000000003, 189.60917999999995);
        ctx.lineTo(-360.59136, 189.60917999999995);
        ctx.lineTo(-360.70395, 189.60917999999995);
        ctx.lineTo(-360.70395, 188.69240999999994);
        ctx.closePath();
        ctx.moveTo(-359.80825000000004, 188.56677000000002);
        ctx.bezierCurveTo(-359.77045000000004, 188.52897000000002, -359.75495000000006, 188.45713, -359.75495000000006, 188.31881);
        ctx.bezierCurveTo(-359.75495000000006, 188.07256, -359.8144500000001, 188.01537000000002, -360.10291000000007, 187.98449000000002);
        ctx.bezierCurveTo(-360.4674600000001, 187.94549000000004, -360.46117000000004, 187.94059000000001, -360.4720000000001, 188.27200000000002);
        ctx.bezierCurveTo(-360.4770000000001, 188.42983, -360.47300000000007, 188.58019000000002, -360.4630000000001, 188.60614);
        ctx.bezierCurveTo(-360.4364000000001, 188.67554, -359.8834500000001, 188.64224000000002, -359.8079400000001, 188.56674);
        ctx.closePath();
        ctx.moveTo(-407.28208000000006, 188.56277000000003);
        ctx.lineTo(-407.28208000000006, 186.841);
        ctx.lineTo(-411.95132000000007, 178.63113);
        ctx.bezierCurveTo(-414.51941000000005, 174.1157, -416.6263400000001, 170.3994, -416.6333900000001, 170.37268);
        ctx.bezierCurveTo(-416.6423900000001, 170.33728, -415.01186000000007, 169.39987, -410.5978300000001, 166.90372);
        ctx.bezierCurveTo(-407.2712200000001, 165.02250999999998, -404.5344500000001, 163.48834, -404.5161100000001, 163.49445);
        ctx.bezierCurveTo(-404.4978100000001, 163.50045, -401.4790700000001, 168.75278, -397.8078700000001, 175.16606);
        ctx.lineTo(-391.1329600000001, 186.82655);
        ctx.lineTo(-397.4704900000001, 186.83455);
        ctx.lineTo(-403.8080100000001, 186.84255000000002);
        ctx.lineTo(-403.8080100000001, 188.56341);
        ctx.lineTo(-403.8080100000001, 190.28428);
        ctx.lineTo(-405.54505000000006, 190.28428);
        ctx.lineTo(-407.28208000000006, 190.28428);
        ctx.closePath();
        ctx.moveTo(-428.5346400000001, 186.80243000000002);
        ctx.bezierCurveTo(-428.5489400000001, 186.78033000000002, -429.05572000000006, 185.87199, -429.6608300000001, 184.78393000000003);
        ctx.bezierCurveTo(-430.4971900000001, 183.28008000000003, -430.7517700000001, 182.79724000000002, -430.7223900000001, 182.77057000000002);
        ctx.bezierCurveTo(-430.61584000000005, 182.67387000000002, -418.7877200000001, 175.83926000000002, -418.7672300000001, 175.86255000000003);
        ctx.bezierCurveTo(-418.7541300000001, 175.87745000000004, -417.3271800000001, 178.32154000000003, -415.5963200000001, 181.29379000000003);
        ctx.bezierCurveTo(-413.8654600000001, 184.26604000000003, -412.4285500000001, 186.73045000000002, -412.4032000000001, 186.77026000000004);
        ctx.lineTo(-412.35710000000006, 186.84266000000002);
        ctx.lineTo(-420.43288000000007, 186.84266000000002);
        ctx.bezierCurveTo(-426.85820000000007, 186.84266000000002, -428.5139700000001, 186.83466, -428.5346400000001, 186.80246000000002);
        ctx.closePath();
        ctx.moveTo(-386.1067300000001, 186.73813);
        ctx.bezierCurveTo(-386.4732800000001, 186.11384, -402.72116000000005, 157.76017000000002, -402.7232800000001, 157.74111000000002);
        ctx.bezierCurveTo(-402.7262800000001, 157.71371000000002, -390.7720200000001, 150.68424000000002, -390.7536300000001, 150.70264000000003);
        ctx.bezierCurveTo(-390.7362300000001, 150.72004000000004, -369.9037500000001, 186.81837000000002, -369.9037500000001, 186.83110000000002);
        ctx.bezierCurveTo(-369.9037500000001, 186.83710000000002, -373.53561000000013, 186.8427, -377.97455000000014, 186.8427);
        ctx.lineTo(-386.0453400000001, 186.8427);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();
        ctx.restore();
        ctx.restore();
        ctx.restore();
        ctx.restore();

        return context.createPattern(patternCanvas, 'repeat');
    },
    logo: function() {
        const patternCanvas = document.createElement('canvas');
        const patternContext = patternCanvas.getContext('2d');

        patternCanvas.width = blockSize;
        patternCanvas.height = blockSize;
        
        // #path966
	patternContext.beginPath();
	patternContext.fillStyle = 'rgb(220, 150, 162)';
	patternContext.lineWidth = 0.020526;
	patternContext.moveTo(-31.500987, 72.099687);
	patternContext.bezierCurveTo(-31.500987, 72.083517, -31.440107, 72.022207, -31.365705, 71.963436);
	patternContext.bezierCurveTo(-31.243096, 71.866586, -31.240362, 71.869346, -31.336515, 71.992836);
	patternContext.bezierCurveTo(-31.437503, 72.122527, -31.500984, 72.163771, -31.500984, 72.099691);
	patternContext.moveTo(-30.805250, 71.476825);
	patternContext.bezierCurveTo(-30.805250, 71.460655, -30.744370, 71.399345, -30.669968, 71.340574);
	patternContext.bezierCurveTo(-30.547359, 71.243734, -30.544624, 71.246484, -30.640778, 71.369974);
	patternContext.bezierCurveTo(-30.741766, 71.499666, -30.805247, 71.540909, -30.805247, 71.476829);
	patternContext.moveTo(-55.736435, 64.265457);
	patternContext.lineTo(-55.735817, 57.141480);
	patternContext.lineTo(-53.880518, 57.139380);
	patternContext.lineTo(-52.025219, 57.137280);
	patternContext.lineTo(-53.860788, 57.160200);
	patternContext.lineTo(-55.696356, 57.183120);
	patternContext.lineTo(-55.716696, 64.286250);
	patternContext.lineTo(-55.737036, 71.389379);
	patternContext.lineTo(-55.736418, 64.265402);
	patternContext.moveTo(-64.065347, 70.598223);
	patternContext.bezierCurveTo(-63.990247, 70.567703, -63.968717, 69.848968, -63.968717, 67.373277);
	patternContext.bezierCurveTo(-63.968717, 65.621154, -63.942627, 64.187588, -63.910737, 64.187574);
	patternContext.bezierCurveTo(-63.878847, 64.187560, -63.862207, 65.641552, -63.873757, 67.418668);
	patternContext.bezierCurveTo(-63.893277, 70.423251, -63.904117, 70.649355, -64.028365, 70.643640);
	patternContext.bezierCurveTo(-64.109065, 70.639940, -64.123715, 70.621940, -64.065345, 70.598220);
	patternContext.moveTo(-47.870587, 63.584203);
	patternContext.lineTo(-47.889457, 57.102551);
	patternContext.lineTo(-47.638219, 57.114221);
	patternContext.bezierCurveTo(-47.405027, 57.125051, -47.402219, 57.128211, -47.599119, 57.158281);
	patternContext.lineTo(-47.811259, 57.190671);
	patternContext.lineTo(-47.831479, 63.628266);
	patternContext.lineTo(-47.851699, 70.065860);
	patternContext.moveTo(-28.099606, 68.751807);
	patternContext.bezierCurveTo(-28.099606, 68.735637, -28.038726, 68.674327, -27.964324, 68.615556);
	patternContext.bezierCurveTo(-27.841715, 68.518706, -27.838980, 68.521466, -27.935134, 68.644956);
	patternContext.bezierCurveTo(-28.036121, 68.774647, -28.099603, 68.815891, -28.099603, 68.751811);
	patternContext.moveTo(-72.907078, 65.861540);
	patternContext.bezierCurveTo(-72.906923, 65.390501, -72.894168, 65.207841, -72.878788, 65.455630);
	patternContext.bezierCurveTo(-72.863398, 65.703418, -72.863548, 66.088813, -72.879097, 66.312064);
	patternContext.bezierCurveTo(-72.894657, 66.535315, -72.907247, 66.332574, -72.907077, 65.861540);
	patternContext.moveTo(-76.686714, 55.817900);
	patternContext.bezierCurveTo(-76.686718, 51.535728, -76.677414, 49.772502, -76.665934, 51.899620);
	patternContext.bezierCurveTo(-76.654504, 54.026740, -76.654504, 57.530335, -76.665927, 59.685388);
	patternContext.bezierCurveTo(-76.677357, 61.840442, -76.686707, 60.100072, -76.686707, 55.817900);
	patternContext.moveTo(-26.070373, 62.185392);
	patternContext.bezierCurveTo(-25.953450, 62.167552, -25.762122, 62.167552, -25.645200, 62.185392);
	patternContext.bezierCurveTo(-25.528277, 62.203232, -25.623940, 62.217822, -25.857786, 62.217822);
	patternContext.bezierCurveTo(-26.091631, 62.217822, -26.187295, 62.203222, -26.070373, 62.185392);
	patternContext.moveTo(-27.113978, 62.111732);
	patternContext.bezierCurveTo(-27.060828, 62.090132, -26.973865, 62.090132, -26.920718, 62.111732);
	patternContext.bezierCurveTo(-26.867568, 62.133332, -26.911018, 62.151002, -27.017348, 62.151002);
	patternContext.bezierCurveTo(-27.123641, 62.151002, -27.167125, 62.133332, -27.113978, 62.111732);
	patternContext.moveTo(-24.794855, 62.111732);
	patternContext.bezierCurveTo(-24.741705, 62.090132, -24.654741, 62.090132, -24.601594, 62.111732);
	patternContext.bezierCurveTo(-24.548444, 62.133332, -24.591894, 62.151002, -24.698224, 62.151002);
	patternContext.bezierCurveTo(-24.804518, 62.151002, -24.848001, 62.133332, -24.794854, 62.111732);
	patternContext.moveTo(-27.650276, 62.032252);
	patternContext.bezierCurveTo(-27.594476, 62.009762, -27.527796, 62.012522, -27.502109, 62.038352);
	patternContext.bezierCurveTo(-27.476419, 62.064222, -27.522079, 62.082622, -27.603571, 62.079242);
	patternContext.bezierCurveTo(-27.693621, 62.075542, -27.711943, 62.057052, -27.650281, 62.032202);
	patternContext.moveTo(-24.171590, 62.032252);
	patternContext.bezierCurveTo(-24.115790, 62.009762, -24.049111, 62.012522, -24.023424, 62.038352);
	patternContext.bezierCurveTo(-23.997734, 62.064222, -24.043394, 62.082622, -24.124885, 62.079242);
	patternContext.bezierCurveTo(-24.214945, 62.075542, -24.233258, 62.057052, -24.171585, 62.032202);
	patternContext.moveTo(-78.434448, 61.871329);
	patternContext.bezierCurveTo(-78.530608, 61.747842, -78.527868, 61.745088, -78.405258, 61.841929);
	patternContext.bezierCurveTo(-78.330858, 61.900699, -78.269976, 61.962013, -78.269976, 61.978180);
	patternContext.bezierCurveTo(-78.269976, 62.042260, -78.333456, 62.001020, -78.434445, 61.871325);
	patternContext.moveTo(-26.959370, 60.788151);
	patternContext.bezierCurveTo(-26.906220, 60.766551, -26.819256, 60.766551, -26.766110, 60.788151);
	patternContext.bezierCurveTo(-26.712960, 60.809751, -26.756410, 60.827421, -26.862740, 60.827421);
	patternContext.bezierCurveTo(-26.969033, 60.827421, -27.012517, 60.809751, -26.959370, 60.788151);
	patternContext.moveTo(-24.986644, 60.785751);
	patternContext.bezierCurveTo(-24.911424, 60.766011, -24.807069, 60.767311, -24.754731, 60.788651);
	patternContext.bezierCurveTo(-24.702391, 60.809981, -24.763931, 60.826131, -24.891485, 60.824541);
	patternContext.bezierCurveTo(-25.019037, 60.822941, -25.061858, 60.805501, -24.986645, 60.785761);
	patternContext.moveTo(-24.248894, 60.708661);
	patternContext.bezierCurveTo(-24.193094, 60.686171, -24.126415, 60.688931, -24.100728, 60.714761);
	patternContext.bezierCurveTo(-24.075038, 60.740631, -24.120698, 60.759031, -24.202189, 60.755651);
	patternContext.bezierCurveTo(-24.292249, 60.751951, -24.310562, 60.733461, -24.248889, 60.708611);
	patternContext.moveTo(-39.323198, 58.450789);
	patternContext.bezierCurveTo(-39.267398, 58.428299, -39.200718, 58.431059, -39.175031, 58.456889);
	patternContext.bezierCurveTo(-39.149341, 58.482759, -39.195001, 58.501159, -39.276493, 58.497779);
	patternContext.bezierCurveTo(-39.366543, 58.494079, -39.384865, 58.475599, -39.323193, 58.450739);
	patternContext.moveTo(-37.235986, 58.450789);
	patternContext.bezierCurveTo(-37.180186, 58.428299, -37.113507, 58.431059, -37.087820, 58.456889);
	patternContext.bezierCurveTo(-37.062130, 58.482759, -37.107790, 58.501159, -37.189282, 58.497779);
	patternContext.bezierCurveTo(-37.279332, 58.494079, -37.297654, 58.475599, -37.235982, 58.450739);
	patternContext.moveTo(-26.186329, 58.446989);
	patternContext.bezierCurveTo(-26.005630, 58.430599, -25.709942, 58.430599, -25.529244, 58.446989);
	patternContext.bezierCurveTo(-25.348545, 58.463379, -25.496394, 58.476789, -25.857786, 58.476789);
	patternContext.bezierCurveTo(-26.219183, 58.476789, -26.367027, 58.463379, -26.186329, 58.446989);
	patternContext.moveTo(-38.476299, 58.369709);
	patternContext.bezierCurveTo(-38.337357, 58.352379, -38.128636, 58.352739, -38.012475, 58.370503);
	patternContext.bezierCurveTo(-37.896313, 58.388273, -38.009975, 58.402443, -38.265097, 58.402013);
	patternContext.bezierCurveTo(-38.520201, 58.401546, -38.615242, 58.387043, -38.476299, 58.369713);
	patternContext.moveTo(-27.186451, 58.372909);
	patternContext.bezierCurveTo(-27.130651, 58.350419, -27.063972, 58.353179, -27.038284, 58.379009);
	patternContext.bezierCurveTo(-27.012594, 58.404879, -27.058254, 58.423279, -27.139746, 58.419899);
	patternContext.bezierCurveTo(-27.229796, 58.416199, -27.248119, 58.397709, -27.186456, 58.372859);
	patternContext.moveTo(-24.635415, 58.372909);
	patternContext.bezierCurveTo(-24.579615, 58.350419, -24.512936, 58.353179, -24.487248, 58.379009);
	patternContext.bezierCurveTo(-24.461558, 58.404879, -24.507218, 58.423279, -24.588710, 58.419899);
	patternContext.bezierCurveTo(-24.678770, 58.416199, -24.697083, 58.397709, -24.635410, 58.372859);
	patternContext.moveTo(-24.094286, 58.295049);
	patternContext.bezierCurveTo(-24.038486, 58.272559, -23.971807, 58.275319, -23.946120, 58.301149);
	patternContext.bezierCurveTo(-23.920430, 58.327019, -23.966090, 58.345419, -24.047581, 58.342039);
	patternContext.bezierCurveTo(-24.137641, 58.338339, -24.155954, 58.319859, -24.094281, 58.294999);
	patternContext.moveTo(-39.477806, 57.127184);
	patternContext.bezierCurveTo(-39.422006, 57.104694, -39.355327, 57.107454, -39.329639, 57.133284);
	patternContext.bezierCurveTo(-39.303949, 57.159154, -39.349609, 57.177554, -39.431101, 57.174174);
	patternContext.bezierCurveTo(-39.521151, 57.170474, -39.539474, 57.151984, -39.477811, 57.127134);
	patternContext.moveTo(-37.158682, 57.127184);
	patternContext.bezierCurveTo(-37.102882, 57.104694, -37.036203, 57.107454, -37.010516, 57.133284);
	patternContext.bezierCurveTo(-36.984826, 57.159154, -37.030486, 57.177554, -37.111977, 57.174174);
	patternContext.bezierCurveTo(-37.202037, 57.170474, -37.220350, 57.151984, -37.158677, 57.127134);
	patternContext.moveTo(-80.396882, 45.968865);
	patternContext.bezierCurveTo(-80.396882, 39.823948, -80.387682, 37.310118, -80.376522, 40.382577);
	patternContext.bezierCurveTo(-80.365322, 43.455035, -80.365322, 48.482695, -80.376522, 51.555153);
	patternContext.bezierCurveTo(-80.387722, 54.627612, -80.396882, 52.113782, -80.396882, 45.968865);
	patternContext.moveTo(-38.591308, 57.045188);
	patternContext.bezierCurveTo(-38.388067, 57.029098, -38.074986, 57.029288, -37.895571, 57.045655);
	patternContext.bezierCurveTo(-37.716155, 57.061985, -37.882441, 57.075145, -38.265097, 57.074915);
	patternContext.bezierCurveTo(-38.647753, 57.074681, -38.794547, 57.061315, -38.591308, 57.045225);
	patternContext.moveTo(-46.710572, 56.732940);
	patternContext.bezierCurveTo(-46.210995, 56.719380, -45.393504, 56.719380, -44.893926, 56.732940);
	patternContext.bezierCurveTo(-44.394348, 56.746500, -44.803096, 56.757600, -45.802249, 56.757600);
	patternContext.bezierCurveTo(-46.801405, 56.757600, -47.210150, 56.746510, -46.710572, 56.732940);
	patternContext.moveTo(-36.849466, 54.791454);
	patternContext.bezierCurveTo(-36.793666, 54.768964, -36.726987, 54.771724, -36.701299, 54.797554);
	patternContext.bezierCurveTo(-36.675609, 54.823424, -36.721269, 54.841824, -36.802761, 54.838444);
	patternContext.bezierCurveTo(-36.892821, 54.834744, -36.911134, 54.816254, -36.849471, 54.791404);
	patternContext.moveTo(-39.245893, 54.713594);
	patternContext.bezierCurveTo(-39.190093, 54.691104, -39.123414, 54.693864, -39.097727, 54.719694);
	patternContext.bezierCurveTo(-39.072037, 54.745564, -39.117697, 54.763964, -39.199189, 54.760584);
	patternContext.bezierCurveTo(-39.289239, 54.756884, -39.307561, 54.738394, -39.245889, 54.713544);
	patternContext.moveTo(-37.395426, 54.715194);
	patternContext.bezierCurveTo(-37.342276, 54.693594, -37.255312, 54.693594, -37.202166, 54.715194);
	patternContext.bezierCurveTo(-37.149016, 54.736794, -37.192466, 54.754464, -37.298796, 54.754464);
	patternContext.bezierCurveTo(-37.405089, 54.754464, -37.448573, 54.736794, -37.395426, 54.715194);
	patternContext.moveTo(-38.361728, 54.635234);
	patternContext.bezierCurveTo(-38.287318, 54.615654, -38.165568, 54.615654, -38.091163, 54.635234);
	patternContext.bezierCurveTo(-38.016763, 54.654814, -38.077633, 54.670844, -38.226445, 54.670844);
	patternContext.bezierCurveTo(-38.375256, 54.670844, -38.436133, 54.654824, -38.361728, 54.635234);
	patternContext.moveTo(-57.102675, 52.294841);
	patternContext.bezierCurveTo(-56.111233, 52.282511, -54.511038, 52.282521, -53.546686, 52.294871);
	patternContext.bezierCurveTo(-52.582334, 52.307221, -53.393514, 52.317311, -55.349308, 52.317291);
	patternContext.bezierCurveTo(-57.305102, 52.317275, -58.094117, 52.307171, -57.102675, 52.294841);
	patternContext.moveTo(-57.212408, 49.718729);
	patternContext.bezierCurveTo(-57.171598, 49.652219, -58.206024, 49.624219, -61.278257, 49.608681);
	patternContext.lineTo(-65.398843, 49.587831);
	patternContext.lineTo(-61.243747, 49.569061);
	patternContext.bezierCurveTo(-58.685751, 49.557511, -57.088650, 49.578461, -57.088650, 49.623551);
	patternContext.bezierCurveTo(-57.088650, 49.663851, -57.128810, 49.721811, -57.177900, 49.752368);
	patternContext.bezierCurveTo(-57.232950, 49.786638, -57.246170, 49.773738, -57.212410, 49.718718);
	patternContext.moveTo(-63.002416, 46.380828);
	patternContext.bezierCurveTo(-60.867073, 46.325888, -58.943802, 46.324358, -58.943872, 46.377628);
	patternContext.bezierCurveTo(-58.943915, 46.409748, -60.048432, 46.428528, -61.398355, 46.419378);
	patternContext.bezierCurveTo(-62.748278, 46.410178, -63.470106, 46.392888, -63.002416, 46.380858);
	patternContext.moveTo(-76.688266, 38.299866);
	patternContext.bezierCurveTo(-76.688250, 36.330067, -76.678216, 35.535401, -76.665976, 36.533943);
	patternContext.bezierCurveTo(-76.653736, 37.532484, -76.653746, 39.144138, -76.666005, 40.115396);
	patternContext.bezierCurveTo(-76.678265, 41.086654, -76.688285, 40.269665, -76.688265, 38.299866);
	patternContext.moveTo(-65.746798, 36.139315);
	patternContext.bezierCurveTo(-65.746750, 36.107195, -64.729196, 36.088315, -63.485566, 36.097345);
	patternContext.bezierCurveTo(-61.219211, 36.113805, -61.476661, 36.140595, -64.258693, 36.177805);
	patternContext.bezierCurveTo(-65.077198, 36.188755, -65.746845, 36.171405, -65.746798, 36.139315);
	patternContext.moveTo(-71.276862, 33.180724);
	patternContext.lineTo(-71.660477, 32.771971);
	patternContext.lineTo(-71.254630, 33.158333);
	patternContext.bezierCurveTo(-70.877511, 33.517347, -70.813332, 33.589477, -70.871016, 33.589477);
	patternContext.bezierCurveTo(-70.883246, 33.589477, -71.065875, 33.405538, -71.276862, 33.180724);
	patternContext.fill();
	
// #patternContexth962
	patternContext.beginPath();
	patternContext.fillStyle = 'rgb(199, 86, 104)';
	patternContext.lineWidth = 0.020526;
	patternContext.moveTo(-31.269075, 71.866114);
	patternContext.bezierCurveTo(-31.269075, 71.849944, -31.208195, 71.788634, -31.133792, 71.729863);
	patternContext.bezierCurveTo(-31.011183, 71.633023, -31.008449, 71.635773, -31.104602, 71.759263);
	patternContext.bezierCurveTo(-31.205590, 71.888954, -31.269072, 71.930198, -31.269072, 71.866118);
	patternContext.moveTo(-57.452311, 71.448285);
	patternContext.bezierCurveTo(-57.120860, 71.433655, -56.599057, 71.433745, -56.292750, 71.448519);
	patternContext.bezierCurveTo(-55.986443, 71.463259, -56.257630, 71.475229, -56.895390, 71.475119);
	patternContext.bezierCurveTo(-57.533149, 71.475041, -57.783764, 71.462949, -57.452311, 71.448319);
	patternContext.moveTo(-30.573338, 71.248286);
	patternContext.bezierCurveTo(-30.573338, 71.234886, -30.460280, 71.121020, -30.322099, 70.995248);
	patternContext.lineTo(-30.070861, 70.766573);
	patternContext.lineTo(-30.297910, 71.019611);
	patternContext.bezierCurveTo(-30.509552, 71.255477, -30.573338, 71.308435, -30.573338, 71.248286);
	patternContext.moveTo(-51.949559, 64.109742);
	patternContext.bezierCurveTo(-51.949559, 60.277198, -51.940159, 58.709339, -51.928619, 60.625611);
	patternContext.bezierCurveTo(-51.917099, 62.541883, -51.917099, 65.677601, -51.928619, 67.593873);
	patternContext.bezierCurveTo(-51.940139, 69.510145, -51.949559, 67.942286, -51.949559, 64.109742);
	patternContext.moveTo(-67.351146, 61.667157);
	patternContext.bezierCurveTo(-67.367976, 54.624288, -67.357146, 53.746464, -67.254146, 53.832529);
	patternContext.bezierCurveTo(-67.124019, 53.941299, -67.096683, 54.023271, -67.215126, 53.949546);
	patternContext.bezierCurveTo(-67.265926, 53.917926, -67.298876, 56.567982, -67.312126, 61.750183);
	patternContext.lineTo(-67.332196, 69.598708);
	patternContext.moveTo(-28.408822, 69.053704);
	patternContext.bezierCurveTo(-28.264590, 68.903828, -28.129188, 68.781203, -28.107929, 68.781203);
	patternContext.bezierCurveTo(-28.086669, 68.781203, -28.187289, 68.903828, -28.331518, 69.053704);
	patternContext.bezierCurveTo(-28.475751, 69.203580, -28.611153, 69.326206, -28.632411, 69.326206);
	patternContext.bezierCurveTo(-28.653671, 69.326206, -28.553051, 69.203580, -28.408822, 69.053704);
	patternContext.moveTo(-27.713085, 68.284661);
	patternContext.bezierCurveTo(-27.713085, 68.268491, -27.652205, 68.207181, -27.577803, 68.148410);
	patternContext.bezierCurveTo(-27.455194, 68.051560, -27.452460, 68.054320, -27.548613, 68.177810);
	patternContext.bezierCurveTo(-27.649601, 68.307501, -27.713082, 68.348745, -27.713082, 68.284665);
	patternContext.moveTo(-27.249260, 67.739657);
	patternContext.bezierCurveTo(-27.249260, 67.723487, -27.188380, 67.662177, -27.113978, 67.603406);
	patternContext.bezierCurveTo(-26.991369, 67.506556, -26.988635, 67.509316, -27.084788, 67.632806);
	patternContext.bezierCurveTo(-27.185776, 67.762497, -27.249257, 67.803741, -27.249257, 67.739661);
	patternContext.moveTo(-75.883412, 64.362780);
	patternContext.bezierCurveTo(-75.979572, 64.239293, -75.976832, 64.236539, -75.854222, 64.333380);
	patternContext.bezierCurveTo(-75.779822, 64.392150, -75.718940, 64.453463, -75.718940, 64.469631);
	patternContext.bezierCurveTo(-75.718940, 64.533711, -75.782420, 64.492471, -75.883409, 64.362776);
	patternContext.moveTo(-78.042228, 62.260622);
	patternContext.lineTo(-78.308631, 61.968656);
	patternContext.lineTo(-78.018741, 62.236967);
	patternContext.bezierCurveTo(-77.859301, 62.384537, -77.728850, 62.515922, -77.728850, 62.528933);
	patternContext.bezierCurveTo(-77.728850, 62.588383, -77.794270, 62.532333, -78.042228, 62.260622);
	patternContext.moveTo(-26.532726, 62.187202);
	patternContext.bezierCurveTo(-26.457516, 62.167462, -26.353151, 62.168762, -26.300814, 62.190102);
	patternContext.bezierCurveTo(-26.248474, 62.211432, -26.310014, 62.227582, -26.437567, 62.225992);
	patternContext.bezierCurveTo(-26.565119, 62.224392, -26.607941, 62.206952, -26.532727, 62.187212);
	patternContext.moveTo(-25.373164, 62.187202);
	patternContext.bezierCurveTo(-25.297954, 62.167462, -25.193589, 62.168762, -25.141252, 62.190102);
	patternContext.bezierCurveTo(-25.088912, 62.211432, -25.150452, 62.227582, -25.278005, 62.225992);
	patternContext.bezierCurveTo(-25.405557, 62.224392, -25.448379, 62.206952, -25.373165, 62.187212);
	patternContext.moveTo(-78.743665, 61.482045);
	patternContext.bezierCurveTo(-78.839825, 61.358558, -78.837085, 61.355804, -78.714475, 61.452645);
	patternContext.bezierCurveTo(-78.585706, 61.554356, -78.544755, 61.618291, -78.608380, 61.618291);
	patternContext.bezierCurveTo(-78.624430, 61.618291, -78.685310, 61.556981, -78.743662, 61.482041);
	patternContext.moveTo(-26.650154, 60.788155);
	patternContext.bezierCurveTo(-26.597004, 60.766555, -26.510040, 60.766555, -26.456893, 60.788155);
	patternContext.bezierCurveTo(-26.403743, 60.809755, -26.447193, 60.827425, -26.553523, 60.827425);
	patternContext.bezierCurveTo(-26.659817, 60.827425, -26.703300, 60.809755, -26.650153, 60.788155);
	patternContext.moveTo(-25.335983, 60.788155);
	patternContext.bezierCurveTo(-25.282833, 60.766555, -25.195870, 60.766555, -25.142723, 60.788155);
	patternContext.bezierCurveTo(-25.089573, 60.809755, -25.133023, 60.827425, -25.239353, 60.827425);
	patternContext.bezierCurveTo(-25.345646, 60.827425, -25.389130, 60.809755, -25.335983, 60.788155);
	patternContext.moveTo(-37.467899, 58.450803);
	patternContext.bezierCurveTo(-37.412099, 58.428313, -37.345420, 58.431073, -37.319732, 58.456903);
	patternContext.bezierCurveTo(-37.294042, 58.482773, -37.339702, 58.501173, -37.421194, 58.497793);
	patternContext.bezierCurveTo(-37.511244, 58.494093, -37.529567, 58.475613, -37.467904, 58.450753);
	patternContext.moveTo(-26.727458, 58.452403);
	patternContext.bezierCurveTo(-26.674308, 58.430803, -26.587344, 58.430803, -26.534197, 58.452403);
	patternContext.bezierCurveTo(-26.481047, 58.474003, -26.524497, 58.491673, -26.630827, 58.491673);
	patternContext.bezierCurveTo(-26.737121, 58.491673, -26.780604, 58.474003, -26.727457, 58.452403);
	patternContext.moveTo(-25.176544, 58.450803);
	patternContext.bezierCurveTo(-25.120744, 58.428313, -25.054065, 58.431073, -25.028377, 58.456903);
	patternContext.bezierCurveTo(-25.002687, 58.482773, -25.048347, 58.501173, -25.129839, 58.497793);
	patternContext.bezierCurveTo(-25.219889, 58.494093, -25.238212, 58.475613, -25.176539, 58.450753);
	patternContext.moveTo(-37.545203, 57.049365);
	patternContext.bezierCurveTo(-37.489403, 57.026875, -37.422724, 57.029635, -37.397036, 57.055465);
	patternContext.bezierCurveTo(-37.371346, 57.081335, -37.417006, 57.099735, -37.498498, 57.096355);
	patternContext.bezierCurveTo(-37.588548, 57.092655, -37.606871, 57.074175, -37.545208, 57.049315);
	patternContext.moveTo(-39.013981, 54.713635);
	patternContext.bezierCurveTo(-38.958181, 54.691145, -38.891502, 54.693905, -38.865815, 54.719735);
	patternContext.bezierCurveTo(-38.840125, 54.745605, -38.885785, 54.764005, -38.967276, 54.760625);
	patternContext.bezierCurveTo(-39.057336, 54.756925, -39.075649, 54.738435, -39.013986, 54.713585);
	patternContext.moveTo(-57.759384, 53.618445);
	patternContext.bezierCurveTo(-56.236270, 53.606635, -53.766403, 53.606645, -52.270792, 53.618458);
	patternContext.bezierCurveTo(-50.775181, 53.630268, -52.021365, 53.639938, -55.040091, 53.639928);
	patternContext.bezierCurveTo(-58.058817, 53.639920, -59.282499, 53.630228, -57.759384, 53.618448);
	patternContext.moveTo(-76.656454, 48.090524);
	patternContext.bezierCurveTo(-76.752614, 47.967038, -76.749874, 47.964284, -76.627264, 48.061124);
	patternContext.bezierCurveTo(-76.552854, 48.119894, -76.491981, 48.181207, -76.491981, 48.197374);
	patternContext.bezierCurveTo(-76.491981, 48.261454, -76.555461, 48.220214, -76.656451, 48.090519);
	patternContext.fill();
	
// #patternContexth958
	patternContext.beginPath();
	patternContext.fillStyle = 'rgb(180, 23, 50)';
	patternContext.lineWidth = 0.020526;
	patternContext.moveTo(59.962682, 71.807912);
	patternContext.bezierCurveTo(59.606173, 71.220380, 57.093446, 67.052137, 54.378844, 62.545151);
	patternContext.bezierCurveTo(49.693463, 54.766127, 49.432090, 54.350630, 49.223988, 54.350630);
	patternContext.lineTo(49.004771, 54.350630);
	patternContext.lineTo(48.985001, 60.828928);
	patternContext.lineTo(48.965231, 67.307226);
	patternContext.lineTo(48.424102, 67.477301);
	patternContext.bezierCurveTo(47.966027, 67.621273, 46.086314, 68.075911, 45.235724, 68.248461);
	patternContext.lineTo(44.984902, 68.299341);
	patternContext.lineTo(44.965162, 61.344450);
	patternContext.lineTo(44.945422, 54.389558);
	patternContext.lineTo(43.032146, 54.368738);
	patternContext.lineTo(41.118869, 54.347918);
	patternContext.lineTo(41.118869, 61.512184);
	patternContext.lineTo(41.118869, 68.676451);
	patternContext.lineTo(39.939981, 68.674251);
	patternContext.lineTo(38.761093, 68.672051);
	patternContext.lineTo(35.862188, 65.002102);
	patternContext.lineTo(32.963284, 61.332153);
	patternContext.lineTo(32.943104, 64.582106);
	patternContext.lineTo(32.922924, 67.832059);
	patternContext.lineTo(32.672539, 67.779929);
	patternContext.bezierCurveTo(32.534826, 67.751259, 31.787293, 67.518704, 31.011353, 67.263136);
	patternContext.lineTo(29.600553, 66.798468);
	patternContext.lineTo(29.600553, 58.978497);
	patternContext.bezierCurveTo(29.600553, 54.677513, 29.614603, 51.158526, 29.631783, 51.158526);
	patternContext.bezierCurveTo(29.648963, 51.158526, 31.362213, 53.298174, 33.439011, 55.913302);
	patternContext.lineTo(37.215008, 60.668078);
	patternContext.lineTo(37.235008, 56.483755);
	patternContext.lineTo(37.255008, 52.299432);
	patternContext.lineTo(36.717808, 51.594575);
	patternContext.bezierCurveTo(36.422348, 51.206905, 36.187232, 50.888888, 36.195327, 50.887872);
	patternContext.bezierCurveTo(36.203427, 50.886872, 38.720956, 50.895472, 41.789845, 50.906992);
	patternContext.lineTo(47.369645, 50.927962);
	patternContext.lineTo(48.320587, 52.483614);
	patternContext.lineTo(49.271530, 54.039267);
	patternContext.lineTo(51.040466, 54.039267);
	patternContext.lineTo(52.809402, 54.039267);
	patternContext.lineTo(53.361046, 53.693343);
	patternContext.bezierCurveTo(54.187824, 53.174887, 55.604972, 52.514873, 56.363494, 52.295002);
	patternContext.bezierCurveTo(57.386651, 51.998420, 58.509030, 51.889644, 59.421852, 51.998600);
	patternContext.bezierCurveTo(60.910065, 52.176234, 61.671324, 52.446782, 64.387397, 53.763327);
	patternContext.bezierCurveTo(65.386553, 54.247642, 66.527649, 54.771446, 66.923165, 54.927337);
	patternContext.bezierCurveTo(69.585837, 55.976817, 72.096388, 56.006495, 74.992740, 55.022727);
	patternContext.lineTo(75.973721, 54.689531);
	patternContext.lineTo(75.873901, 54.928865);
	patternContext.bezierCurveTo(75.819001, 55.060499, 75.539028, 55.682166, 75.251742, 56.310347);
	patternContext.lineTo(74.729407, 57.452494);
	patternContext.lineTo(74.100022, 57.623861);
	patternContext.bezierCurveTo(72.978207, 57.929304, 72.267840, 58.024937, 71.074208, 58.031210);
	patternContext.bezierCurveTo(68.858534, 58.042850, 67.687865, 57.694512, 64.078185, 55.949482);
	patternContext.bezierCurveTo(61.432772, 54.670610, 60.542201, 54.375861, 59.086017, 54.297247);
	patternContext.bezierCurveTo(57.637545, 54.219047, 56.252300, 54.524738, 54.763039, 55.251220);
	patternContext.bezierCurveTo(53.749295, 55.745738, 53.802212, 55.659312, 54.151292, 56.250352);
	patternContext.bezierCurveTo(54.317683, 56.532074, 54.488609, 56.747937, 54.531126, 56.730047);
	patternContext.bezierCurveTo(56.582470, 55.866890, 57.134778, 55.729544, 58.589593, 55.720806);
	patternContext.bezierCurveTo(60.368683, 55.710126, 61.212220, 55.960349, 64.078185, 57.348951);
	patternContext.bezierCurveTo(66.767278, 58.651856, 67.720539, 59.019760, 69.151345, 59.306900);
	patternContext.bezierCurveTo(70.126023, 59.502502, 72.046060, 59.490185, 73.056673, 59.281850);
	patternContext.lineTo(73.802273, 59.128144);
	patternContext.lineTo(73.300944, 59.945008);
	patternContext.bezierCurveTo(70.225858, 64.955545, 66.355236, 69.006831, 61.552165, 72.242171);
	patternContext.lineTo(60.610879, 72.876219);
	patternContext.moveTo(22.875090, 63.060450);
	patternContext.bezierCurveTo(22.301107, 62.626635, 21.622764, 62.094397, 21.367660, 61.877699);
	patternContext.bezierCurveTo(21.112556, 61.661000, 20.873522, 61.458133, 20.836473, 61.426882);
	patternContext.bezierCurveTo(20.799423, 61.395632, 23.486993, 55.650551, 26.808850, 48.660037);
	patternContext.lineTo(32.848588, 35.950012);
	patternContext.lineTo(32.040553, 34.697928);
	patternContext.lineTo(31.232518, 33.445845);
	patternContext.lineTo(33.408077, 33.425145);
	patternContext.bezierCurveTo(35.085052, 33.409185, 35.604589, 33.427045, 35.675063, 33.503005);
	patternContext.bezierCurveTo(35.725353, 33.557215, 37.792333, 37.070125, 40.268363, 41.309476);
	patternContext.bezierCurveTo(42.744393, 45.548826, 44.838578, 49.131252, 44.922108, 49.270423);
	patternContext.lineTo(45.073982, 49.523460);
	patternContext.lineTo(41.547532, 49.523460);
	patternContext.lineTo(38.021081, 49.523460);
	patternContext.lineTo(38.912887, 48.207334);
	patternContext.bezierCurveTo(39.403380, 47.483465, 39.804693, 46.870336, 39.804693, 46.844825);
	patternContext.bezierCurveTo(39.804693, 46.819315, 37.951212, 46.798445, 35.685846, 46.798445);
	patternContext.lineTo(31.567000, 46.798445);
	patternContext.lineTo(27.782573, 54.525819);
	patternContext.lineTo(23.998147, 62.253193);
	patternContext.lineTo(23.958417, 63.051203);
	patternContext.lineTo(23.918687, 63.849213);
	patternContext.moveTo(37.949394, 43.641356);
	patternContext.bezierCurveTo(37.949394, 43.586206, 35.399527, 39.152806, 35.312926, 39.057388);
	patternContext.bezierCurveTo(35.254656, 38.993188, 34.561851, 40.367609, 33.382980, 42.886088);
	patternContext.lineTo(33.009426, 43.684129);
	patternContext.lineTo(35.479410, 43.684129);
	patternContext.bezierCurveTo(36.837901, 43.684129, 37.949394, 43.664879, 37.949394, 43.641359);
	patternContext.moveTo(19.443145, 60.073169);
	patternContext.bezierCurveTo(18.149603, 58.755040, 16.827587, 57.120207, 15.769167, 55.529849);
	patternContext.bezierCurveTo(15.502583, 55.129288, 15.313894, 54.774716, 15.349857, 54.741913);
	patternContext.bezierCurveTo(15.385817, 54.709113, 15.667448, 54.606641, 15.975698, 54.514209);
	patternContext.lineTo(16.536153, 54.346148);
	patternContext.lineTo(16.536153, 43.211992);
	patternContext.lineTo(16.536153, 32.077835);
	patternContext.lineTo(15.722402, 30.990578);
	patternContext.lineTo(14.908650, 29.903320);
	patternContext.lineTo(18.312090, 29.903320);
	patternContext.bezierCurveTo(20.183981, 29.903320, 21.715529, 29.914850, 21.715529, 29.928940);
	patternContext.bezierCurveTo(21.715529, 29.943030, 21.367660, 30.422005, 20.942487, 30.993329);
	patternContext.lineTo(20.169446, 32.032099);
	patternContext.lineTo(20.170946, 35.580778);
	patternContext.lineTo(20.172446, 39.129456);
	patternContext.lineTo(20.640423, 39.732853);
	patternContext.bezierCurveTo(20.897811, 40.064721, 21.134189, 40.336250, 21.165709, 40.336250);
	patternContext.bezierCurveTo(21.211179, 40.336250, 26.235985, 31.474025, 26.343696, 31.203853);
	patternContext.bezierCurveTo(26.359396, 31.164473, 26.099312, 30.855738, 25.765729, 30.517784);
	patternContext.lineTo(25.159220, 29.903321);
	patternContext.lineTo(28.041547, 29.903321);
	patternContext.bezierCurveTo(29.626827, 29.903321, 30.907809, 29.929601, 30.888173, 29.961711);
	patternContext.bezierCurveTo(30.868533, 29.993831, 29.215036, 33.062728, 27.213725, 36.781491);
	patternContext.lineTo(23.574980, 43.542877);
	patternContext.lineTo(25.004472, 45.329728);
	patternContext.bezierCurveTo(25.790693, 46.312496, 26.471328, 47.176835, 26.516995, 47.250483);
	patternContext.bezierCurveTo(26.583735, 47.358110, 26.429185, 47.746362, 25.729460, 49.228958);
	patternContext.bezierCurveTo(25.250650, 50.243471, 24.830052, 51.055575, 24.794799, 51.033630);
	patternContext.bezierCurveTo(24.759549, 51.011690, 23.713124, 49.695815, 22.469416, 48.109470);
	patternContext.lineTo(20.208129, 45.225207);
	patternContext.lineTo(20.169479, 52.999546);
	patternContext.lineTo(20.130829, 60.773886);
	patternContext.fill();
	
// #patternContexth956
	patternContext.beginPath();
	patternContext.fillStyle = 'rgb(57, 57, 57)';
	patternContext.lineWidth = 0.020526;
	patternContext.moveTo(-60.895878, 81.498298);
	patternContext.bezierCurveTo(-60.842728, 81.476698, -60.755765, 81.476698, -60.702618, 81.498298);
	patternContext.bezierCurveTo(-60.649468, 81.519898, -60.692918, 81.537568, -60.799248, 81.537568);
	patternContext.bezierCurveTo(-60.905541, 81.537568, -60.949025, 81.519898, -60.895878, 81.498298);
	patternContext.moveTo(-53.687269, 81.396589);
	patternContext.bezierCurveTo(-53.687269, 81.355109, -53.635089, 81.341339, -53.571313, 81.365989);
	patternContext.bezierCurveTo(-53.507533, 81.390639, -53.455357, 81.424579, -53.455357, 81.441409);
	patternContext.bezierCurveTo(-53.455357, 81.458239, -53.507537, 81.472009, -53.571313, 81.472009);
	patternContext.bezierCurveTo(-53.635093, 81.472009, -53.687269, 81.438069, -53.687269, 81.396599);
	patternContext.moveTo(-61.850198, 81.063251);
	patternContext.lineTo(-61.997462, 80.888071);
	patternContext.lineTo(-61.823528, 81.036389);
	patternContext.bezierCurveTo(-61.660073, 81.175771, -61.614402, 81.238431, -61.676264, 81.238431);
	patternContext.bezierCurveTo(-61.690934, 81.238431, -61.769204, 81.159601, -61.850198, 81.063251);
	patternContext.moveTo(-57.469068, 80.881583);
	patternContext.bezierCurveTo(-57.465368, 80.790883, -57.447038, 80.772434, -57.422368, 80.834543);
	patternContext.bezierCurveTo(-57.400038, 80.890743, -57.402788, 80.957899, -57.428468, 80.983770);
	patternContext.bezierCurveTo(-57.454158, 81.009640, -57.472428, 80.963660, -57.469068, 80.881583);
	patternContext.moveTo(-50.279785, 80.180864);
	patternContext.bezierCurveTo(-50.276085, 80.090164, -50.257755, 80.071715, -50.233085, 80.133824);
	patternContext.bezierCurveTo(-50.210755, 80.190024, -50.213505, 80.257180, -50.239185, 80.283051);
	patternContext.bezierCurveTo(-50.264875, 80.308921, -50.283145, 80.262941, -50.279785, 80.180864);
	patternContext.moveTo(-67.390713, 79.983046);
	patternContext.bezierCurveTo(-67.338273, 79.929836, -67.275898, 79.905916, -67.252097, 79.929886);
	patternContext.bezierCurveTo(-67.228297, 79.953856, -67.271197, 79.997396, -67.347437, 80.026626);
	patternContext.bezierCurveTo(-67.457611, 80.068876, -67.466490, 80.059936, -67.390717, 79.983046);
	patternContext.moveTo(-57.446937, 79.330918);
	patternContext.bezierCurveTo(-57.446705, 78.902700, -57.433757, 78.737454, -57.418087, 78.963703);
	patternContext.bezierCurveTo(-57.402417, 79.189953, -57.402587, 79.540313, -57.418473, 79.742280);
	patternContext.bezierCurveTo(-57.434343, 79.944248, -57.447153, 79.759140, -57.446953, 79.330918);
	patternContext.moveTo(-56.597815, 78.746985);
	patternContext.bezierCurveTo(-56.597815, 78.383000, -56.584495, 78.234098, -56.568225, 78.416090);
	patternContext.bezierCurveTo(-56.551945, 78.598082, -56.551945, 78.895888, -56.568225, 79.077880);
	patternContext.bezierCurveTo(-56.584505, 79.259872, -56.597815, 79.110970, -56.597815, 78.746985);
	patternContext.moveTo(-44.884461, 79.155738);
	patternContext.bezierCurveTo(-44.980621, 79.032251, -44.977881, 79.029497, -44.855271, 79.126338);
	patternContext.bezierCurveTo(-44.780861, 79.185108, -44.719988, 79.246422, -44.719988, 79.262589);
	patternContext.bezierCurveTo(-44.719988, 79.326669, -44.783468, 79.285429, -44.884458, 79.155734);
	patternContext.moveTo(-62.636613, 78.279839);
	patternContext.bezierCurveTo(-62.636613, 78.129963, -62.620703, 78.068650, -62.601263, 78.143588);
	patternContext.bezierCurveTo(-62.581823, 78.218528, -62.581823, 78.341152, -62.601263, 78.416090);
	patternContext.bezierCurveTo(-62.620703, 78.491030, -62.636613, 78.429720, -62.636613, 78.279839);
	patternContext.moveTo(-71.868232, 78.304509);
	patternContext.bezierCurveTo(-71.812432, 78.282019, -71.745753, 78.284779, -71.720065, 78.310609);
	patternContext.bezierCurveTo(-71.694375, 78.336479, -71.740035, 78.354879, -71.821527, 78.351499);
	patternContext.bezierCurveTo(-71.911577, 78.347799, -71.929900, 78.329319, -71.868237, 78.304459);
	patternContext.moveTo(-42.874553, 78.221439);
	patternContext.bezierCurveTo(-42.970713, 78.097952, -42.967973, 78.095198, -42.845363, 78.192039);
	patternContext.bezierCurveTo(-42.770963, 78.250809, -42.710081, 78.312123, -42.710081, 78.328290);
	patternContext.bezierCurveTo(-42.710081, 78.392370, -42.773561, 78.351130, -42.874550, 78.221435);
	patternContext.moveTo(-61.643490, 77.922992);
	patternContext.bezierCurveTo(-61.639790, 77.832292, -61.621460, 77.813843, -61.596790, 77.875952);
	patternContext.bezierCurveTo(-61.574460, 77.932152, -61.577210, 77.999308, -61.602890, 78.025180);
	patternContext.bezierCurveTo(-61.628580, 78.051050, -61.646850, 78.005070, -61.643490, 77.922992);
	patternContext.moveTo(-51.638710, 77.501262);
	patternContext.bezierCurveTo(-51.561750, 77.415622, -51.481398, 77.345547, -51.460139, 77.345547);
	patternContext.bezierCurveTo(-51.438879, 77.345547, -51.484449, 77.415617, -51.561406, 77.501262);
	patternContext.bezierCurveTo(-51.638366, 77.586902, -51.718718, 77.656978, -51.739977, 77.656978);
	patternContext.bezierCurveTo(-51.761237, 77.656978, -51.715667, 77.586908, -51.638710, 77.501262);
	patternContext.moveTo(-59.556279, 77.455842);
	patternContext.bezierCurveTo(-59.552579, 77.365142, -59.534249, 77.346694, -59.509579, 77.408802);
	patternContext.bezierCurveTo(-59.487249, 77.465002, -59.489999, 77.532158, -59.515679, 77.558030);
	patternContext.bezierCurveTo(-59.541369, 77.583900, -59.559639, 77.537920, -59.556279, 77.455842);
	patternContext.moveTo(-58.539494, 77.267686);
	patternContext.bezierCurveTo(-58.539494, 77.117810, -58.523584, 77.056497, -58.504144, 77.131435);
	patternContext.bezierCurveTo(-58.484704, 77.206375, -58.484704, 77.328999, -58.504144, 77.403937);
	patternContext.bezierCurveTo(-58.523584, 77.478877, -58.539494, 77.417557, -58.539494, 77.267686);
	patternContext.moveTo(-74.166758, 76.988696);
	patternContext.bezierCurveTo(-74.163058, 76.897996, -74.144728, 76.879548, -74.120058, 76.941656);
	patternContext.bezierCurveTo(-74.097728, 76.997856, -74.100478, 77.065012, -74.126158, 77.090884);
	patternContext.bezierCurveTo(-74.151848, 77.116754, -74.170118, 77.070774, -74.166758, 76.988696);
	patternContext.moveTo(-74.559381, 76.849002);
	patternContext.bezierCurveTo(-74.559381, 76.832832, -74.498501, 76.771522, -74.424099, 76.712751);
	patternContext.bezierCurveTo(-74.301490, 76.615901, -74.298756, 76.618661, -74.394909, 76.742151);
	patternContext.bezierCurveTo(-74.495897, 76.871842, -74.559378, 76.913086, -74.559378, 76.849006);
	patternContext.moveTo(-58.542358, 76.528038);
	patternContext.bezierCurveTo(-58.540758, 76.399573, -58.523458, 76.356445, -58.503858, 76.432198);
	patternContext.bezierCurveTo(-58.484258, 76.507948, -58.485548, 76.613059, -58.506758, 76.665771);
	patternContext.bezierCurveTo(-58.527938, 76.718481, -58.543968, 76.656471, -58.542398, 76.528038);
	patternContext.moveTo(-52.044388, 76.372323);
	patternContext.bezierCurveTo(-52.043530, 76.201036, -52.027698, 76.140132, -52.009208, 76.236980);
	patternContext.bezierCurveTo(-51.990718, 76.333830, -51.991418, 76.473972, -52.010808, 76.548410);
	patternContext.bezierCurveTo(-52.030158, 76.622850, -52.045288, 76.543610, -52.044428, 76.372323);
	patternContext.moveTo(-59.461124, 76.060892);
	patternContext.bezierCurveTo(-59.460660, 75.803962, -59.446254, 75.708241, -59.429054, 75.848178);
	patternContext.bezierCurveTo(-59.411844, 75.988116, -59.412204, 76.198331, -59.429842, 76.315324);
	patternContext.bezierCurveTo(-59.447482, 76.432317, -59.461562, 76.317824, -59.461122, 76.060892);
	patternContext.moveTo(-45.493033, 75.758994);
	patternContext.bezierCurveTo(-45.493033, 75.742824, -45.432153, 75.681514, -45.357750, 75.622743);
	patternContext.bezierCurveTo(-45.235141, 75.525903, -45.232407, 75.528653, -45.328560, 75.652143);
	patternContext.bezierCurveTo(-45.429548, 75.781835, -45.493030, 75.823078, -45.493030, 75.758998);
	patternContext.moveTo(-50.178083, 74.192308);
	patternContext.bezierCurveTo(-50.177928, 73.592804, -50.165823, 73.357844, -50.151113, 73.670175);
	patternContext.bezierCurveTo(-50.136403, 73.982506, -50.136503, 74.473009, -50.151345, 74.760182);
	patternContext.bezierCurveTo(-50.166165, 75.047356, -50.178195, 74.791812, -50.178075, 74.192308);
	patternContext.moveTo(-76.221420, 75.009814);
	patternContext.bezierCurveTo(-76.144470, 74.924174, -76.064108, 74.854098, -76.042849, 74.854098);
	patternContext.bezierCurveTo(-76.021589, 74.854098, -76.067159, 74.924168, -76.144116, 75.009814);
	patternContext.bezierCurveTo(-76.221066, 75.095454, -76.301428, 75.165529, -76.322687, 75.165529);
	patternContext.bezierCurveTo(-76.343947, 75.165529, -76.298377, 75.095459, -76.221420, 75.009814);
	patternContext.moveTo(-44.395704, 74.815169);
	patternContext.bezierCurveTo(-44.394104, 74.686704, -44.376804, 74.643576, -44.357204, 74.719329);
	patternContext.bezierCurveTo(-44.337604, 74.795079, -44.338894, 74.900190, -44.360104, 74.952902);
	patternContext.bezierCurveTo(-44.381284, 75.005612, -44.397314, 74.943602, -44.395744, 74.815169);
	patternContext.moveTo(-62.880356, 74.730829);
	patternContext.bezierCurveTo(-62.876656, 74.640129, -62.858326, 74.621680, -62.833656, 74.683789);
	patternContext.bezierCurveTo(-62.811326, 74.739989, -62.814076, 74.807145, -62.839756, 74.833016);
	patternContext.bezierCurveTo(-62.865446, 74.858886, -62.883716, 74.812906, -62.880356, 74.730829);
	patternContext.moveTo(-55.433957, 74.367493);
	patternContext.lineTo(-55.581220, 74.192313);
	patternContext.lineTo(-55.407286, 74.340631);
	patternContext.bezierCurveTo(-55.243831, 74.480013, -55.198160, 74.542673, -55.260022, 74.542673);
	patternContext.bezierCurveTo(-55.274692, 74.542673, -55.352962, 74.463843, -55.433957, 74.367493);
	patternContext.moveTo(-54.474805, 74.178056);
	patternContext.bezierCurveTo(-54.419005, 74.155566, -54.352326, 74.158326, -54.326638, 74.184156);
	patternContext.bezierCurveTo(-54.300948, 74.210026, -54.346608, 74.228426, -54.428100, 74.225046);
	patternContext.bezierCurveTo(-54.518160, 74.221346, -54.536473, 74.202866, -54.474810, 74.178006);
	patternContext.moveTo(-51.841831, 74.094986);
	patternContext.bezierCurveTo(-51.937991, 73.971499, -51.935251, 73.968745, -51.812641, 74.065586);
	patternContext.bezierCurveTo(-51.738241, 74.124356, -51.677359, 74.185670, -51.677359, 74.201837);
	patternContext.bezierCurveTo(-51.677359, 74.265917, -51.740839, 74.224677, -51.841828, 74.094982);
	patternContext.moveTo(-65.425290, 73.452663);
	patternContext.bezierCurveTo(-65.425290, 73.345609, -65.407740, 73.301814, -65.386300, 73.355343);
	patternContext.bezierCurveTo(-65.364860, 73.408873, -65.364860, 73.496460, -65.386300, 73.549987);
	patternContext.bezierCurveTo(-65.407740, 73.603517, -65.425290, 73.559687, -65.425290, 73.452667);
	patternContext.moveTo(-45.307117, 72.576764);
	patternContext.lineTo(-45.454381, 72.401584);
	patternContext.lineTo(-45.280446, 72.549903);
	patternContext.bezierCurveTo(-45.116991, 72.689285, -45.071320, 72.751944, -45.133183, 72.751944);
	patternContext.bezierCurveTo(-45.147853, 72.751944, -45.226123, 72.673114, -45.307117, 72.576764);
	patternContext.moveTo(-69.109441, 72.596224);
	patternContext.bezierCurveTo(-69.083161, 72.553404, -69.046321, 72.518364, -69.027571, 72.518364);
	patternContext.bezierCurveTo(-69.008821, 72.518364, -68.993481, 72.553404, -68.993481, 72.596224);
	patternContext.bezierCurveTo(-68.993481, 72.639044, -69.030321, 72.674084, -69.075351, 72.674084);
	patternContext.bezierCurveTo(-69.120381, 72.674084, -69.135721, 72.639044, -69.109441, 72.596224);
	patternContext.moveTo(-71.811784, 71.511596);
	patternContext.bezierCurveTo(-71.836244, 71.471736, -71.826704, 71.420726, -71.790574, 71.398235);
	patternContext.bezierCurveTo(-71.754454, 71.375745, -71.724894, 71.408365, -71.724894, 71.470715);
	patternContext.bezierCurveTo(-71.724894, 71.601997, -71.749274, 71.613467, -71.811784, 71.511595);
	patternContext.moveTo(-83.746366, 70.182636);
	patternContext.bezierCurveTo(-83.746366, 70.075581, -83.728816, 70.031786, -83.707376, 70.085316);
	patternContext.bezierCurveTo(-83.685936, 70.138846, -83.685936, 70.226433, -83.707376, 70.279960);
	patternContext.bezierCurveTo(-83.728816, 70.333490, -83.746366, 70.289660, -83.746366, 70.182640);
	patternContext.moveTo(-84.454309, 69.676561);
	patternContext.bezierCurveTo(-84.354449, 69.569507, -84.255357, 69.481917, -84.234098, 69.481917);
	patternContext.bezierCurveTo(-84.212838, 69.481917, -84.277148, 69.569507, -84.377005, 69.676561);
	patternContext.bezierCurveTo(-84.476865, 69.783615, -84.575957, 69.871205, -84.597215, 69.871205);
	patternContext.bezierCurveTo(-84.618475, 69.871205, -84.554165, 69.783615, -84.454309, 69.676561);
	patternContext.moveTo(-85.110846, 69.482808);
	patternContext.bezierCurveTo(-85.137926, 69.438678, -85.106946, 69.425618, -85.038106, 69.452208);
	patternContext.bezierCurveTo(-84.904183, 69.503968, -84.879679, 69.559773, -84.990876, 69.559773);
	patternContext.bezierCurveTo(-85.030886, 69.559773, -85.084876, 69.525133, -85.110847, 69.482803);
	patternContext.moveTo(-83.068686, 68.216173);
	patternContext.bezierCurveTo(-82.849290, 67.966173, -82.856690, 67.969551, -82.856690, 68.119403);
	patternContext.bezierCurveTo(-82.856690, 68.183633, -82.874160, 68.218593, -82.895510, 68.197093);
	patternContext.bezierCurveTo(-82.916860, 68.175593, -83.006728, 68.219133, -83.095212, 68.293853);
	patternContext.bezierCurveTo(-83.212395, 68.392813, -83.205190, 68.371713, -83.068682, 68.216163);
	patternContext.moveTo(-78.540544, 66.912613);
	patternContext.bezierCurveTo(-78.463584, 66.826973, -78.383231, 66.756898, -78.361973, 66.756898);
	patternContext.bezierCurveTo(-78.340713, 66.756898, -78.386283, 66.826968, -78.463239, 66.912613);
	patternContext.bezierCurveTo(-78.540199, 66.998253, -78.620552, 67.068329, -78.641810, 67.068329);
	patternContext.bezierCurveTo(-78.663070, 67.068329, -78.617500, 66.998259, -78.540544, 66.912613);
	patternContext.moveTo(-85.159907, 66.153501);
	patternContext.bezierCurveTo(-85.256067, 66.030014, -85.253327, 66.027260, -85.130717, 66.124101);
	patternContext.bezierCurveTo(-85.056317, 66.182871, -84.995435, 66.244185, -84.995435, 66.260352);
	patternContext.bezierCurveTo(-84.995435, 66.324432, -85.058915, 66.283192, -85.159904, 66.153497);
	patternContext.moveTo(-88.164906, 66.051584);
	patternContext.bezierCurveTo(-88.164906, 66.006234, -88.130116, 65.990784, -88.087606, 66.017254);
	patternContext.bezierCurveTo(-88.045086, 66.043724, -88.010306, 66.080824, -88.010306, 66.099704);
	patternContext.bezierCurveTo(-88.010306, 66.118584, -88.045096, 66.134034, -88.087606, 66.134034);
	patternContext.bezierCurveTo(-88.130126, 66.134034, -88.164906, 66.096934, -88.164906, 66.051584);
	patternContext.moveTo(-79.932018, 65.744748);
	patternContext.bezierCurveTo(-79.855058, 65.659108, -79.774705, 65.589033, -79.753447, 65.589033);
	patternContext.bezierCurveTo(-79.732187, 65.589033, -79.777757, 65.659103, -79.854714, 65.744748);
	patternContext.bezierCurveTo(-79.931664, 65.830388, -80.012026, 65.900464, -80.033285, 65.900464);
	patternContext.bezierCurveTo(-80.054545, 65.900464, -80.008975, 65.830394, -79.932018, 65.744748);
	patternContext.moveTo(-89.864493, 63.143189);
	patternContext.bezierCurveTo(-89.814433, 63.092769, -89.762157, 63.092769, -89.712093, 63.143189);
	patternContext.bezierCurveTo(-89.662033, 63.193609, -89.688163, 63.219939, -89.788293, 63.219939);
	patternContext.bezierCurveTo(-89.888420, 63.219939, -89.914556, 63.193619, -89.864493, 63.143189);
	patternContext.moveTo(-84.700716, 58.295084);
	patternContext.bezierCurveTo(-84.644916, 58.272594, -84.578237, 58.275364, -84.552549, 58.301184);
	patternContext.bezierCurveTo(-84.526859, 58.327054, -84.572519, 58.345454, -84.654011, 58.342074);
	patternContext.bezierCurveTo(-84.744071, 58.338374, -84.762383, 58.319884, -84.700721, 58.295034);
	patternContext.moveTo(-92.890318, 57.122011);
	patternContext.bezierCurveTo(-92.986478, 56.998524, -92.983738, 56.995770, -92.861128, 57.092611);
	patternContext.bezierCurveTo(-92.732358, 57.194322, -92.691408, 57.258258, -92.755032, 57.258258);
	patternContext.bezierCurveTo(-92.771082, 57.258258, -92.831962, 57.196948, -92.890314, 57.122007);
	patternContext.moveTo(-26.722626, 55.258634);
	patternContext.bezierCurveTo(-26.666826, 55.236144, -26.600147, 55.238904, -26.574460, 55.264734);
	patternContext.bezierCurveTo(-26.548770, 55.290604, -26.594430, 55.309004, -26.675921, 55.305624);
	patternContext.bezierCurveTo(-26.765981, 55.301924, -26.784294, 55.283434, -26.722631, 55.258584);
	patternContext.moveTo(-25.099240, 55.258634);
	patternContext.bezierCurveTo(-25.043440, 55.236144, -24.976761, 55.238904, -24.951073, 55.264734);
	patternContext.bezierCurveTo(-24.925383, 55.290604, -24.971043, 55.309004, -25.052535, 55.305624);
	patternContext.bezierCurveTo(-25.142585, 55.301924, -25.160907, 55.283434, -25.099245, 55.258584);
	patternContext.moveTo(-87.134185, 55.120601);
	patternContext.bezierCurveTo(-87.134185, 55.058251, -87.104625, 55.025641, -87.068505, 55.048121);
	patternContext.bezierCurveTo(-87.032385, 55.070611, -87.022835, 55.121621, -87.047295, 55.161482);
	patternContext.bezierCurveTo(-87.109805, 55.263350, -87.134185, 55.251882, -87.134185, 55.120602);
	patternContext.moveTo(-87.560968, 52.922904);
	patternContext.bezierCurveTo(-87.505168, 52.900414, -87.438490, 52.903184, -87.412802, 52.929004);
	patternContext.bezierCurveTo(-87.387112, 52.954874, -87.432772, 52.973274, -87.514263, 52.969894);
	patternContext.bezierCurveTo(-87.604323, 52.966194, -87.622636, 52.947704, -87.560973, 52.922854);
	patternContext.moveTo(-39.013981, 51.521466);
	patternContext.bezierCurveTo(-38.958181, 51.498976, -38.891502, 51.501736, -38.865815, 51.527566);
	patternContext.bezierCurveTo(-38.840125, 51.553436, -38.885785, 51.571836, -38.967276, 51.568456);
	patternContext.bezierCurveTo(-39.057336, 51.564756, -39.075649, 51.546276, -39.013986, 51.521416);
	patternContext.moveTo(-37.622507, 51.521466);
	patternContext.bezierCurveTo(-37.566707, 51.498976, -37.500028, 51.501736, -37.474340, 51.527566);
	patternContext.bezierCurveTo(-37.448650, 51.553436, -37.494310, 51.571836, -37.575802, 51.568456);
	patternContext.bezierCurveTo(-37.665862, 51.564756, -37.684175, 51.546276, -37.622502, 51.521416);
	patternContext.moveTo(-92.745175, 49.888077);
	patternContext.bezierCurveTo(-92.692025, 49.866477, -92.605062, 49.866477, -92.551915, 49.888077);
	patternContext.bezierCurveTo(-92.498765, 49.909677, -92.542215, 49.927347, -92.648545, 49.927347);
	patternContext.bezierCurveTo(-92.754839, 49.927347, -92.798322, 49.909677, -92.745175, 49.888077);
	patternContext.moveTo(-87.701082, 49.005348);
	patternContext.bezierCurveTo(-87.770752, 48.959998, -87.780292, 48.929398, -87.724972, 48.928678);
	patternContext.bezierCurveTo(-87.674332, 48.928056, -87.611405, 48.962518, -87.585128, 49.005348);
	patternContext.bezierCurveTo(-87.525808, 49.102008, -87.552568, 49.102008, -87.701084, 49.005348);
	patternContext.moveTo(-88.628731, 48.499273);
	patternContext.bezierCurveTo(-88.528871, 48.392219, -88.429779, 48.304629, -88.408520, 48.304629);
	patternContext.bezierCurveTo(-88.387260, 48.304629, -88.451570, 48.392219, -88.551427, 48.499273);
	patternContext.bezierCurveTo(-88.651287, 48.606328, -88.750379, 48.693917, -88.771638, 48.693917);
	patternContext.bezierCurveTo(-88.792898, 48.693917, -88.728588, 48.606327, -88.628731, 48.499273);
	patternContext.moveTo(-95.579999, 48.492773);
	patternContext.bezierCurveTo(-95.576299, 48.402073, -95.557969, 48.383624, -95.533289, 48.445733);
	patternContext.bezierCurveTo(-95.510959, 48.501933, -95.513709, 48.569090, -95.539389, 48.594961);
	patternContext.bezierCurveTo(-95.565079, 48.620831, -95.583349, 48.574851, -95.579989, 48.492773);
	patternContext.moveTo(-92.323051, 48.491373);
	patternContext.bezierCurveTo(-92.377871, 48.431453, -92.388621, 48.382435, -92.346941, 48.382435);
	patternContext.bezierCurveTo(-92.266661, 48.382435, -92.150455, 48.530536, -92.196308, 48.574406);
	patternContext.bezierCurveTo(-92.211198, 48.588646, -92.268228, 48.551286, -92.323053, 48.491366);
	patternContext.moveTo(-87.849587, 47.558446);
	patternContext.bezierCurveTo(-87.845887, 47.467746, -87.827557, 47.449297, -87.802887, 47.511406);
	patternContext.bezierCurveTo(-87.780557, 47.567606, -87.783307, 47.634762, -87.808987, 47.660633);
	patternContext.bezierCurveTo(-87.834677, 47.686503, -87.852947, 47.640523, -87.849587, 47.558446);
	patternContext.moveTo(-18.121275, 46.079150);
	patternContext.bezierCurveTo(-18.117575, 45.988450, -18.099245, 45.970001, -18.074565, 46.032110);
	patternContext.bezierCurveTo(-18.052235, 46.088310, -18.054975, 46.155466, -18.080665, 46.181337);
	patternContext.bezierCurveTo(-18.106355, 46.207207, -18.124625, 46.161227, -18.121275, 46.079150);
	patternContext.moveTo(-91.580782, 45.915661);
	patternContext.bezierCurveTo(-91.524982, 45.893171, -91.458303, 45.895931, -91.432616, 45.921761);
	patternContext.bezierCurveTo(-91.406926, 45.947631, -91.452586, 45.966031, -91.534078, 45.962651);
	patternContext.bezierCurveTo(-91.624128, 45.958951, -91.642450, 45.940471, -91.580778, 45.915611);
	patternContext.moveTo(-90.266612, 45.915661);
	patternContext.bezierCurveTo(-90.210812, 45.893171, -90.144133, 45.895931, -90.118446, 45.921761);
	patternContext.bezierCurveTo(-90.092756, 45.947631, -90.138416, 45.966031, -90.219908, 45.962651);
	patternContext.bezierCurveTo(-90.309958, 45.958951, -90.328280, 45.940471, -90.266608, 45.915611);
	patternContext.moveTo(-18.043971, 45.144853);
	patternContext.bezierCurveTo(-18.040271, 45.054153, -18.021941, 45.035705, -17.997261, 45.097813);
	patternContext.bezierCurveTo(-17.974931, 45.154013, -17.977671, 45.221169, -18.003361, 45.247041);
	patternContext.bezierCurveTo(-18.029051, 45.272911, -18.047321, 45.226931, -18.043971, 45.144852);
	patternContext.moveTo(-17.953271, 43.672045);
	patternContext.bezierCurveTo(-17.952421, 43.500759, -17.936581, 43.439854, -17.918091, 43.536702);
	patternContext.bezierCurveTo(-17.899601, 43.633552, -17.900301, 43.773694, -17.919591, 43.848133);
	patternContext.bezierCurveTo(-17.938941, 43.922573, -17.954071, 43.843333, -17.953211, 43.672045);
	patternContext.moveTo(-17.960571, 41.141671);
	patternContext.bezierCurveTo(-17.960571, 41.034617, -17.943021, 40.990822, -17.921581, 41.044351);
	patternContext.bezierCurveTo(-17.900141, 41.097881, -17.900141, 41.185468, -17.921581, 41.238995);
	patternContext.bezierCurveTo(-17.943021, 41.292525, -17.960571, 41.248695, -17.960571, 41.141675);
	patternContext.moveTo(-95.400220, 37.696469);
	patternContext.lineTo(-95.547484, 37.521289);
	patternContext.lineTo(-95.373550, 37.669607);
	patternContext.bezierCurveTo(-95.210094, 37.808990, -95.164423, 37.871649, -95.226286, 37.871649);
	patternContext.bezierCurveTo(-95.240956, 37.871649, -95.319226, 37.792819, -95.400220, 37.696469);
	patternContext.moveTo(-93.518251, 37.119366);
	patternContext.bezierCurveTo(-93.465101, 37.097766, -93.378137, 37.097766, -93.324990, 37.119366);
	patternContext.bezierCurveTo(-93.271840, 37.140966, -93.315290, 37.158636, -93.421620, 37.158636);
	patternContext.bezierCurveTo(-93.527913, 37.158636, -93.571396, 37.140966, -93.518250, 37.119366);
	patternContext.moveTo(-89.643579, 36.956821);
	patternContext.bezierCurveTo(-89.739739, 36.833334, -89.736999, 36.830580, -89.614389, 36.927421);
	patternContext.bezierCurveTo(-89.539979, 36.986191, -89.479106, 37.047505, -89.479106, 37.063672);
	patternContext.bezierCurveTo(-89.479106, 37.127752, -89.542586, 37.086512, -89.643575, 36.956817);
	patternContext.moveTo(-94.441069, 36.261310);
	patternContext.bezierCurveTo(-94.385269, 36.238820, -94.318590, 36.241580, -94.292902, 36.267410);
	patternContext.bezierCurveTo(-94.267212, 36.293280, -94.312872, 36.311680, -94.394364, 36.308300);
	patternContext.bezierCurveTo(-94.484424, 36.304600, -94.502737, 36.286110, -94.441074, 36.261260);
	patternContext.moveTo(-87.933028, 36.129384);
	patternContext.bezierCurveTo(-87.933028, 36.113214, -87.872148, 36.051904, -87.797746, 35.993133);
	patternContext.bezierCurveTo(-87.675137, 35.896283, -87.672403, 35.899043, -87.768556, 36.022533);
	patternContext.bezierCurveTo(-87.869544, 36.152224, -87.933025, 36.193468, -87.933025, 36.129388);
	patternContext.moveTo(-49.686815, 35.090308);
	patternContext.bezierCurveTo(-49.548634, 35.073038, -49.322519, 35.073038, -49.184338, 35.090308);
	patternContext.bezierCurveTo(-49.046157, 35.107578, -49.159218, 35.121708, -49.435577, 35.121708);
	patternContext.bezierCurveTo(-49.711939, 35.121708, -49.824996, 35.107578, -49.686815, 35.090308);
	patternContext.moveTo(-44.117889, 35.088908);
	patternContext.bezierCurveTo(-43.850490, 35.073658, -43.433048, 35.073788, -43.190239, 35.089220);
	patternContext.bezierCurveTo(-42.947432, 35.104620, -43.166209, 35.117100, -43.676420, 35.116940);
	patternContext.bezierCurveTo(-44.186627, 35.116784, -44.385289, 35.104190, -44.117889, 35.088940);
	patternContext.moveTo(-37.197375, 35.088363);
	patternContext.bezierCurveTo(-36.525075, 35.075393, -35.446683, 35.075413, -34.800948, 35.088423);
	patternContext.bezierCurveTo(-34.155213, 35.101433, -34.705278, 35.112043, -36.023312, 35.112013);
	patternContext.bezierCurveTo(-37.341347, 35.111979, -37.869676, 35.101333, -37.197375, 35.088363);
	patternContext.moveTo(-88.004229, 34.867642);
	patternContext.bezierCurveTo(-88.000529, 34.776942, -87.982199, 34.758494, -87.957529, 34.820602);
	patternContext.bezierCurveTo(-87.935199, 34.876802, -87.937939, 34.943958, -87.963629, 34.969829);
	patternContext.bezierCurveTo(-87.989319, 34.995699, -88.007589, 34.949719, -88.004229, 34.867642);
	patternContext.moveTo(-91.063845, 34.601628);
	patternContext.bezierCurveTo(-90.986895, 34.515988, -90.906533, 34.445913, -90.885274, 34.445913);
	patternContext.bezierCurveTo(-90.864014, 34.445913, -90.909584, 34.515983, -90.986541, 34.601628);
	patternContext.bezierCurveTo(-91.063491, 34.687268, -91.143853, 34.757344, -91.165111, 34.757344);
	patternContext.bezierCurveTo(-91.186371, 34.757344, -91.140801, 34.687274, -91.063845, 34.601628);
	patternContext.moveTo(-88.411347, 32.913432);
	patternContext.bezierCurveTo(-88.355547, 32.890942, -88.288869, 32.893702, -88.263181, 32.919532);
	patternContext.bezierCurveTo(-88.237491, 32.945402, -88.283151, 32.963802, -88.364643, 32.960422);
	patternContext.bezierCurveTo(-88.454693, 32.956722, -88.473015, 32.938232, -88.411343, 32.913382);
	patternContext.moveTo(-94.658486, 32.504066);
	patternContext.bezierCurveTo(-94.658486, 32.463776, -94.624096, 32.409396, -94.582066, 32.383236);
	patternContext.bezierCurveTo(-94.538246, 32.355956, -94.525286, 32.387236, -94.551686, 32.456496);
	patternContext.bezierCurveTo(-94.603076, 32.591378, -94.658486, 32.616057, -94.658486, 32.504066);
	patternContext.moveTo(-87.165838, 31.506786);
	patternContext.lineTo(-87.353247, 31.292677);
	patternContext.lineTo(-87.140661, 31.481428);
	patternContext.bezierCurveTo(-86.941967, 31.657845, -86.892624, 31.720894, -86.953252, 31.720894);
	patternContext.bezierCurveTo(-86.967102, 31.720894, -87.062762, 31.624544, -87.165838, 31.506786);
	patternContext.moveTo(-27.249294, 31.457926);
	patternContext.bezierCurveTo(-27.249294, 31.441756, -27.188414, 31.380446, -27.114012, 31.321675);
	patternContext.bezierCurveTo(-26.991403, 31.224835, -26.988669, 31.227585, -27.084822, 31.351075);
	patternContext.bezierCurveTo(-27.185810, 31.480767, -27.249291, 31.522010, -27.249291, 31.457930);
	patternContext.moveTo(-26.149765, 29.764522);
	patternContext.bezierCurveTo(-26.165145, 28.611531, -26.152265, 28.458252, -26.031755, 28.363084);
	patternContext.bezierCurveTo(-25.912474, 28.268864, -25.907668, 28.270704, -25.991125, 28.378594);
	patternContext.bezierCurveTo(-26.054585, 28.460634, -26.093472, 28.922406, -26.109135, 29.780032);
	patternContext.lineTo(-26.132495, 31.059110);
	patternContext.moveTo(-49.402429, 28.956948);
	patternContext.bezierCurveTo(-49.402375, 27.972048, -49.391299, 27.579871, -49.377809, 28.085442);
	patternContext.bezierCurveTo(-49.364329, 28.591013, -49.364369, 29.396840, -49.377887, 29.876168);
	patternContext.bezierCurveTo(-49.391427, 30.355497, -49.402457, 29.941848, -49.402407, 28.956948);
	patternContext.moveTo(-43.218100, 28.956948);
	patternContext.bezierCurveTo(-43.218046, 27.972048, -43.206970, 27.579871, -43.193480, 28.085442);
	patternContext.bezierCurveTo(-43.179990, 28.591013, -43.180040, 29.396840, -43.193557, 29.876168);
	patternContext.bezierCurveTo(-43.207097, 30.355497, -43.218127, 29.941848, -43.218077, 28.956948);
	patternContext.moveTo(-37.961420, 28.956948);
	patternContext.bezierCurveTo(-37.961366, 27.972048, -37.950290, 27.579871, -37.936800, 28.085442);
	patternContext.bezierCurveTo(-37.923310, 28.591013, -37.923360, 29.396840, -37.936877, 29.876168);
	patternContext.bezierCurveTo(-37.950417, 30.355497, -37.961447, 29.941848, -37.961397, 28.956948);
	patternContext.moveTo(-93.478127, 29.954072);
	patternContext.bezierCurveTo(-93.402917, 29.934332, -93.298552, 29.935632, -93.246215, 29.956972);
	patternContext.bezierCurveTo(-93.193875, 29.978302, -93.255415, 29.994452, -93.382968, 29.992862);
	patternContext.bezierCurveTo(-93.510520, 29.991262, -93.553342, 29.973822, -93.478128, 29.954082);
	patternContext.moveTo(-93.126899, 29.487695);
	patternContext.bezierCurveTo(-93.071099, 29.465205, -93.004420, 29.467965, -92.978732, 29.493795);
	patternContext.bezierCurveTo(-92.953042, 29.519665, -92.998702, 29.538065, -93.080194, 29.534685);
	patternContext.bezierCurveTo(-93.170244, 29.530985, -93.188567, 29.512505, -93.126894, 29.487645);
	patternContext.moveTo(-92.590601, 29.489295);
	patternContext.bezierCurveTo(-92.537451, 29.467695, -92.450488, 29.467695, -92.397341, 29.489295);
	patternContext.bezierCurveTo(-92.344191, 29.510895, -92.387641, 29.528565, -92.493971, 29.528565);
	patternContext.bezierCurveTo(-92.600264, 29.528565, -92.643748, 29.510895, -92.590601, 29.489295);
	patternContext.moveTo(-86.328968, 29.333580);
	patternContext.bezierCurveTo(-86.275818, 29.311980, -86.188854, 29.311980, -86.135707, 29.333580);
	patternContext.bezierCurveTo(-86.082557, 29.355180, -86.126007, 29.372850, -86.232337, 29.372850);
	patternContext.bezierCurveTo(-86.338631, 29.372850, -86.382114, 29.355180, -86.328967, 29.333580);
	patternContext.moveTo(-56.287741, 28.684500);
	patternContext.bezierCurveTo(-56.287741, 28.277694, -56.274711, 28.111273, -56.258791, 28.314676);
	patternContext.bezierCurveTo(-56.242861, 28.518079, -56.242861, 28.850921, -56.258791, 29.054324);
	patternContext.bezierCurveTo(-56.274711, 29.257727, -56.287741, 29.091304, -56.287741, 28.684500);
	patternContext.moveTo(-86.510213, 28.665040);
	patternContext.lineTo(-86.657476, 28.489860);
	patternContext.lineTo(-86.483542, 28.638178);
	patternContext.bezierCurveTo(-86.320087, 28.777560, -86.274416, 28.840219, -86.336278, 28.840219);
	patternContext.bezierCurveTo(-86.350948, 28.840219, -86.429218, 28.761389, -86.510213, 28.665040);
	patternContext.moveTo(-85.855644, 28.392538);
	patternContext.bezierCurveTo(-85.951804, 28.269051, -85.949064, 28.266297, -85.826454, 28.363138);
	patternContext.bezierCurveTo(-85.697684, 28.464849, -85.656734, 28.528785, -85.720359, 28.528785);
	patternContext.bezierCurveTo(-85.736409, 28.528785, -85.797289, 28.467475, -85.855641, 28.392534);
	patternContext.moveTo(-26.413410, 27.619169);
	patternContext.bezierCurveTo(-26.357610, 27.596679, -26.290931, 27.599449, -26.265243, 27.625269);
	patternContext.bezierCurveTo(-26.239553, 27.651139, -26.285213, 27.669539, -26.366705, 27.666159);
	patternContext.bezierCurveTo(-26.456755, 27.662459, -26.475077, 27.643969, -26.413405, 27.619119);
	patternContext.moveTo(-84.989334, 27.159791);
	patternContext.bezierCurveTo(-84.985634, 27.069091, -84.967304, 27.050643, -84.942634, 27.112751);
	patternContext.bezierCurveTo(-84.920304, 27.168951, -84.923054, 27.236107, -84.948734, 27.261979);
	patternContext.bezierCurveTo(-84.974424, 27.287849, -84.992694, 27.241869, -84.989334, 27.159791);
	patternContext.moveTo(-85.469123, 26.056807);
	patternContext.bezierCurveTo(-85.565283, 25.933321, -85.562543, 25.930567, -85.439933, 26.027417);
	patternContext.bezierCurveTo(-85.365533, 26.086187, -85.304651, 26.147500, -85.304651, 26.163667);
	patternContext.bezierCurveTo(-85.304651, 26.227747, -85.368131, 26.186507, -85.469120, 26.056812);
	patternContext.moveTo(-83.231937, 23.959858);
	patternContext.bezierCurveTo(-83.176137, 23.937368, -83.109459, 23.940128, -83.083771, 23.965958);
	patternContext.bezierCurveTo(-83.058081, 23.991828, -83.103741, 24.010228, -83.185232, 24.006848);
	patternContext.bezierCurveTo(-83.275292, 24.003148, -83.293605, 23.984668, -83.231942, 23.959808);
	patternContext.moveTo(-39.302600, 23.500477);
	patternContext.bezierCurveTo(-39.298900, 23.409777, -39.280570, 23.391328, -39.255900, 23.453437);
	patternContext.bezierCurveTo(-39.233570, 23.509637, -39.236320, 23.576793, -39.262000, 23.602665);
	patternContext.bezierCurveTo(-39.287690, 23.628535, -39.305960, 23.582555, -39.302600, 23.500477);
	patternContext.moveTo(-48.115269, 23.189046);
	patternContext.bezierCurveTo(-48.111569, 23.098346, -48.093239, 23.079897, -48.068569, 23.142006);
	patternContext.bezierCurveTo(-48.046239, 23.198206, -48.048989, 23.265361, -48.074669, 23.291233);
	patternContext.bezierCurveTo(-48.100359, 23.317103, -48.118629, 23.271123, -48.115269, 23.189045);
	patternContext.moveTo(-89.747640, 22.146491);
	patternContext.bezierCurveTo(-89.998982, 21.890681, -90.189221, 21.670632, -90.170393, 21.657495);
	patternContext.bezierCurveTo(-90.151563, 21.644355, -89.930380, 21.853657, -89.678869, 22.122605);
	patternContext.bezierCurveTo(-89.098088, 22.743653, -89.144927, 22.759921, -89.747639, 22.146495);
	patternContext.moveTo(-81.235950, 21.927566);
	patternContext.bezierCurveTo(-81.256600, 21.893916, -81.209020, 21.866396, -81.130232, 21.866396);
	patternContext.bezierCurveTo(-81.051442, 21.866396, -81.003867, 21.893926, -81.024514, 21.927566);
	patternContext.bezierCurveTo(-81.045164, 21.961216, -81.092734, 21.988736, -81.130232, 21.988736);
	patternContext.bezierCurveTo(-81.167732, 21.988736, -81.215302, 21.961206, -81.235950, 21.927566);
	patternContext.moveTo(-47.883357, 21.242604);
	patternContext.bezierCurveTo(-47.879657, 21.151904, -47.861327, 21.133455, -47.836657, 21.195564);
	patternContext.bezierCurveTo(-47.814327, 21.251764, -47.817077, 21.318919, -47.842757, 21.344791);
	patternContext.bezierCurveTo(-47.868447, 21.370661, -47.886717, 21.324681, -47.883357, 21.242603);
	patternContext.moveTo(-79.661453, 20.246475);
	patternContext.bezierCurveTo(-79.661453, 20.230305, -79.600573, 20.168995, -79.526171, 20.110224);
	patternContext.bezierCurveTo(-79.403562, 20.013384, -79.400828, 20.016134, -79.496981, 20.139624);
	patternContext.bezierCurveTo(-79.597969, 20.269316, -79.661450, 20.310559, -79.661450, 20.246479);
	patternContext.moveTo(-84.878934, 19.965332);
	patternContext.bezierCurveTo(-84.906014, 19.921192, -84.874934, 19.908142, -84.806194, 19.934732);
	patternContext.bezierCurveTo(-84.672271, 19.986492, -84.647768, 20.042297, -84.758964, 20.042297);
	patternContext.bezierCurveTo(-84.798974, 20.042297, -84.852964, 20.007667, -84.878935, 19.965327);
	patternContext.moveTo(-78.811108, 19.467898);
	patternContext.bezierCurveTo(-78.811108, 19.451728, -78.750228, 19.390418, -78.675826, 19.331647);
	patternContext.bezierCurveTo(-78.553217, 19.234807, -78.550483, 19.237557, -78.646636, 19.361047);
	patternContext.bezierCurveTo(-78.747624, 19.490739, -78.811105, 19.531982, -78.811105, 19.467902);
	patternContext.moveTo(-47.651445, 19.296162);
	patternContext.bezierCurveTo(-47.647745, 19.205462, -47.629415, 19.187014, -47.604745, 19.249122);
	patternContext.bezierCurveTo(-47.582415, 19.305322, -47.585165, 19.372477, -47.610845, 19.398349);
	patternContext.bezierCurveTo(-47.636535, 19.424219, -47.654805, 19.378239, -47.651445, 19.296161);
	patternContext.moveTo(-80.676268, 18.426751);
	patternContext.bezierCurveTo(-80.772428, 18.303264, -80.769688, 18.300511, -80.647078, 18.397351);
	patternContext.bezierCurveTo(-80.518308, 18.499062, -80.477358, 18.562998, -80.540983, 18.562998);
	patternContext.bezierCurveTo(-80.557033, 18.562998, -80.617913, 18.501688, -80.676265, 18.426747);
	patternContext.moveTo(-80.057835, 17.803890);
	patternContext.bezierCurveTo(-80.153995, 17.680403, -80.151255, 17.677649, -80.028645, 17.774490);
	patternContext.bezierCurveTo(-79.954245, 17.833260, -79.893363, 17.894574, -79.893363, 17.910741);
	patternContext.bezierCurveTo(-79.893363, 17.974821, -79.956843, 17.933581, -80.057832, 17.803886);
	patternContext.moveTo(-77.033113, 17.832890);
	patternContext.bezierCurveTo(-77.033113, 17.816720, -76.972233, 17.755410, -76.897831, 17.696639);
	patternContext.bezierCurveTo(-76.775222, 17.599789, -76.772488, 17.602549, -76.868641, 17.726039);
	patternContext.bezierCurveTo(-76.969629, 17.855731, -77.033110, 17.896974, -77.033110, 17.832894);
	patternContext.moveTo(-81.526613, 17.492462);
	patternContext.bezierCurveTo(-81.622773, 17.368975, -81.620033, 17.366221, -81.497423, 17.463062);
	patternContext.bezierCurveTo(-81.423023, 17.521832, -81.362141, 17.583146, -81.362141, 17.599313);
	patternContext.bezierCurveTo(-81.362141, 17.663393, -81.425621, 17.622153, -81.526610, 17.492458);
	patternContext.moveTo(-77.047608, 17.419812);
	patternContext.bezierCurveTo(-76.991808, 17.397322, -76.925129, 17.400082, -76.899441, 17.425912);
	patternContext.bezierCurveTo(-76.873751, 17.451782, -76.919411, 17.470182, -77.000903, 17.466802);
	patternContext.bezierCurveTo(-77.090963, 17.463102, -77.109276, 17.444612, -77.047613, 17.419762);
	patternContext.moveTo(-47.419532, 17.349722);
	patternContext.bezierCurveTo(-47.415832, 17.259022, -47.397502, 17.240574, -47.372832, 17.302682);
	patternContext.bezierCurveTo(-47.350502, 17.358882, -47.353252, 17.426037, -47.378932, 17.451910);
	patternContext.bezierCurveTo(-47.404622, 17.477780, -47.422892, 17.431800, -47.419532, 17.349722);
	patternContext.moveTo(-40.075641, 17.038292);
	patternContext.bezierCurveTo(-40.071941, 16.947592, -40.053611, 16.929143, -40.028941, 16.991252);
	patternContext.bezierCurveTo(-40.006611, 17.047452, -40.009361, 17.114609, -40.035041, 17.140480);
	patternContext.bezierCurveTo(-40.060731, 17.166350, -40.079001, 17.120370, -40.075641, 17.038292);
	patternContext.moveTo(-80.830876, 16.947462);
	patternContext.bezierCurveTo(-80.927036, 16.823976, -80.924296, 16.821222, -80.801686, 16.918062);
	patternContext.bezierCurveTo(-80.672917, 17.019772, -80.631966, 17.083708, -80.695591, 17.083708);
	patternContext.bezierCurveTo(-80.711641, 17.083708, -80.772521, 17.022398, -80.830873, 16.947457);
	patternContext.moveTo(-82.299654, 16.636032);
	patternContext.bezierCurveTo(-82.395814, 16.512545, -82.393074, 16.509791, -82.270464, 16.606632);
	patternContext.bezierCurveTo(-82.141695, 16.708343, -82.100745, 16.772279, -82.164369, 16.772279);
	patternContext.bezierCurveTo(-82.180419, 16.772279, -82.241299, 16.710969, -82.299651, 16.636028);
	patternContext.moveTo(-81.681221, 16.013170);
	patternContext.bezierCurveTo(-81.777381, 15.889683, -81.774641, 15.886930, -81.652031, 15.983770);
	patternContext.bezierCurveTo(-81.523262, 16.085481, -81.482312, 16.149417, -81.545936, 16.149417);
	patternContext.bezierCurveTo(-81.561986, 16.149417, -81.622866, 16.088107, -81.681218, 16.013166);
	patternContext.moveTo(-80.737608, 15.792574);
	patternContext.bezierCurveTo(-80.733908, 15.701874, -80.715578, 15.683425, -80.690908, 15.745534);
	patternContext.bezierCurveTo(-80.668578, 15.801734, -80.671318, 15.868889, -80.697008, 15.894761);
	patternContext.bezierCurveTo(-80.722698, 15.920631, -80.740968, 15.874651, -80.737608, 15.792573);
	patternContext.moveTo(-83.150000, 15.701733);
	patternContext.bezierCurveTo(-83.246160, 15.578246, -83.243420, 15.575492, -83.120810, 15.672333);
	patternContext.bezierCurveTo(-82.992040, 15.774044, -82.951090, 15.837980, -83.014714, 15.837980);
	patternContext.bezierCurveTo(-83.030764, 15.837980, -83.091644, 15.776670, -83.149997, 15.701729);
	patternContext.moveTo(-80.041871, 15.403279);
	patternContext.bezierCurveTo(-80.038171, 15.312579, -80.019841, 15.294130, -79.995171, 15.356239);
	patternContext.bezierCurveTo(-79.972841, 15.412439, -79.975591, 15.479595, -80.001271, 15.505467);
	patternContext.bezierCurveTo(-80.026961, 15.531337, -80.045231, 15.485357, -80.041871, 15.403279);
	patternContext.moveTo(-47.187620, 15.403279);
	patternContext.bezierCurveTo(-47.183920, 15.312579, -47.165590, 15.294130, -47.140920, 15.356239);
	patternContext.bezierCurveTo(-47.118590, 15.412439, -47.121340, 15.479595, -47.147020, 15.505467);
	patternContext.bezierCurveTo(-47.172710, 15.531337, -47.190980, 15.485357, -47.187620, 15.403279);
	patternContext.moveTo(-82.531567, 15.078871);
	patternContext.bezierCurveTo(-82.627727, 14.955385, -82.624987, 14.952631, -82.502377, 15.049471);
	patternContext.bezierCurveTo(-82.373607, 15.151182, -82.332657, 15.215118, -82.396281, 15.215118);
	patternContext.bezierCurveTo(-82.412331, 15.215118, -82.473211, 15.153808, -82.531564, 15.078867);
	patternContext.moveTo(-84.299700, 14.407150);
	patternContext.bezierCurveTo(-84.299700, 14.390980, -84.238820, 14.329670, -84.164418, 14.270899);
	patternContext.bezierCurveTo(-84.041809, 14.174049, -84.039075, 14.176809, -84.135228, 14.300299);
	patternContext.bezierCurveTo(-84.236216, 14.429990, -84.299697, 14.471233, -84.299697, 14.407154);
	patternContext.moveTo(-83.304608, 14.222437);
	patternContext.bezierCurveTo(-83.400768, 14.098950, -83.398028, 14.096196, -83.275418, 14.193037);
	patternContext.bezierCurveTo(-83.146649, 14.294748, -83.105698, 14.358684, -83.169323, 14.358684);
	patternContext.bezierCurveTo(-83.185373, 14.358684, -83.246253, 14.297374, -83.304605, 14.222433);
	patternContext.moveTo(-76.038021, 14.222437);
	patternContext.bezierCurveTo(-76.131891, 14.101884, -76.129941, 14.097321, -76.021051, 14.182837);
	patternContext.bezierCurveTo(-75.953361, 14.235997, -75.869516, 14.253507, -75.834723, 14.221767);
	patternContext.bezierCurveTo(-75.799933, 14.190027, -75.796483, 14.207847, -75.827023, 14.261367);
	patternContext.bezierCurveTo(-75.898903, 14.387161, -75.911523, 14.384831, -76.037976, 14.222437);
	patternContext.moveTo(-41.074492, 13.735826);
	patternContext.bezierCurveTo(-41.074492, 13.628772, -41.056942, 13.584977, -41.035502, 13.638506);
	patternContext.bezierCurveTo(-41.014062, 13.692036, -41.014062, 13.779623, -41.035502, 13.833150);
	patternContext.bezierCurveTo(-41.056952, 13.886680, -41.074492, 13.842850, -41.074492, 13.735830);
	patternContext.moveTo(-82.772944, 13.684266);
	patternContext.bezierCurveTo(-82.719794, 13.662666, -82.632830, 13.662666, -82.579684, 13.684266);
	patternContext.bezierCurveTo(-82.526534, 13.705866, -82.569984, 13.723536, -82.676314, 13.723536);
	patternContext.bezierCurveTo(-82.782607, 13.723536, -82.826091, 13.705866, -82.772944, 13.684266);
	patternContext.moveTo(-77.336227, 12.833978);
	patternContext.bezierCurveTo(-77.332527, 12.743278, -77.314197, 12.724829, -77.289527, 12.786938);
	patternContext.bezierCurveTo(-77.267197, 12.843138, -77.269937, 12.910294, -77.295627, 12.936165);
	patternContext.bezierCurveTo(-77.321317, 12.962035, -77.339587, 12.916055, -77.336227, 12.833977);
	patternContext.moveTo(-77.857691, 11.442453);
	patternContext.bezierCurveTo(-77.857691, 11.380103, -77.828131, 11.347493, -77.792011, 11.369973);
	patternContext.bezierCurveTo(-77.755891, 11.392463, -77.746341, 11.443473, -77.770811, 11.483335);
	patternContext.bezierCurveTo(-77.833321, 11.585202, -77.857701, 11.573735, -77.857701, 11.442455);
	patternContext.moveTo(-77.099725, 11.218431);
	patternContext.bezierCurveTo(-77.164275, 11.140101, -77.157945, 11.114621, -77.073935, 11.114621);
	patternContext.bezierCurveTo(-77.012705, 11.114621, -76.978685, 11.140821, -76.998345, 11.172851);
	patternContext.bezierCurveTo(-77.017995, 11.204881, -76.990345, 11.248831, -76.936965, 11.270511);
	patternContext.bezierCurveTo(-76.876455, 11.295081, -76.872705, 11.312261, -76.927065, 11.316091);
	patternContext.bezierCurveTo(-76.975005, 11.319491, -77.052724, 11.275521, -77.099772, 11.218431);
	patternContext.fill();
	
// #patternContexth954
	patternContext.beginPath();
	patternContext.fillStyle = 'rgb(0, 0, 0)';
	patternContext.lineWidth = 0.020526;
	patternContext.moveTo(38.984962, 78.809450);
	patternContext.bezierCurveTo(38.984962, 78.771270, 39.065962, 78.719560, 39.164969, 78.694530);
	patternContext.bezierCurveTo(39.521863, 78.604310, 39.535016, 78.454477, 39.477681, 75.132014);
	patternContext.bezierCurveTo(39.443041, 73.124758, 39.393811, 71.964955, 39.338438, 71.851912);
	patternContext.bezierCurveTo(39.291328, 71.755732, 39.175129, 71.642447, 39.080220, 71.600177);
	patternContext.bezierCurveTo(38.985310, 71.557907, 38.907658, 71.496593, 38.907658, 71.463926);
	patternContext.bezierCurveTo(38.907658, 71.431256, 39.389529, 71.404526, 39.978484, 71.404526);
	patternContext.bezierCurveTo(40.964280, 71.404526, 41.070021, 71.418586, 41.310140, 71.581559);
	patternContext.bezierCurveTo(41.870042, 71.961579, 42.130230, 72.703653, 42.055121, 73.706301);
	patternContext.bezierCurveTo(41.967561, 74.875138, 41.469342, 75.451129, 40.544529, 75.452691);
	patternContext.lineTo(40.287448, 75.453158);
	patternContext.lineTo(40.341878, 76.912990);
	patternContext.bezierCurveTo(40.371818, 77.715897, 40.425708, 78.430104, 40.461637, 78.500116);
	patternContext.bezierCurveTo(40.497567, 78.570126, 40.614849, 78.649627, 40.722264, 78.676779);
	patternContext.bezierCurveTo(40.829678, 78.703899, 40.917563, 78.760479, 40.917563, 78.802489);
	patternContext.bezierCurveTo(40.917563, 78.848339, 40.531415, 78.878859, 39.951262, 78.878859);
	patternContext.bezierCurveTo(39.419796, 78.878859, 38.984960, 78.847619, 38.984960, 78.809439);
	patternContext.moveTo(40.758743, 74.988255);
	patternContext.bezierCurveTo(41.017426, 74.848821, 41.149478, 74.340830, 41.149478, 73.485134);
	patternContext.bezierCurveTo(41.149478, 73.046795, 41.115518, 72.568908, 41.074018, 72.423163);
	patternContext.bezierCurveTo(40.976138, 72.079413, 40.706078, 71.793819, 40.478917, 71.793819);
	patternContext.lineTo(40.299131, 71.793819);
	patternContext.lineTo(40.299131, 73.428830);
	patternContext.bezierCurveTo(40.299131, 75.029281, 40.302531, 75.063841, 40.458821, 75.063841);
	patternContext.bezierCurveTo(40.546651, 75.063841, 40.681616, 75.029831, 40.758742, 74.988251);
	patternContext.moveTo(35.467625, 78.655361);
	patternContext.bezierCurveTo(34.645986, 78.141407, 34.291265, 77.021235, 34.368908, 75.185731);
	patternContext.bezierCurveTo(34.489946, 72.324392, 35.795826, 70.541956, 37.251236, 71.251553);
	patternContext.bezierCurveTo(38.513109, 71.866790, 38.791925, 75.081025, 37.777143, 77.314317);
	patternContext.bezierCurveTo(37.462253, 78.007316, 37.076565, 78.501180, 36.715476, 78.673755);
	patternContext.bezierCurveTo(36.354772, 78.846145, 35.758575, 78.837357, 35.467625, 78.655365);
	patternContext.moveTo(36.537005, 78.179363);
	patternContext.bezierCurveTo(37.055134, 77.559191, 37.444673, 75.605497, 37.460908, 73.545617);
	patternContext.bezierCurveTo(37.470008, 72.391433, 37.376558, 71.952640, 37.052037, 71.625800);
	patternContext.bezierCurveTo(36.792179, 71.364083, 36.604146, 71.347438, 36.333109, 71.562160);
	patternContext.bezierCurveTo(35.746997, 72.026496, 35.274364, 74.158629, 35.274364, 76.338347);
	patternContext.bezierCurveTo(35.274364, 77.801294, 35.511313, 78.411718, 36.079186, 78.411718);
	patternContext.bezierCurveTo(36.276970, 78.411718, 36.391399, 78.353638, 36.537005, 78.179360);
	patternContext.moveTo(43.278757, 78.650860);
	patternContext.bezierCurveTo(43.254357, 78.611100, 43.312477, 78.567310, 43.407921, 78.553540);
	patternContext.bezierCurveTo(43.761803, 78.502490, 43.758832, 78.287560, 43.359311, 75.038613);
	patternContext.bezierCurveTo(43.153022, 73.361032, 42.953736, 71.906463, 42.916455, 71.806238);
	patternContext.bezierCurveTo(42.879175, 71.706014, 42.744646, 71.584465, 42.617505, 71.536131);
	patternContext.bezierCurveTo(42.380469, 71.446021, 42.306613, 71.326675, 42.487885, 71.326675);
	patternContext.bezierCurveTo(42.543735, 71.326675, 42.970714, 71.276025, 43.436728, 71.214121);
	patternContext.bezierCurveTo(44.515163, 71.070865, 44.799272, 71.126851, 45.182317, 71.558118);
	patternContext.bezierCurveTo(45.668311, 72.105291, 45.892007, 73.131783, 45.713734, 73.996669);
	patternContext.bezierCurveTo(45.573586, 74.676594, 45.195951, 75.052593, 44.531529, 75.173752);
	patternContext.bezierCurveTo(44.372089, 75.202822, 44.241678, 75.251302, 44.241726, 75.281480);
	patternContext.bezierCurveTo(44.241958, 75.404422, 44.552086, 77.765258, 44.593452, 77.958662);
	patternContext.bezierCurveTo(44.646052, 78.204567, 44.785750, 78.337905, 45.008503, 78.354804);
	patternContext.bezierCurveTo(45.096933, 78.361504, 45.169288, 78.405794, 45.169288, 78.453204);
	patternContext.bezierCurveTo(45.169288, 78.504624, 44.849566, 78.576656, 44.376921, 78.631723);
	patternContext.bezierCurveTo(43.426009, 78.742511, 43.335955, 78.744081, 43.278753, 78.650863);
	patternContext.moveTo(44.508744, 74.781905);
	patternContext.bezierCurveTo(44.833089, 74.656550, 44.975800, 73.968660, 44.857696, 73.099898);
	patternContext.bezierCurveTo(44.718977, 72.079499, 44.428453, 71.560246, 43.996255, 71.560246);
	patternContext.bezierCurveTo(43.876114, 71.560246, 43.777962, 71.569046, 43.778139, 71.579706);
	patternContext.bezierCurveTo(43.778294, 71.590416, 43.865139, 72.282372, 43.971078, 73.117395);
	patternContext.bezierCurveTo(44.077017, 73.952419, 44.163840, 74.679415, 44.164017, 74.732942);
	patternContext.bezierCurveTo(44.164403, 74.838305, 44.309477, 74.858913, 44.508744, 74.781902);
	patternContext.moveTo(46.406158, 78.332608);
	patternContext.bezierCurveTo(46.406158, 78.287458, 46.467038, 78.156990, 46.541440, 78.042667);
	patternContext.bezierCurveTo(46.663201, 77.855582, 46.682252, 77.473530, 46.732046, 74.220077);
	patternContext.bezierCurveTo(46.762476, 72.231976, 46.797266, 70.595851, 46.809346, 70.584245);
	patternContext.bezierCurveTo(46.821436, 70.572635, 47.229034, 71.426896, 47.715120, 72.482596);
	patternContext.bezierCurveTo(49.500999, 76.361237, 49.944453, 77.240936, 50.154285, 77.321286);
	patternContext.bezierCurveTo(50.261193, 77.362226, 50.348664, 77.425021, 50.348664, 77.460836);
	patternContext.bezierCurveTo(50.348664, 77.496656, 49.948615, 77.614226, 49.459666, 77.722111);
	patternContext.bezierCurveTo(48.817741, 77.863751, 48.570669, 77.891989, 48.570669, 77.823715);
	patternContext.bezierCurveTo(48.570669, 77.771715, 48.640239, 77.710839, 48.725277, 77.688443);
	patternContext.bezierCurveTo(48.837607, 77.658863, 48.879885, 77.582244, 48.879885, 77.408273);
	patternContext.bezierCurveTo(48.879885, 77.092723, 48.305049, 75.842418, 48.159974, 75.842418);
	patternContext.bezierCurveTo(48.098664, 75.842418, 47.800730, 75.898778, 47.497894, 75.967652);
	patternContext.lineTo(46.947282, 76.092886);
	patternContext.lineTo(46.947282, 76.789024);
	patternContext.bezierCurveTo(46.947282, 77.611249, 47.064800, 77.921008, 47.391076, 77.958800);
	patternContext.bezierCurveTo(47.720284, 77.996930, 47.617267, 78.129596, 47.181508, 78.228683);
	patternContext.bezierCurveTo(46.965116, 78.277893, 46.702137, 78.339869, 46.597111, 78.366417);
	patternContext.bezierCurveTo(46.484485, 78.394887, 46.406154, 78.381017, 46.406154, 78.332607);
	patternContext.moveTo(47.625411, 75.563412);
	patternContext.bezierCurveTo(47.807051, 75.534332, 47.976180, 75.477102, 48.001250, 75.436249);
	patternContext.bezierCurveTo(48.044310, 75.366079, 47.155807, 73.318075, 47.013818, 73.160221);
	patternContext.bezierCurveTo(46.976368, 73.118591, 46.947288, 73.658358, 46.947288, 74.394920);
	patternContext.lineTo(46.947288, 75.703584);
	patternContext.lineTo(47.121223, 75.659934);
	patternContext.bezierCurveTo(47.216883, 75.635924, 47.443772, 75.592494, 47.625413, 75.563414);
	patternContext.moveTo(30.500637, 77.690856);
	patternContext.bezierCurveTo(29.546966, 77.463561, 29.374178, 77.377123, 29.738927, 77.309806);
	patternContext.bezierCurveTo(30.054511, 77.251566, 30.172876, 76.898427, 30.822467, 74.077107);
	patternContext.bezierCurveTo(31.663127, 70.425936, 31.625844, 70.676462, 31.364805, 70.432806);
	patternContext.bezierCurveTo(31.248320, 70.324079, 31.168543, 70.219478, 31.187525, 70.200361);
	patternContext.bezierCurveTo(31.243105, 70.144391, 33.181428, 70.615912, 33.477565, 70.757444);
	patternContext.bezierCurveTo(33.843865, 70.932510, 34.033587, 71.365927, 34.035801, 72.032725);
	patternContext.bezierCurveTo(34.039001, 72.987091, 33.649417, 73.773851, 33.069055, 73.985215);
	patternContext.bezierCurveTo(32.755032, 74.099581, 32.744982, 74.133408, 32.966159, 74.331591);
	patternContext.bezierCurveTo(33.729363, 75.015453, 33.448842, 77.043183, 32.503902, 77.672993);
	patternContext.bezierCurveTo(32.065552, 77.965157, 31.666465, 77.968716, 30.500637, 77.690853);
	patternContext.moveTo(31.875359, 77.172878);
	patternContext.bezierCurveTo(32.237725, 76.789224, 32.414474, 76.287375, 32.468736, 75.488081);
	patternContext.bezierCurveTo(32.501536, 75.004887, 32.483366, 74.806847, 32.389406, 74.623865);
	patternContext.bezierCurveTo(32.266623, 74.384728, 31.801192, 74.090746, 31.705487, 74.191877);
	patternContext.bezierCurveTo(31.638787, 74.262357, 31.022634, 76.909947, 31.022634, 77.126077);
	patternContext.bezierCurveTo(31.022634, 77.571040, 31.475794, 77.595911, 31.875355, 77.172877);
	patternContext.moveTo(32.410488, 73.703219);
	patternContext.bezierCurveTo(32.696679, 73.554165, 32.920178, 73.182718, 33.068302, 72.609959);
	patternContext.bezierCurveTo(33.295058, 71.733150, 33.171866, 71.124505, 32.730359, 70.940317);
	patternContext.bezierCurveTo(32.596214, 70.884357, 32.472745, 70.852377, 32.455985, 70.869257);
	patternContext.bezierCurveTo(32.419615, 70.905887, 31.795679, 73.612938, 31.795679, 73.734089);
	patternContext.bezierCurveTo(31.795679, 73.855307, 32.152910, 73.837369, 32.410488, 73.703219);
	patternContext.moveTo(50.812492, 77.295863);
	patternContext.bezierCurveTo(50.812492, 77.245043, 50.882062, 77.159694, 50.967101, 77.106209);
	patternContext.bezierCurveTo(51.053341, 77.051969, 51.121709, 76.924644, 51.121709, 76.818286);
	patternContext.bezierCurveTo(51.121709, 76.481724, 49.137280, 70.780090, 48.950416, 70.579759);
	patternContext.bezierCurveTo(48.823254, 70.443432, 48.728765, 70.408074, 48.587222, 70.443854);
	patternContext.bezierCurveTo(48.448462, 70.478934, 48.405268, 70.463934, 48.429985, 70.389254);
	patternContext.bezierCurveTo(48.465795, 70.281041, 49.991618, 69.731752, 50.570933, 69.618521);
	patternContext.bezierCurveTo(50.760060, 69.581551, 51.013073, 69.582431, 51.144895, 69.620521);
	patternContext.bezierCurveTo(52.101951, 69.896967, 52.860674, 71.960664, 52.354769, 72.911332);
	patternContext.bezierCurveTo(52.255159, 73.098511, 52.222079, 73.242592, 52.265649, 73.299468);
	patternContext.bezierCurveTo(53.148377, 74.451735, 54.324488, 75.832730, 54.486318, 75.906993);
	patternContext.bezierCurveTo(54.602565, 75.960333, 54.681087, 76.020691, 54.660812, 76.041112);
	patternContext.bezierCurveTo(54.640532, 76.061532, 54.384940, 76.159441, 54.092819, 76.258686);
	patternContext.lineTo(53.561691, 76.439133);
	patternContext.lineTo(52.417510, 75.014870);
	patternContext.bezierCurveTo(51.622713, 74.025515, 51.238377, 73.604115, 51.158866, 73.634845);
	patternContext.bezierCurveTo(51.095906, 73.659175, 51.044403, 73.687865, 51.044403, 73.698595);
	patternContext.bezierCurveTo(51.044403, 73.807121, 51.932040, 76.314252, 52.017049, 76.445833);
	patternContext.bezierCurveTo(52.093719, 76.564507, 52.206533, 76.621013, 52.366797, 76.621013);
	patternContext.bezierCurveTo(52.813367, 76.621013, 52.550848, 76.802148, 51.677489, 77.096627);
	patternContext.bezierCurveTo(51.121150, 77.284215, 50.812490, 77.355314, 50.812490, 77.295881);
	patternContext.moveTo(51.447348, 73.103965);
	patternContext.bezierCurveTo(51.852105, 72.816886, 51.798660, 71.964828, 51.311702, 70.941442);
	patternContext.bezierCurveTo(50.952770, 70.187113, 50.627563, 69.976502, 50.058777, 70.130023);
	patternContext.bezierCurveTo(49.963117, 70.155843, 49.884843, 70.215473, 49.884843, 70.262524);
	patternContext.bezierCurveTo(49.884843, 70.309584, 50.115999, 71.024479, 50.398524, 71.851191);
	patternContext.bezierCurveTo(50.963692, 73.504960, 50.933248, 73.468597, 51.447348, 73.103965);
	patternContext.moveTo(25.634495, 76.132509);
	patternContext.bezierCurveTo(25.158277, 75.915111, 24.786450, 75.708223, 24.808214, 75.672758);
	patternContext.bezierCurveTo(24.829974, 75.637288, 24.931131, 75.629338, 25.033000, 75.655088);
	patternContext.bezierCurveTo(25.169848, 75.689678, 25.264501, 75.650788, 25.395457, 75.506120);
	patternContext.bezierCurveTo(25.568235, 75.315263, 27.973372, 69.942485, 27.913173, 69.881855);
	patternContext.bezierCurveTo(27.896513, 69.865075, 26.998257, 71.078009, 25.917052, 72.577265);
	patternContext.bezierCurveTo(24.835845, 74.076521, 23.941775, 75.274642, 23.930229, 75.239756);
	patternContext.bezierCurveTo(23.918679, 75.204866, 24.205180, 73.726155, 24.566888, 71.953724);
	patternContext.bezierCurveTo(24.928597, 70.181293, 25.209249, 68.715722, 25.190561, 68.696900);
	patternContext.bezierCurveTo(25.171871, 68.678080, 25.106911, 68.780330, 25.046210, 68.924130);
	patternContext.bezierCurveTo(24.985510, 69.067929, 24.465125, 70.254179, 23.889808, 71.560242);
	patternContext.bezierCurveTo(23.314492, 72.866304, 22.821570, 74.042308, 22.794426, 74.173582);
	patternContext.bezierCurveTo(22.757466, 74.352343, 22.786826, 74.465763, 22.911507, 74.625365);
	patternContext.bezierCurveTo(23.003047, 74.742569, 23.057347, 74.859205, 23.032177, 74.884554);
	patternContext.bezierCurveTo(23.007007, 74.909904, 22.725418, 74.816034, 22.406420, 74.675950);
	patternContext.bezierCurveTo(21.841024, 74.427668, 21.725692, 74.285260, 22.090010, 74.285260);
	patternContext.bezierCurveTo(22.189080, 74.285260, 22.344785, 74.223950, 22.436013, 74.149010);
	patternContext.bezierCurveTo(22.637483, 73.983513, 25.078685, 68.499689, 25.087564, 68.192663);
	patternContext.bezierCurveTo(25.090964, 68.074775, 25.030704, 67.908139, 24.953625, 67.822362);
	patternContext.bezierCurveTo(24.713735, 67.555388, 24.868715, 67.574909, 25.570945, 67.900122);
	patternContext.bezierCurveTo(26.217577, 68.199583, 26.246756, 68.223850, 26.204860, 68.427307);
	patternContext.bezierCurveTo(25.402492, 72.323781, 25.253027, 73.122078, 25.343230, 73.029285);
	patternContext.bezierCurveTo(25.400190, 72.970695, 26.061126, 72.064373, 26.811982, 71.015241);
	patternContext.bezierCurveTo(27.595479, 69.920502, 28.221530, 69.117036, 28.281272, 69.129573);
	patternContext.bezierCurveTo(28.338522, 69.141593, 28.648279, 69.272088, 28.969614, 69.419574);
	patternContext.bezierCurveTo(29.559384, 69.690265, 29.742707, 69.881523, 29.333363, 69.799068);
	patternContext.bezierCurveTo(29.158184, 69.763778, 29.080519, 69.796068, 28.955476, 69.956175);
	patternContext.bezierCurveTo(28.747182, 70.222874, 26.307087, 75.763183, 26.307087, 75.969422);
	patternContext.bezierCurveTo(26.307087, 76.057582, 26.376657, 76.193128, 26.461695, 76.270634);
	patternContext.bezierCurveTo(26.616655, 76.411875, 26.667001, 76.549852, 26.558325, 76.535455);
	patternContext.bezierCurveTo(26.526435, 76.531255, 26.110714, 76.349905, 25.634495, 76.132509);
	patternContext.moveTo(55.373435, 75.627574);
	patternContext.bezierCurveTo(55.373435, 75.595054, 55.443005, 75.524683, 55.528044, 75.471198);
	patternContext.bezierCurveTo(55.613074, 75.417718, 55.682652, 75.294223, 55.682652, 75.196775);
	patternContext.bezierCurveTo(55.682652, 74.975656, 53.022964, 69.485632, 52.795908, 69.238072);
	patternContext.bezierCurveTo(52.672809, 69.103856, 52.575483, 69.067930, 52.419890, 69.099271);
	patternContext.bezierCurveTo(51.940145, 69.195911, 52.190045, 68.988559, 53.074675, 68.555981);
	patternContext.bezierCurveTo(53.878472, 68.162929, 54.078722, 68.095698, 54.443581, 68.096391);
	patternContext.bezierCurveTo(55.019761, 68.097491, 55.383191, 68.289046, 55.991868, 68.912481);
	patternContext.bezierCurveTo(56.890602, 69.833005, 57.679527, 71.435930, 57.863254, 72.714733);
	patternContext.bezierCurveTo(57.971309, 73.466828, 57.902094, 73.933971, 57.615074, 74.389799);
	patternContext.bezierCurveTo(57.416140, 74.705732, 57.279463, 74.803656, 56.459932, 75.217416);
	patternContext.bezierCurveTo(55.543987, 75.679853, 55.373435, 75.744237, 55.373435, 75.627574);
	patternContext.moveTo(57.002768, 74.446969);
	patternContext.bezierCurveTo(57.282918, 74.164812, 57.299441, 73.802974, 57.070658, 72.960119);
	patternContext.bezierCurveTo(56.867602, 72.212039, 56.036145, 70.478174, 55.519552, 69.725545);
	patternContext.bezierCurveTo(54.882632, 68.797609, 54.420451, 68.479642, 53.911808, 68.619459);
	patternContext.bezierCurveTo(53.759064, 68.661449, 53.625047, 68.704169, 53.613990, 68.714389);
	patternContext.bezierCurveTo(53.569440, 68.755599, 56.334908, 74.336740, 56.480465, 74.499372);
	patternContext.bezierCurveTo(56.682766, 74.725405, 56.731129, 74.720553, 57.002768, 74.446972);
	patternContext.moveTo(18.904511, 72.806389);
	patternContext.bezierCurveTo(18.474016, 72.542034, 18.329864, 72.224797, 18.367731, 71.625090);
	patternContext.bezierCurveTo(18.410971, 70.940225, 18.617045, 70.538052, 20.181350, 68.085584);
	patternContext.bezierCurveTo(20.867702, 67.009543, 21.452503, 66.035884, 21.480909, 65.921896);
	patternContext.bezierCurveTo(21.516469, 65.779221, 21.491999, 65.669514, 21.402399, 65.569797);
	patternContext.bezierCurveTo(21.323949, 65.482497, 21.302809, 65.405924, 21.349179, 65.377061);
	patternContext.bezierCurveTo(21.450882, 65.313751, 23.001076, 66.329207, 22.944206, 66.421882);
	patternContext.bezierCurveTo(22.918146, 66.464342, 22.822128, 66.457802, 22.708918, 66.405852);
	patternContext.bezierCurveTo(22.544941, 66.330602, 22.489363, 66.344852, 22.319353, 66.505712);
	patternContext.bezierCurveTo(22.091992, 66.720837, 19.762895, 70.339350, 19.375516, 71.079293);
	patternContext.bezierCurveTo(19.041548, 71.717215, 19.022993, 72.174553, 19.321486, 72.411029);
	patternContext.bezierCurveTo(19.756832, 72.755925, 20.343355, 72.509069, 20.962289, 71.720453);
	patternContext.bezierCurveTo(21.283594, 71.311062, 23.336557, 68.117200, 23.552555, 67.690693);
	patternContext.bezierCurveTo(23.711155, 67.377523, 23.713879, 67.092936, 23.559555, 66.963905);
	patternContext.bezierCurveTo(23.489295, 66.905175, 23.468765, 66.835591, 23.509585, 66.794480);
	patternContext.bezierCurveTo(23.550405, 66.753370, 23.789866, 66.860210, 24.092642, 67.054621);
	patternContext.bezierCurveTo(24.620825, 67.393764, 24.751139, 67.565106, 24.416570, 67.480533);
	patternContext.bezierCurveTo(24.099096, 67.400283, 23.760951, 67.794672, 22.668046, 69.519891);
	patternContext.bezierCurveTo(22.106349, 70.406567, 21.524189, 71.307208, 21.374358, 71.521317);
	patternContext.bezierCurveTo(20.508726, 72.758303, 19.597952, 73.232190, 18.904548, 72.806389);
	patternContext.moveTo(15.821728, 70.385549);
	patternContext.bezierCurveTo(15.444930, 70.082925, 15.104174, 69.803584, 15.064491, 69.764791);
	patternContext.bezierCurveTo(14.945067, 69.648043, 15.073091, 69.594916, 15.247443, 69.688881);
	patternContext.bezierCurveTo(15.375327, 69.757811, 15.455310, 69.749471, 15.621258, 69.649911);
	patternContext.bezierCurveTo(15.737374, 69.580241, 16.528116, 68.643622, 17.378461, 67.568524);
	patternContext.bezierCurveTo(19.933820, 64.337763, 19.897493, 64.394414, 19.615245, 64.080300);
	patternContext.bezierCurveTo(19.548695, 64.006240, 19.524705, 63.926694, 19.561915, 63.903529);
	patternContext.bezierCurveTo(19.628945, 63.861809, 21.066490, 64.970708, 21.113478, 65.100384);
	patternContext.bezierCurveTo(21.126908, 65.137454, 21.013067, 65.147384, 20.860491, 65.122444);
	patternContext.bezierCurveTo(20.653021, 65.088534, 20.541271, 65.114144, 20.417249, 65.223828);
	patternContext.bezierCurveTo(20.261264, 65.361839, 16.829910, 69.663411, 16.544447, 70.078801);
	patternContext.bezierCurveTo(16.379783, 70.318412, 16.375912, 70.534419, 16.533147, 70.709407);
	patternContext.bezierCurveTo(16.602487, 70.786567, 16.622687, 70.863636, 16.580477, 70.889912);
	patternContext.bezierCurveTo(16.539967, 70.915132, 16.198524, 70.688164, 15.821726, 70.385540);
	patternContext.moveTo(13.316986, 68.410017);
	patternContext.bezierCurveTo(13.086695, 68.283830, 12.958337, 68.058957, 12.870858, 67.628433);
	patternContext.bezierCurveTo(12.810418, 67.330980, 12.794858, 67.317395, 12.524129, 67.325752);
	patternContext.lineTo(12.240679, 67.334452);
	patternContext.lineTo(12.697109, 66.819628);
	patternContext.bezierCurveTo(12.948145, 66.536475, 13.386922, 66.077070, 13.672168, 65.798729);
	patternContext.lineTo(14.190798, 65.292654);
	patternContext.lineTo(13.858150, 65.794573);
	patternContext.bezierCurveTo(13.033125, 67.039419, 12.987654, 68.134459, 13.760990, 68.134459);
	patternContext.bezierCurveTo(14.104234, 68.134459, 14.398858, 67.975085, 14.705174, 67.623712);
	patternContext.bezierCurveTo(15.077726, 67.196360, 15.120900, 67.027388, 15.171476, 65.798729);
	patternContext.bezierCurveTo(15.215036, 64.740578, 15.233436, 64.636589, 15.464991, 64.140235);
	patternContext.bezierCurveTo(15.927892, 63.147973, 17.011000, 62.295134, 17.808272, 62.295134);
	patternContext.bezierCurveTo(18.293374, 62.295134, 18.553400, 62.548129, 18.624703, 63.089490);
	patternContext.bezierCurveTo(18.681833, 63.523240, 18.815460, 63.629188, 19.043381, 63.421445);
	patternContext.bezierCurveTo(19.126831, 63.345385, 19.195110, 63.309065, 19.195110, 63.340735);
	patternContext.bezierCurveTo(19.195110, 63.416725, 17.631373, 65.106178, 17.594971, 65.069514);
	patternContext.bezierCurveTo(17.579501, 65.053934, 17.690631, 64.852518, 17.841912, 64.621917);
	patternContext.bezierCurveTo(18.108323, 64.215830, 18.344764, 63.588633, 18.344764, 63.288029);
	patternContext.bezierCurveTo(18.344764, 63.116994, 18.204337, 62.826305, 18.081954, 62.744002);
	patternContext.bezierCurveTo(17.766913, 62.532138, 17.104029, 62.848606, 16.789617, 63.360980);
	patternContext.bezierCurveTo(16.628138, 63.624128, 16.605424, 63.778576, 16.563086, 64.901269);
	patternContext.bezierCurveTo(16.519716, 66.051203, 16.499256, 66.184468, 16.302270, 66.600178);
	patternContext.bezierCurveTo(15.695512, 67.880615, 14.107675, 68.843218, 13.316988, 68.409963);
	patternContext.moveTo(11.314146, 66.176550);
	patternContext.bezierCurveTo(11.014293, 65.827641, 10.768959, 65.512318, 10.768959, 65.475830);
	patternContext.bezierCurveTo(10.768959, 65.383590, 10.876227, 65.392950, 10.976494, 65.493940);
	patternContext.bezierCurveTo(11.153796, 65.672511, 11.422882, 65.522350, 11.825439, 65.020202);
	patternContext.bezierCurveTo(12.487343, 64.194543, 12.481176, 64.250673, 11.973917, 63.668761);
	patternContext.lineTo(11.534307, 63.164453);
	patternContext.lineTo(11.055002, 63.436463);
	patternContext.bezierCurveTo(10.272146, 63.880742, 10.001783, 64.195280, 10.154968, 64.483557);
	patternContext.bezierCurveTo(10.340272, 64.832280, 10.094148, 64.759925, 9.747310, 64.363712);
	patternContext.bezierCurveTo(9.281677, 63.831797, 9.260145, 63.737801, 9.609397, 63.761659);
	patternContext.bezierCurveTo(9.946782, 63.784709, 10.252387, 63.637353, 13.630464, 61.822816);
	patternContext.bezierCurveTo(15.079290, 61.044579, 16.276155, 60.420819, 16.290165, 60.436683);
	patternContext.bezierCurveTo(16.304175, 60.452553, 15.515926, 61.551643, 14.538500, 62.879116);
	patternContext.bezierCurveTo(12.358647, 65.839647, 11.983786, 66.400486, 12.028253, 66.634766);
	patternContext.bezierCurveTo(12.090563, 66.963074, 11.866560, 66.819338, 11.314146, 66.176550);
	patternContext.moveTo(13.467845, 62.802145);
	patternContext.bezierCurveTo(13.863838, 62.261800, 14.175199, 61.808246, 14.159759, 61.794246);
	patternContext.bezierCurveTo(14.123649, 61.761506, 11.932626, 62.943746, 11.930284, 62.997239);
	patternContext.bezierCurveTo(11.926584, 63.082379, 12.640112, 63.851657, 12.692539, 63.819023);
	patternContext.bezierCurveTo(12.722969, 63.800083, 13.071853, 63.342489, 13.467845, 62.802145);
	patternContext.moveTo(8.836356, 63.349150);
	patternContext.bezierCurveTo(8.836356, 63.329330, 9.623637, 62.066805, 10.585869, 60.543542);
	patternContext.bezierCurveTo(11.548102, 59.020278, 12.322110, 57.762158, 12.305886, 57.747719);
	patternContext.bezierCurveTo(12.259436, 57.706379, 8.370484, 60.476156, 8.079430, 60.757876);
	patternContext.bezierCurveTo(7.852091, 60.977924, 7.823282, 61.048211, 7.856199, 61.302497);
	patternContext.bezierCurveTo(7.880989, 61.494025, 7.863299, 61.593615, 7.804719, 61.591998);
	patternContext.bezierCurveTo(7.707059, 61.589298, 7.016241, 60.598781, 7.072504, 60.542116);
	patternContext.bezierCurveTo(7.091594, 60.522896, 7.216585, 60.548716, 7.350269, 60.599566);
	patternContext.bezierCurveTo(7.696783, 60.731297, 7.820956, 60.659586, 10.429284, 58.821465);
	patternContext.bezierCurveTo(12.767632, 57.173600, 13.068723, 56.899762, 12.991218, 56.491417);
	patternContext.bezierCurveTo(12.969478, 56.376861, 12.990986, 56.300142, 13.044928, 56.300142);
	patternContext.bezierCurveTo(13.144028, 56.300142, 13.810534, 57.213949, 13.808000, 57.346352);
	patternContext.bezierCurveTo(13.807126, 57.391852, 13.222951, 58.332664, 12.509826, 59.437047);
	patternContext.bezierCurveTo(11.796701, 60.541430, 11.226329, 61.458197, 11.242333, 61.474308);
	patternContext.bezierCurveTo(11.282993, 61.515238, 14.065665, 59.547847, 14.335843, 59.287145);
	patternContext.bezierCurveTo(14.503327, 59.125537, 14.556857, 59.001983, 14.556857, 58.777021);
	patternContext.bezierCurveTo(14.556857, 58.613745, 14.582947, 58.481412, 14.614837, 58.482948);
	patternContext.bezierCurveTo(14.705427, 58.487348, 15.323851, 59.439174, 15.281224, 59.508642);
	patternContext.bezierCurveTo(15.260314, 59.542712, 15.178037, 59.535452, 15.098378, 59.492512);
	patternContext.bezierCurveTo(15.018718, 59.449572, 14.870763, 59.414442, 14.769588, 59.414442);
	patternContext.bezierCurveTo(14.555578, 59.414442, 14.327888, 59.564804, 11.234736, 61.748792);
	patternContext.bezierCurveTo(9.960056, 62.648807, 8.898961, 63.385183, 8.876745, 63.385183);
	patternContext.bezierCurveTo(8.854525, 63.385183, 8.836355, 63.368963, 8.836355, 63.349143);
	patternContext.moveTo(5.707438, 58.250398);
	patternContext.bezierCurveTo(5.306743, 57.445714, 5.243227, 57.125564, 5.552580, 57.469843);
	patternContext.bezierCurveTo(5.628630, 57.554473, 5.762739, 57.623722, 5.850604, 57.623722);
	patternContext.bezierCurveTo(6.036342, 57.623722, 11.514578, 54.954379, 11.404607, 54.917459);
	patternContext.bezierCurveTo(11.364097, 54.903859, 9.882604, 55.257733, 8.112399, 55.703846);
	patternContext.bezierCurveTo(6.342195, 56.149959, 4.895849, 56.492903, 4.898297, 56.465944);
	patternContext.bezierCurveTo(4.900697, 56.438984, 6.067103, 55.492399, 7.490202, 54.362421);
	patternContext.bezierCurveTo(8.913302, 53.232442, 10.063419, 52.293575, 10.046021, 52.276051);
	patternContext.bezierCurveTo(10.028621, 52.258531, 8.852436, 52.817483, 7.432276, 53.518175);
	patternContext.bezierCurveTo(4.810789, 54.811588, 4.446627, 55.045813, 4.533999, 55.382316);
	patternContext.bezierCurveTo(4.553859, 55.458816, 4.539699, 55.540332, 4.502559, 55.563459);
	patternContext.bezierCurveTo(4.430579, 55.608269, 3.853456, 54.519150, 3.915873, 54.456286);
	patternContext.bezierCurveTo(3.936173, 54.435846, 4.043172, 54.478766, 4.153650, 54.551676);
	patternContext.bezierCurveTo(4.291804, 54.642846, 4.431310, 54.668766, 4.600462, 54.634696);
	patternContext.bezierCurveTo(4.940353, 54.566236, 10.069683, 52.044308, 10.291778, 51.836463);
	patternContext.bezierCurveTo(10.419001, 51.717403, 10.462539, 51.605328, 10.440450, 51.453749);
	patternContext.bezierCurveTo(10.381350, 51.048183, 10.579177, 51.237944, 10.904754, 51.899117);
	patternContext.lineTo(11.229614, 52.558836);
	patternContext.lineTo(9.292527, 54.096560);
	patternContext.bezierCurveTo(8.227129, 54.942307, 7.388350, 55.645332, 7.428573, 55.658835);
	patternContext.bezierCurveTo(7.468793, 55.672335, 8.532998, 55.417471, 9.793467, 55.092463);
	patternContext.bezierCurveTo(11.053935, 54.767455, 12.111006, 54.517584, 12.142512, 54.537196);
	patternContext.bezierCurveTo(12.242869, 54.599666, 12.810078, 55.827516, 12.761282, 55.876663);
	patternContext.bezierCurveTo(12.735522, 55.902613, 12.638956, 55.847803, 12.546695, 55.754885);
	patternContext.bezierCurveTo(12.421468, 55.628761, 12.326755, 55.598929, 12.173058, 55.637198);
	patternContext.bezierCurveTo(11.829761, 55.722678, 6.569044, 58.326501, 6.376082, 58.506448);
	patternContext.bezierCurveTo(6.241853, 58.631624, 6.207075, 58.728475, 6.238867, 58.888573);
	patternContext.bezierCurveTo(6.325717, 59.325956, 6.119990, 59.078902, 5.707436, 58.250404);
	patternContext.moveTo(69.817339, 52.557694);
	patternContext.bezierCurveTo(68.304107, 52.368760, 67.006491, 51.904850, 64.246667, 50.566129);
	patternContext.bezierCurveTo(62.119008, 49.534054, 61.076183, 49.137904, 59.982231, 48.946147);
	patternContext.bezierCurveTo(57.923469, 48.585270, 55.887933, 49.065345, 53.617360, 50.447283);
	patternContext.lineTo(52.827587, 50.927962);
	patternContext.lineTo(50.098616, 50.927962);
	patternContext.lineTo(47.369645, 50.927962);
	patternContext.lineTo(42.153024, 42.270910);
	patternContext.lineTo(36.936403, 33.613859);
	patternContext.lineTo(36.914013, 33.009482);
	patternContext.lineTo(36.891623, 32.405105);
	patternContext.lineTo(36.445816, 32.382005);
	patternContext.lineTo(36.000009, 32.358905);
	patternContext.lineTo(37.994967, 29.534266);
	patternContext.lineTo(39.989924, 26.709626);
	patternContext.lineTo(39.989924, 26.011206);
	patternContext.lineTo(39.989924, 25.312786);
	patternContext.lineTo(40.299140, 25.312786);
	patternContext.lineTo(40.608357, 25.312786);
	patternContext.lineTo(40.608357, 25.980941);
	patternContext.lineTo(40.608357, 26.649095);
	patternContext.lineTo(42.697068, 29.504001);
	patternContext.lineTo(44.785779, 32.358905);
	patternContext.lineTo(44.320455, 32.382085);
	patternContext.lineTo(43.855130, 32.405265);
	patternContext.lineTo(43.855130, 36.489079);
	patternContext.lineTo(43.855130, 40.572891);
	patternContext.lineTo(44.357607, 40.572891);
	patternContext.lineTo(44.860083, 40.572891);
	patternContext.lineTo(44.860083, 39.443955);
	patternContext.lineTo(44.860083, 38.315019);
	patternContext.lineTo(44.589519, 38.315019);
	patternContext.bezierCurveTo(44.440708, 38.315019, 44.318954, 38.302859, 44.318954, 38.287989);
	patternContext.bezierCurveTo(44.318954, 38.273119, 44.925642, 36.968034, 45.667148, 35.387791);
	patternContext.lineTo(47.015342, 32.514620);
	patternContext.lineTo(47.483795, 32.491440);
	patternContext.lineTo(47.952248, 32.468260);
	patternContext.lineTo(47.952248, 30.253034);
	patternContext.lineTo(47.952248, 28.037806);
	patternContext.lineTo(47.758988, 28.037806);
	patternContext.lineTo(47.565727, 28.037806);
	patternContext.lineTo(47.565727, 26.273024);
	patternContext.lineTo(47.565727, 24.508243);
	patternContext.lineTo(48.083363, 23.528541);
	patternContext.lineTo(48.600997, 22.548839);
	patternContext.lineTo(49.268528, 17.020945);
	patternContext.bezierCurveTo(49.829861, 12.372493, 49.919687, 11.473494, 49.833151, 11.370133);
	patternContext.bezierCurveTo(49.567237, 11.052516, 49.847561, 10.532298, 50.232233, 10.629535);
	patternContext.bezierCurveTo(50.527970, 10.704295, 50.646666, 11.021661, 50.484995, 11.305373);
	patternContext.bezierCurveTo(50.362962, 11.519528, 50.387855, 11.776249, 51.038419, 17.012087);
	patternContext.lineTo(51.719626, 22.494559);
	patternContext.lineTo(52.271017, 23.546773);
	patternContext.lineTo(52.822408, 24.598987);
	patternContext.lineTo(52.822408, 26.318396);
	patternContext.lineTo(52.822408, 28.037806);
	patternContext.lineTo(52.590495, 28.037806);
	patternContext.lineTo(52.358583, 28.037806);
	patternContext.lineTo(52.358583, 30.256749);
	patternContext.lineTo(52.358583, 32.475693);
	patternContext.lineTo(53.247580, 32.475693);
	patternContext.lineTo(54.136578, 32.475693);
	patternContext.lineTo(54.136578, 30.256749);
	patternContext.lineTo(54.136578, 28.037806);
	patternContext.lineTo(53.943317, 28.037806);
	patternContext.lineTo(53.750057, 28.037806);
	patternContext.lineTo(53.750057, 26.249702);
	patternContext.lineTo(53.750057, 24.461599);
	patternContext.lineTo(54.258879, 23.505219);
	patternContext.lineTo(54.767701, 22.548839);
	patternContext.lineTo(55.431987, 17.032266);
	patternContext.bezierCurveTo(55.960738, 12.641242, 56.077737, 11.485799, 56.005422, 11.369177);
	patternContext.bezierCurveTo(55.695609, 10.869534, 56.207856, 10.348067, 56.610309, 10.753402);
	patternContext.bezierCurveTo(56.796118, 10.940540, 56.808870, 11.165158, 56.643159, 11.332053);
	patternContext.bezierCurveTo(56.532354, 11.443651, 56.580979, 11.952366, 57.183780, 16.988121);
	patternContext.lineTo(57.846157, 22.521560);
	patternContext.lineTo(58.387793, 23.498512);
	patternContext.lineTo(58.929430, 24.475463);
	patternContext.lineTo(58.929430, 26.256634);
	patternContext.lineTo(58.929430, 28.037806);
	patternContext.lineTo(58.736170, 28.037806);
	patternContext.lineTo(58.542909, 28.037806);
	patternContext.lineTo(58.542909, 30.256749);
	patternContext.lineTo(58.542909, 32.475693);
	patternContext.lineTo(60.920011, 32.475927);
	patternContext.lineTo(63.297113, 32.476160);
	patternContext.lineTo(64.398696, 35.342518);
	patternContext.bezierCurveTo(65.004567, 36.918967, 65.500280, 38.232722, 65.500280, 38.261924);
	patternContext.bezierCurveTo(65.500280, 38.291124, 65.378526, 38.315014, 65.229716, 38.315014);
	patternContext.lineTo(64.959151, 38.315014);
	patternContext.lineTo(64.959151, 39.443950);
	patternContext.lineTo(64.959151, 40.572886);
	patternContext.lineTo(65.809497, 40.572886);
	patternContext.lineTo(66.659842, 40.572886);
	patternContext.lineTo(66.659842, 39.443950);
	patternContext.lineTo(66.659842, 38.315014);
	patternContext.lineTo(66.381007, 38.315014);
	patternContext.bezierCurveTo(66.163853, 38.315014, 66.112100, 38.288954, 66.147052, 38.197219);
	patternContext.bezierCurveTo(66.171732, 38.132429, 66.596974, 37.063835, 67.092024, 35.822560);
	patternContext.lineTo(67.992114, 33.565695);
	patternContext.lineTo(68.678801, 33.565695);
	patternContext.lineTo(69.365486, 33.565695);
	patternContext.lineTo(69.365486, 32.977896);
	patternContext.bezierCurveTo(69.365486, 32.631719, 69.321646, 32.303675, 69.258840, 32.179855);
	patternContext.bezierCurveTo(69.012259, 31.693744, 69.023128, 31.481759, 69.319420, 30.998290);
	patternContext.bezierCurveTo(69.615716, 30.514814, 69.650434, 30.297379, 69.507858, 29.818096);
	patternContext.bezierCurveTo(69.439818, 29.589367, 69.440048, 29.444055, 69.508816, 29.212886);
	patternContext.bezierCurveTo(69.601796, 28.900304, 70.052469, 28.427089, 70.257174, 28.427089);
	patternContext.bezierCurveTo(70.427415, 28.427089, 70.424866, 25.844488, 70.254474, 25.702070);
	patternContext.bezierCurveTo(70.103373, 25.575769, 70.106210, 25.278586, 70.259974, 25.123699);
	patternContext.bezierCurveTo(70.403733, 24.978910, 70.764735, 24.962499, 70.896076, 25.094779);
	patternContext.bezierCurveTo(71.025659, 25.225290, 71.011888, 25.585881, 70.872886, 25.702069);
	patternContext.bezierCurveTo(70.778466, 25.780999, 70.756930, 26.035480, 70.756930, 27.072529);
	patternContext.lineTo(70.756930, 28.346065);
	patternContext.lineTo(71.069179, 28.506504);
	patternContext.bezierCurveTo(71.240916, 28.594744, 71.451574, 28.779395, 71.537307, 28.916839);
	patternContext.bezierCurveTo(71.694368, 29.168631, 71.698914, 29.382112, 71.565007, 30.217814);
	patternContext.bezierCurveTo(71.529197, 30.441302, 71.570807, 30.566868, 71.796221, 30.915908);
	patternContext.bezierCurveTo(72.111585, 31.404182, 72.136263, 31.661724, 71.914794, 32.153294);
	patternContext.bezierCurveTo(71.809845, 32.386236, 71.761883, 32.660971, 71.761883, 33.029193);
	patternContext.lineTo(71.761883, 33.565694);
	patternContext.lineTo(74.486854, 33.567094);
	patternContext.lineTo(77.211824, 33.568494);
	patternContext.lineTo(78.100821, 35.958574);
	patternContext.lineTo(78.989819, 38.348654);
	patternContext.lineTo(78.978899, 40.064193);
	patternContext.bezierCurveTo(78.957669, 43.401067, 78.526233, 46.603505, 77.660155, 49.853059);
	patternContext.lineTo(77.376007, 50.919193);
	patternContext.lineTo(76.619418, 51.272871);
	patternContext.bezierCurveTo(75.599830, 51.749489, 74.223961, 52.203648, 73.192006, 52.404221);
	patternContext.bezierCurveTo(72.211468, 52.594800, 70.674227, 52.664732, 69.817310, 52.557742);
	patternContext.moveTo(2.841446, 51.338131);
	patternContext.bezierCurveTo(2.727423, 50.962662, 2.589369, 50.506514, 2.534659, 50.324468);
	patternContext.bezierCurveTo(2.426609, 49.964933, 2.525359, 49.774907, 2.649437, 50.103597);
	patternContext.bezierCurveTo(2.772493, 50.429579, 3.019090, 50.425838, 4.166703, 50.080577);
	patternContext.bezierCurveTo(5.096664, 49.800801, 5.335370, 49.691315, 6.160094, 49.166277);
	patternContext.bezierCurveTo(8.381022, 47.752385, 8.979727, 47.328217, 9.072340, 47.103031);
	patternContext.bezierCurveTo(9.122930, 46.980011, 9.187847, 46.879358, 9.216592, 46.879358);
	patternContext.bezierCurveTo(9.288512, 46.879358, 9.763846, 48.529498, 9.714903, 48.609257);
	patternContext.bezierCurveTo(9.693243, 48.644557, 9.611496, 48.593847, 9.533243, 48.496579);
	patternContext.bezierCurveTo(9.339701, 48.256006, 9.248772, 48.296589, 7.562210, 49.376270);
	patternContext.lineTo(6.172109, 50.266167);
	patternContext.lineTo(7.819008, 50.287197);
	patternContext.bezierCurveTo(9.645848, 50.310527, 9.861549, 50.270037, 9.904422, 49.895768);
	patternContext.bezierCurveTo(9.917872, 49.778326, 9.970492, 49.682235, 10.021344, 49.682235);
	patternContext.bezierCurveTo(10.119674, 49.682235, 10.433572, 50.668838, 10.359105, 50.743837);
	patternContext.bezierCurveTo(10.334915, 50.768197, 10.235569, 50.731997, 10.138324, 50.663397);
	patternContext.bezierCurveTo(9.986578, 50.556348, 9.660578, 50.538669, 7.838375, 50.538669);
	patternContext.lineTo(5.715233, 50.538669);
	patternContext.lineTo(4.669548, 50.856723);
	patternContext.bezierCurveTo(4.094422, 51.031654, 3.529420, 51.223967, 3.413988, 51.284087);
	patternContext.bezierCurveTo(3.188061, 51.401755, 3.084668, 51.611955, 3.158020, 51.804476);
	patternContext.bezierCurveTo(3.183140, 51.870406, 3.168840, 51.946055, 3.126230, 51.972577);
	patternContext.bezierCurveTo(3.081430, 52.000457, 2.961334, 51.732902, 2.841448, 51.338126);
	patternContext.moveTo(4.764920, 47.457332);
	patternContext.bezierCurveTo(4.669500, 47.206884, 4.381688, 47.187937, 3.292516, 47.360402);
	patternContext.lineTo(2.236237, 47.527656);
	patternContext.lineTo(1.986285, 47.236433);
	patternContext.bezierCurveTo(1.458012, 46.620935, 1.268073, 45.774716, 1.532311, 45.213888);
	patternContext.bezierCurveTo(1.872342, 44.492194, 2.907192, 43.810543, 4.141584, 43.495171);
	patternContext.bezierCurveTo(6.293632, 42.945350, 8.416309, 43.343984, 8.958388, 44.399755);
	patternContext.bezierCurveTo(9.132444, 44.738752, 9.113529, 45.316919, 8.915598, 45.707674);
	patternContext.bezierCurveTo(8.713166, 46.107315, 8.743862, 46.216117, 9.080950, 46.293770);
	patternContext.bezierCurveTo(9.298693, 46.343930, 9.176390, 46.381420, 8.295227, 46.534618);
	patternContext.bezierCurveTo(6.588072, 46.831424, 6.643438, 46.831261, 7.251621, 46.537718);
	patternContext.bezierCurveTo(8.038869, 46.157730, 8.438744, 45.834422, 8.613446, 45.436651);
	patternContext.bezierCurveTo(8.750020, 45.125691, 8.753445, 45.070140, 8.651236, 44.823761);
	patternContext.bezierCurveTo(8.575486, 44.641173, 8.429797, 44.494207, 8.204446, 44.373059);
	patternContext.bezierCurveTo(7.893198, 44.205733, 7.784457, 44.193782, 6.633190, 44.200368);
	patternContext.bezierCurveTo(5.670202, 44.205868, 5.216592, 44.245778, 4.584631, 44.380586);
	patternContext.bezierCurveTo(3.564307, 44.598232, 2.719394, 44.881222, 2.364272, 45.124262);
	patternContext.bezierCurveTo(1.804665, 45.507248, 1.642794, 46.061796, 1.976541, 46.452578);
	patternContext.lineTo(2.151399, 46.657318);
	patternContext.lineTo(3.153594, 46.493260);
	patternContext.bezierCurveTo(4.205155, 46.321122, 4.507327, 46.198362, 4.507327, 45.943296);
	patternContext.bezierCurveTo(4.507327, 45.858636, 4.541447, 45.789375, 4.583157, 45.789375);
	patternContext.bezierCurveTo(4.666807, 45.789375, 4.697054, 45.899993, 4.817316, 46.645810);
	patternContext.bezierCurveTo(4.862196, 46.924151, 4.917936, 47.248234, 4.941178, 47.365993);
	patternContext.bezierCurveTo(4.986778, 47.597044, 4.845958, 47.670036, 4.764921, 47.457353);
	patternContext.moveTo(7.754098, 36.165465);
	patternContext.bezierCurveTo(6.531203, 35.441107, 5.501045, 34.915122, 4.971150, 34.744528);
	patternContext.bezierCurveTo(3.553209, 34.288039, 2.497418, 34.419738, 2.497418, 35.053101);
	patternContext.bezierCurveTo(2.497418, 35.214575, 2.572138, 35.325743, 2.787308, 35.484420);
	patternContext.bezierCurveTo(3.227452, 35.808997, 3.240003, 35.826235, 2.981907, 35.751684);
	patternContext.bezierCurveTo(2.016954, 35.472957, 1.306934, 34.928819, 1.306934, 34.468031);
	patternContext.bezierCurveTo(1.306934, 34.010888, 1.643408, 33.763512, 2.441212, 33.634109);
	patternContext.bezierCurveTo(3.438423, 33.472363, 4.846575, 33.974980, 6.473709, 35.073442);
	patternContext.bezierCurveTo(6.896203, 35.358662, 7.269444, 35.564263, 7.303135, 35.530332);
	patternContext.bezierCurveTo(7.336825, 35.496402, 7.373805, 35.208926, 7.385305, 34.891499);
	patternContext.lineTo(7.406225, 34.314359);
	patternContext.lineTo(7.097009, 34.128631);
	patternContext.bezierCurveTo(6.749015, 33.919613, 6.707815, 33.915270, 8.030593, 34.227041);
	patternContext.lineTo(8.886872, 34.428859);
	patternContext.lineTo(8.827602, 34.873180);
	patternContext.bezierCurveTo(8.649603, 36.207566, 8.583600, 36.602071, 8.538476, 36.601311);
	patternContext.bezierCurveTo(8.510976, 36.600848, 8.158007, 36.404719, 7.754093, 36.165468);
	patternContext.moveTo(8.063314, 33.464932);
	patternContext.bezierCurveTo(7.937780, 33.400972, 7.870054, 33.300786, 7.870054, 33.179060);
	patternContext.bezierCurveTo(7.870054, 33.029389, 7.955744, 32.949103, 8.295703, 32.780251);
	patternContext.bezierCurveTo(8.529810, 32.663974, 8.787712, 32.494987, 8.868819, 32.404723);
	patternContext.bezierCurveTo(8.998427, 32.260482, 9.003747, 32.217010, 8.912749, 32.045757);
	patternContext.bezierCurveTo(8.768881, 31.775012, 8.086511, 31.457955, 7.540326, 31.408074);
	patternContext.bezierCurveTo(6.596088, 31.321844, 5.724187, 31.810507, 5.504476, 32.549089);
	patternContext.bezierCurveTo(5.452796, 32.722830, 5.392582, 32.864981, 5.370676, 32.864981);
	patternContext.bezierCurveTo(5.301086, 32.864981, 2.074624, 31.454295, 2.018569, 31.399362);
	patternContext.bezierCurveTo(1.963789, 31.345672, 2.283860, 29.861955, 2.368649, 29.776558);
	patternContext.bezierCurveTo(2.451719, 29.692888, 3.579576, 30.249430, 3.578452, 30.373536);
	patternContext.bezierCurveTo(3.577452, 30.484186, 3.386700, 31.359365, 3.305144, 31.627502);
	patternContext.bezierCurveTo(3.251484, 31.803942, 3.952934, 32.082476, 4.044357, 31.921029);
	patternContext.bezierCurveTo(4.454558, 31.196638, 4.737083, 30.956881, 5.377712, 30.789514);
	patternContext.bezierCurveTo(5.931584, 30.644813, 6.467913, 30.658720, 7.154542, 30.835584);
	patternContext.bezierCurveTo(8.573312, 31.201043, 9.460841, 32.002545, 9.351995, 32.820040);
	patternContext.bezierCurveTo(9.271375, 33.425574, 8.622928, 33.750072, 8.063317, 33.464929);
	patternContext.moveTo(8.101964, 30.180946);
	patternContext.bezierCurveTo(6.576537, 29.935951, 4.636362, 29.207856, 3.599493, 28.491292);
	patternContext.bezierCurveTo(2.987669, 28.068470, 2.713324, 27.438869, 3.019359, 27.159928);
	patternContext.bezierCurveTo(3.547580, 26.678472, 4.895702, 26.759578, 6.865098, 27.391296);
	patternContext.bezierCurveTo(8.861143, 28.031564, 10.227827, 28.951734, 10.227827, 29.655379);
	patternContext.bezierCurveTo(10.227827, 29.893427, 9.900462, 30.132694, 9.459538, 30.216913);
	patternContext.bezierCurveTo(8.967957, 30.310803, 8.899173, 30.308983, 8.101964, 30.180943);
	patternContext.moveTo(9.752282, 29.759617);
	patternContext.bezierCurveTo(9.917014, 29.654474, 9.824552, 29.421379, 9.542051, 29.229640);
	patternContext.bezierCurveTo(9.250046, 29.031448, 4.612471, 27.474250, 3.884858, 27.330076);
	patternContext.bezierCurveTo(3.494330, 27.252696, 3.396678, 27.255296, 3.311347, 27.345346);
	patternContext.bezierCurveTo(3.143765, 27.522196, 3.300107, 27.764526, 3.705651, 27.956519);
	patternContext.bezierCurveTo(4.140709, 28.162485, 7.088972, 29.172722, 8.372528, 29.555648);
	patternContext.bezierCurveTo(9.295381, 29.830965, 9.575600, 29.872390, 9.752282, 29.759619);
	patternContext.moveTo(9.861113, 26.482966);
	patternContext.bezierCurveTo(9.486575, 26.311736, 9.145569, 25.998237, 9.145569, 25.825140);
	patternContext.bezierCurveTo(9.145569, 25.760470, 9.220269, 25.667288, 9.311577, 25.618073);
	patternContext.bezierCurveTo(9.546765, 25.491303, 9.981810, 25.637463, 10.388919, 25.980033);
	patternContext.bezierCurveTo(10.636367, 26.188251, 10.773982, 26.249417, 10.954986, 26.231639);
	patternContext.bezierCurveTo(11.150046, 26.212479, 11.198562, 26.169469, 11.218182, 25.998296);
	patternContext.bezierCurveTo(11.237612, 25.828754, 11.185642, 25.750781, 10.947617, 25.592381);
	patternContext.bezierCurveTo(10.369345, 25.207552, 5.516873, 22.899199, 5.286181, 22.899199);
	patternContext.bezierCurveTo(5.138240, 22.899199, 5.015263, 22.959529, 4.938656, 23.069682);
	patternContext.bezierCurveTo(4.873446, 23.163442, 4.796754, 23.216656, 4.768226, 23.187924);
	patternContext.bezierCurveTo(4.707936, 23.127194, 5.521809, 21.343241, 5.610134, 21.342525);
	patternContext.bezierCurveTo(5.642694, 21.342292, 5.661654, 21.443663, 5.652254, 21.567863);
	patternContext.bezierCurveTo(5.642854, 21.692062, 5.685794, 21.856007, 5.747654, 21.932185);
	patternContext.bezierCurveTo(5.809524, 22.008365, 6.914214, 22.589491, 8.202526, 23.223580);
	patternContext.bezierCurveTo(9.490838, 23.857669, 10.701659, 24.485087, 10.893240, 24.617842);
	patternContext.bezierCurveTo(11.775182, 25.228979, 11.982193, 26.169529, 11.311628, 26.518775);
	patternContext.bezierCurveTo(10.993696, 26.684361, 10.262126, 26.666301, 9.861109, 26.482965);
	patternContext.moveTo(11.975084, 24.437816);
	patternContext.bezierCurveTo(11.935704, 24.239531, 11.376631, 23.630549, 9.356407, 21.585397);
	patternContext.bezierCurveTo(7.943670, 20.155226, 6.839974, 19.002513, 6.903750, 19.023811);
	patternContext.bezierCurveTo(6.967530, 19.045111, 8.393787, 19.538434, 10.073219, 20.120087);
	patternContext.bezierCurveTo(13.595922, 21.340140, 13.725886, 21.378749, 13.933410, 21.266890);
	patternContext.bezierCurveTo(14.236591, 21.103471, 14.174742, 21.351240, 13.730623, 22.079251);
	patternContext.bezierCurveTo(13.269860, 22.834548, 13.119211, 22.983815, 13.197756, 22.607233);
	patternContext.bezierCurveTo(13.270896, 22.256583, 13.183586, 22.189143, 12.168568, 21.812213);
	patternContext.lineTo(11.548957, 21.582120);
	patternContext.lineTo(11.186463, 22.167882);
	patternContext.lineTo(10.823970, 22.753644);
	patternContext.lineTo(11.163657, 23.105137);
	patternContext.bezierCurveTo(11.350485, 23.298459, 11.653376, 23.546044, 11.836747, 23.655328);
	patternContext.bezierCurveTo(12.137497, 23.834565, 12.190496, 23.843732, 12.377876, 23.748938);
	patternContext.bezierCurveTo(12.492126, 23.691138, 12.611693, 23.631044, 12.643581, 23.615395);
	patternContext.bezierCurveTo(12.675471, 23.599745, 12.701561, 23.625095, 12.701561, 23.671715);
	patternContext.bezierCurveTo(12.701561, 23.778285, 12.139400, 24.689930, 12.073684, 24.689930);
	patternContext.bezierCurveTo(12.046994, 24.689930, 12.002624, 24.576480, 11.975084, 24.437820);
	patternContext.moveTo(10.878619, 21.954692);
	patternContext.bezierCurveTo(11.033905, 21.692143, 11.151029, 21.469875, 11.138891, 21.460761);
	patternContext.bezierCurveTo(11.095881, 21.428471, 8.824111, 20.641326, 8.773920, 20.641326);
	patternContext.bezierCurveTo(8.745870, 20.641326, 9.121832, 21.044240, 9.609394, 21.536690);
	patternContext.bezierCurveTo(10.096956, 22.029139, 10.518461, 22.432053, 10.546073, 22.432053);
	patternContext.bezierCurveTo(10.573683, 22.432053, 10.723331, 22.217240, 10.878619, 21.954692);
	patternContext.moveTo(14.247641, 20.968329);
	patternContext.bezierCurveTo(14.247641, 20.934069, 14.286841, 20.866565, 14.334751, 20.818314);
	patternContext.bezierCurveTo(14.558731, 20.592730, 14.311751, 20.320873, 12.526086, 18.827426);
	patternContext.bezierCurveTo(9.069819, 15.936773, 9.220232, 16.040797, 8.908097, 16.325297);
	patternContext.bezierCurveTo(8.827607, 16.398667, 8.755649, 16.416597, 8.727277, 16.370357);
	patternContext.bezierCurveTo(8.678837, 16.291417, 9.828991, 14.812531, 9.944084, 14.805767);
	patternContext.bezierCurveTo(9.979354, 14.803667, 9.985454, 14.906320, 9.957644, 15.033822);
	patternContext.bezierCurveTo(9.929834, 15.161325, 9.927824, 15.331452, 9.953144, 15.411882);
	patternContext.bezierCurveTo(9.994854, 15.544250, 12.150156, 17.420720, 12.189172, 17.358638);
	patternContext.bezierCurveTo(12.198272, 17.344188, 12.389449, 17.114341, 12.614059, 16.847857);
	patternContext.bezierCurveTo(12.838670, 16.581373, 13.002656, 16.331098, 12.978473, 16.291690);
	patternContext.bezierCurveTo(12.954293, 16.252280, 12.462752, 15.830908, 11.886165, 15.355304);
	patternContext.bezierCurveTo(11.089041, 14.697789, 10.784347, 14.490568, 10.614674, 14.490568);
	patternContext.bezierCurveTo(10.491944, 14.490568, 10.370028, 14.525608, 10.343751, 14.568428);
	patternContext.bezierCurveTo(10.284181, 14.665508, 10.150491, 14.670665, 10.150491, 14.575928);
	patternContext.bezierCurveTo(10.150491, 14.471135, 11.302213, 13.089181, 11.389546, 13.089181);
	patternContext.bezierCurveTo(11.490455, 13.089181, 11.484556, 13.193720, 11.377556, 13.301482);
	patternContext.bezierCurveTo(11.151281, 13.529377, 11.405386, 13.795165, 13.610169, 15.636763);
	patternContext.bezierCurveTo(16.239274, 17.832785, 16.346291, 17.916357, 16.529290, 17.916357);
	patternContext.bezierCurveTo(16.606960, 17.916357, 16.730678, 17.861517, 16.804209, 17.794499);
	patternContext.bezierCurveTo(16.883069, 17.722619, 16.956951, 17.703679, 16.984343, 17.748319);
	patternContext.bezierCurveTo(17.036093, 17.832659, 15.901611, 19.239938, 15.781865, 19.239938);
	patternContext.bezierCurveTo(15.740125, 19.239938, 15.728845, 19.167338, 15.756815, 19.078604);
	patternContext.bezierCurveTo(15.864097, 18.738167, 15.710995, 18.545122, 14.592022, 17.609950);
	patternContext.bezierCurveTo(13.973862, 17.093327, 13.436344, 16.670635, 13.397539, 16.670635);
	patternContext.bezierCurveTo(13.327409, 16.670635, 12.544082, 17.605108, 12.550041, 17.681658);
	patternContext.bezierCurveTo(12.552941, 17.718558, 12.787421, 17.914089, 14.348886, 19.181545);
	patternContext.bezierCurveTo(14.884513, 19.616319, 15.247810, 19.748087, 15.368524, 19.551369);
	patternContext.bezierCurveTo(15.424334, 19.460419, 15.561784, 19.446699, 15.561784, 19.532079);
	patternContext.bezierCurveTo(15.561784, 19.564289, 15.298631, 19.914653, 14.976999, 20.310656);
	patternContext.bezierCurveTo(14.446450, 20.963886, 14.247614, 21.143185, 14.247614, 20.968375);
	patternContext.moveTo(17.185198, 17.531614);
	patternContext.bezierCurveTo(17.185198, 17.485104, 17.228108, 17.377848, 17.280548, 17.293270);
	patternContext.bezierCurveTo(17.358998, 17.166750, 17.351268, 17.094480, 17.236918, 16.885573);
	patternContext.bezierCurveTo(17.087743, 16.613046, 13.138433, 12.260360, 12.916114, 12.123448);
	patternContext.bezierCurveTo(12.821704, 12.065308, 12.714644, 12.067258, 12.549253, 12.130148);
	patternContext.bezierCurveTo(12.420804, 12.178978, 12.299694, 12.192838, 12.280122, 12.160938);
	patternContext.bezierCurveTo(12.228782, 12.077278, 13.797112, 10.673085, 14.139479, 10.496183);
	patternContext.bezierCurveTo(14.656274, 10.229152, 15.278596, 10.426333, 15.992210, 11.083201);
	patternContext.bezierCurveTo(16.554154, 11.600465, 16.902163, 12.303788, 16.864497, 12.846092);
	patternContext.lineTo(16.837327, 13.237239);
	patternContext.lineTo(18.262345, 13.990877);
	patternContext.bezierCurveTo(19.046104, 14.405378, 19.792497, 14.752844, 19.920995, 14.763025);
	patternContext.bezierCurveTo(20.049492, 14.773205, 20.160823, 14.812425, 20.168396, 14.850165);
	patternContext.bezierCurveTo(20.175996, 14.887915, 20.002492, 15.083209, 19.782893, 15.284155);
	patternContext.lineTo(19.383622, 15.649513);
	patternContext.lineTo(17.801258, 14.805193);
	patternContext.bezierCurveTo(16.462918, 14.091078, 16.202073, 13.977063, 16.109820, 14.065860);
	patternContext.bezierCurveTo(16.016890, 14.155310, 16.117920, 14.297886, 16.792600, 15.029001);
	patternContext.bezierCurveTo(17.988624, 16.325161, 18.191643, 16.482233, 18.399865, 16.272520);
	patternContext.bezierCurveTo(18.447185, 16.224870, 18.526740, 16.211300, 18.576662, 16.242370);
	patternContext.bezierCurveTo(18.635372, 16.278910, 18.468876, 16.481408, 18.105336, 16.815626);
	patternContext.bezierCurveTo(17.374764, 17.487273, 17.185196, 17.634783, 17.185196, 17.531621);
	patternContext.moveTo(16.215600, 13.269285);
	patternContext.bezierCurveTo(16.293360, 12.957246, 15.942314, 12.306720, 15.396465, 11.751341);
	patternContext.bezierCurveTo(14.624428, 10.965826, 14.206906, 10.839710, 13.734189, 11.249236);
	patternContext.lineTo(13.522614, 11.432527);
	patternContext.lineTo(14.633083, 12.651594);
	patternContext.lineTo(15.743552, 13.870661);
	patternContext.lineTo(15.955643, 13.666009);
	patternContext.bezierCurveTo(16.072294, 13.553451, 16.189275, 13.374925, 16.215600, 13.269285);
	patternContext.moveTo(20.398219, 14.654271);
	patternContext.bezierCurveTo(20.375199, 14.616761, 20.408119, 14.542776, 20.471469, 14.489858);
	patternContext.bezierCurveTo(20.627379, 14.359538, 20.615778, 14.111542, 20.440209, 13.821560);
	patternContext.bezierCurveTo(20.101087, 13.261449, 17.007625, 8.837032, 16.889393, 8.743012);
	patternContext.bezierCurveTo(16.813343, 8.682532, 16.657057, 8.656352, 16.510201, 8.679492);
	patternContext.bezierCurveTo(16.372799, 8.701142, 16.245528, 8.694652, 16.227375, 8.665062);
	patternContext.bezierCurveTo(16.209225, 8.635482, 16.530364, 8.378159, 16.941022, 8.093236);
	patternContext.bezierCurveTo(17.351680, 7.808312, 17.932637, 7.401081, 18.232038, 7.188277);
	patternContext.lineTo(18.776403, 6.801362);
	patternContext.lineTo(19.320637, 7.590050);
	patternContext.bezierCurveTo(20.035902, 8.626591, 20.058314, 8.677429, 19.611966, 8.250861);
	patternContext.bezierCurveTo(19.178310, 7.836422, 18.829518, 7.639091, 18.530637, 7.639091);
	patternContext.bezierCurveTo(18.306563, 7.639091, 17.649063, 8.016789, 17.649657, 8.145166);
	patternContext.bezierCurveTo(17.650121, 8.246187, 19.254969, 10.551124, 19.347069, 10.583052);
	patternContext.bezierCurveTo(19.385619, 10.596412, 19.475561, 10.517582, 19.546940, 10.407865);
	patternContext.bezierCurveTo(19.668565, 10.220913, 19.668393, 10.182740, 19.544240, 9.800317);
	patternContext.bezierCurveTo(19.471350, 9.575883, 19.324897, 9.243045, 19.218782, 9.060676);
	patternContext.bezierCurveTo(18.824847, 8.383663, 19.135562, 8.768094, 20.067747, 10.111072);
	patternContext.bezierCurveTo(21.264818, 11.835655, 21.410199, 12.075062, 20.945874, 11.557139);
	patternContext.bezierCurveTo(20.389006, 10.935990, 19.959212, 10.716126, 19.666600, 10.902716);
	patternContext.bezierCurveTo(19.581600, 10.956916, 19.728300, 11.216847, 20.347730, 12.109638);
	patternContext.bezierCurveTo(20.781932, 12.735452, 21.223453, 13.304411, 21.328888, 13.373989);
	patternContext.bezierCurveTo(21.512662, 13.495265, 21.532444, 13.490872, 21.807319, 13.267747);
	patternContext.bezierCurveTo(21.965021, 13.139736, 22.138986, 12.950829, 22.193910, 12.847955);
	patternContext.bezierCurveTo(22.339416, 12.575411, 22.269580, 11.884557, 22.039246, 11.317866);
	patternContext.bezierCurveTo(21.930462, 11.050230, 21.852528, 10.831255, 21.866057, 10.831255);
	patternContext.bezierCurveTo(21.904957, 10.831255, 23.060665, 12.779844, 23.057594, 12.840250);
	patternContext.bezierCurveTo(23.056094, 12.870080, 22.716906, 13.127723, 22.303879, 13.412793);
	patternContext.bezierCurveTo(21.890852, 13.697863, 21.302538, 14.109159, 20.996515, 14.326785);
	patternContext.bezierCurveTo(20.690492, 14.544410, 20.421277, 14.691777, 20.398259, 14.654267);
	patternContext.fill();
            
        return context.createPattern(patternCanvas, 'repeat');
    }
}
